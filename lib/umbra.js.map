{"version":3,"file":"umbra.js","sources":["../../umbra-test-runner/lib/Async/AsyncPromisifier.js","../../umbra-test-runner/lib/Async/TimeoutPromisifier.js","../../umbra-test-runner/lib/Config/TestRunnerConfig.js","../../umbra-test-runner/lib/Config/DefaultTestRunnerConfig.js","../../umbra-test-runner/lib/EventEmitter/SimpleEventEmitter.js","../../umbra-test-runner/lib/QueueStack.js","../../umbra-test-runner/lib/TestRunner.js","../../umbra-test-runner/lib/index.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/DeepEqual.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/ArrayUtils.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/SimpleEventEmitter.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/SortedArray.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/Stringify.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/ArgumentValidator.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/index.js","../../umbra-assert/lib/Assert.js","../../umbra-assert/lib/Expect.js","../../umbra-assert/lib/index.js","../../umbra-util/lib/DeepEqual.js","../../umbra-util/lib/ArrayUtils.js","../../umbra-util/lib/SimpleEventEmitter.js","../../umbra-util/lib/SortedArray.js","../../umbra-util/lib/Stringify.js","../../umbra-util/lib/ArgumentValidator.js","../../umbra-util/lib/index.js","../../umbra-mock/lib/Capture.js","../../umbra-mock/lib/InternalMocker.js","../../umbra-mock/lib/StackTraceParser.js","../../umbra-mock/lib/MockedFunction.js","../../umbra-mock/lib/Range.js","../../umbra-mock/lib/OnGoingStubs.js","../../umbra-mock/lib/Verify.js","../../umbra-mock/lib/UmbraTestRunnerIntegration.js","../../umbra-mock/lib/Mock.js","../../umbra-mock/lib/index.js","index.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AsyncPromisifier = void 0;\r\n/**\r\n * A class that massages synchronous and some async functions into promises. Expects very specific function signatures.\r\n */\r\nclass AsyncPromisifier {\r\n    /**\r\n     * Takes a function and executes it as a Promise.\r\n     *\r\n     * Supports:\r\n     *  - Promises\r\n     *  - \"done\" callback\r\n     *  - sync returns\r\n     *\r\n     * @param {(done) => any} fn\r\n     * @returns {Promise<T>}\r\n     */\r\n    exec(fn, name) {\r\n        Object.defineProperty(fn, \"name\", { value: name, writable: false });\r\n        /*\r\n         * 2nd param is \"done\" -- if the user fn has exactly two params then it is expected that they are using a\r\n         * classic asynchronous function and will call \"done\" when complete.\r\n         */\r\n        if (fn.length === 1) {\r\n            return new Promise((resolve, reject) => {\r\n                fn((result) => {\r\n                    if (result instanceof Error) {\r\n                        reject(result);\r\n                    }\r\n                    else {\r\n                        resolve(result);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            try {\r\n                return Promise.resolve(fn());\r\n            }\r\n            catch (e) {\r\n                return Promise.reject(e);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.AsyncPromisifier = AsyncPromisifier;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXN5bmNQcm9taXNpZmllci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Bc3luYy9Bc3luY1Byb21pc2lmaWVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQVlBOztHQUVHO0FBQ0gsTUFBTSxnQkFBZ0I7SUFFbEI7Ozs7Ozs7Ozs7T0FVRztJQUNILElBQUksQ0FBSSxFQUEyRCxFQUFFLElBQVk7UUFFN0UsTUFBTSxDQUFDLGNBQWMsQ0FBQyxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztRQUNwRTs7O1dBR0c7UUFDSCxJQUFJLEVBQUUsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ2pCLE9BQU8sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQUU7Z0JBQ2YsRUFBRyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7b0JBQy9CLElBQUksTUFBTSxZQUFZLEtBQUssRUFBRTt3QkFDekIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO3FCQUNsQjt5QkFBTTt3QkFDSCxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7cUJBQ25CO2dCQUNMLENBQUMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQyxDQUFDLENBQUM7U0FDTjthQUFNO1lBQ0gsSUFBSTtnQkFDQSxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQW9CLEVBQUcsRUFBRSxDQUFDLENBQUM7YUFDcEQ7WUFBQyxPQUFPLENBQUMsRUFBRTtnQkFDUixPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDNUI7U0FDSjtJQUNMLENBQUM7Q0FDSjtBQUVRLDRDQUFnQiJ9","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TimeoutPromisifier = exports.TimeoutError = void 0;\r\n/**\r\n * Internal error type for differentiating timeouts from other promise failures.\r\n */\r\nclass TimeoutError extends Error {\r\n    constructor(message, elapsedMs, timeoutMs) {\r\n        super(message);\r\n        this.timeoutMs = timeoutMs;\r\n    }\r\n}\r\nexports.TimeoutError = TimeoutError;\r\n/**\r\n * A simple promise wrapper, which enables promises to \"timeout\". It does *NOT* actually manipulate or otherwise\r\n * interrupt long-running tasks, but rather simply ignores their result if they eventually do complete.\r\n */\r\nclass TimeoutPromisifier {\r\n    /**\r\n     * Wraps the Promise in another Promise, which will resolve/reject based on the former, or if a given amount of time\r\n     * has passed.\r\n     *\r\n     * @param promise\r\n     * @param timeoutMs\r\n     * @return A new promise, which will resolve if the given promise resolves, or reject if the timeout occurs first.\r\n     */\r\n    wrap(promise, timeoutMs) {\r\n        if (timeoutMs <= 0) {\r\n            return promise;\r\n        }\r\n        const startTime = Date.now();\r\n        let timerId = null;\r\n        const timeoutPromise = new Promise((resolve, reject) => {\r\n            timerId = setTimeout(() => {\r\n                const elapsedMs = Date.now() - startTime;\r\n                reject(new TimeoutError(`Async task timeout exceeded! Elapsed: ${elapsedMs}, timeout: ${timeoutMs}ms.`, elapsedMs, timeoutMs));\r\n            }, timeoutMs);\r\n        });\r\n        promise.catch(() => {\r\n            clearTimeout(timerId);\r\n        });\r\n        // timeoutPromise will never resolve, thus we can safely assume that the result is the original one.\r\n        return Promise.race([promise, timeoutPromise]).then((result) => {\r\n            clearTimeout(timerId);\r\n            return result;\r\n        });\r\n    }\r\n}\r\nexports.TimeoutPromisifier = TimeoutPromisifier;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGltZW91dFByb21pc2lmaWVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0FzeW5jL1RpbWVvdXRQcm9taXNpZmllci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7R0FFRztBQUNILE1BQU0sWUFBYSxTQUFRLEtBQUs7SUFJNUIsWUFBWSxPQUFlLEVBQUUsU0FBaUIsRUFBRSxTQUFpQjtRQUM3RCxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDZixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztJQUMvQixDQUFDO0NBQ0o7QUEyQ08sb0NBQVk7QUF6Q3BCOzs7R0FHRztBQUNILE1BQU0sa0JBQWtCO0lBRXBCOzs7Ozs7O09BT0c7SUFDSCxJQUFJLENBQUksT0FBbUIsRUFBRSxTQUFpQjtRQUMxQyxJQUFJLFNBQVMsSUFBSSxDQUFDLEVBQUU7WUFDaEIsT0FBTyxPQUFPLENBQUM7U0FDbEI7UUFFRCxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDN0IsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ25CLE1BQU0sY0FBYyxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1lBQ25ELE9BQU8sR0FBRyxVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUN0QixNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsU0FBUyxDQUFDO2dCQUN6QyxNQUFNLENBQUMsSUFBSSxZQUFZLENBQUMseUNBQXlDLFNBQVMsY0FBYyxTQUFTLEtBQUssRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQztZQUNuSSxDQUFDLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDbEIsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRTtZQUNmLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMxQixDQUFDLENBQUMsQ0FBQztRQUVILG9HQUFvRztRQUNwRyxPQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLEVBQUUsY0FBYyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFlLEVBQUUsRUFBRTtZQUNwRSxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDdEIsT0FBTyxNQUFXLENBQUM7UUFDdkIsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0NBRUo7QUFFcUIsZ0RBQWtCIn0=","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.mergeConfig = void 0;\r\n/**\r\n * A helper method to merge multiple sources of configuration.\r\n *\r\n * @param to - The base configuration object to be merged into.\r\n * @param from - The configuration object to merge from.\r\n */\r\nfunction mergeConfig(to, from) {\r\n    if (!from || typeof from !== \"object\") {\r\n        return to;\r\n    }\r\n    if (typeof to.timeoutMs === \"object\" && typeof from.timeoutMs === \"object\") {\r\n        for (const entryType of [\"it\", \"before\", \"beforeEach\", \"after\", \"afterEach\"]) {\r\n            if (typeof from.timeoutMs[entryType] === \"number\") {\r\n                to.timeoutMs[entryType] = from.timeoutMs[entryType];\r\n            }\r\n        }\r\n    }\r\n    else if (typeof from.timeoutMs !== \"undefined\") {\r\n        to.timeoutMs = from.timeoutMs;\r\n    }\r\n    if (to.stopOnFirstFail !== from.stopOnFirstFail) {\r\n        to.stopOnFirstFail = from.stopOnFirstFail;\r\n    }\r\n    return to;\r\n}\r\nexports.mergeConfig = mergeConfig;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGVzdFJ1bm5lckNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Db25maWcvVGVzdFJ1bm5lckNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUE4QkE7Ozs7O0dBS0c7QUFDSCxTQUFTLFdBQVcsQ0FBQyxFQUFvQixFQUFFLElBQWdDO0lBQ3ZFLElBQUksQ0FBQyxJQUFJLElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxFQUFFO1FBQ25DLE9BQU8sRUFBRSxDQUFDO0tBQ2I7SUFFRCxJQUFJLE9BQU8sRUFBRSxDQUFDLFNBQVMsS0FBSyxRQUFRLElBQUksT0FBTyxJQUFJLENBQUMsU0FBUyxLQUFLLFFBQVEsRUFBRTtRQUN4RSxLQUFLLE1BQU0sU0FBUyxJQUFJLENBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRSxZQUFZLEVBQUUsT0FBTyxFQUFFLFdBQVcsQ0FBQyxFQUFFO1lBQzFFLElBQUksT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxLQUFLLFFBQVEsRUFBRTtnQkFDL0MsRUFBRSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO2FBQ3ZEO1NBQ0o7S0FDSjtTQUFNLElBQUksT0FBTyxJQUFJLENBQUMsU0FBUyxLQUFLLFdBQVcsRUFBRTtRQUM5QyxFQUFFLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7S0FDakM7SUFFRCxJQUFJLEVBQUUsQ0FBQyxlQUFlLEtBQUssSUFBSSxDQUFDLGVBQWUsRUFBRTtRQUM3QyxFQUFFLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUM7S0FDN0M7SUFFRCxPQUFPLEVBQUUsQ0FBQztBQUNkLENBQUM7QUFFd0Msa0NBQVcifQ==","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DefaultTestRunnerConfig = void 0;\r\n/**\r\n * Default configuration to be used if the user does not explicitly set configuration.\r\n */\r\nconst DefaultTestRunnerConfig = {\r\n    timeoutMs: 100,\r\n    stopOnFirstFail: false\r\n};\r\nexports.DefaultTestRunnerConfig = DefaultTestRunnerConfig;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVmYXVsdFRlc3RSdW5uZXJDb25maWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvQ29uZmlnL0RlZmF1bHRUZXN0UnVubmVyQ29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBOztHQUVHO0FBQ0gsTUFBTSx1QkFBdUIsR0FBcUI7SUFDOUMsU0FBUyxFQUFFLEdBQUc7SUFDZCxlQUFlLEVBQUUsS0FBSztDQUN6QixDQUFDO0FBRU0sMERBQXVCIn0=","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.without = exports.union = exports.SimpleEventEmitter = void 0;\r\n/**\r\n * Simple array union with automatic creation if the arrays don't exist. This is a nice optimization which\r\n * enables the event emitter to lazy-instantiate event callback arrays.\r\n *\r\n * @param arrayA\r\n * @param arrayB\r\n * @return arrayA, modified to include all items from arrayB that weren't already in arrayA. If arrayA doesn't exist,\r\n *         an empty array is returned.\r\n */\r\nfunction union(arrayA, arrayB) {\r\n    if (!arrayA) {\r\n        return arrayB ? arrayB : [];\r\n    }\r\n    if (!arrayB) {\r\n        return arrayA;\r\n    }\r\n    for (const item of arrayB) {\r\n        if (arrayA.indexOf(item) === -1) {\r\n            arrayA.push(item);\r\n        }\r\n    }\r\n    return arrayA;\r\n}\r\nexports.union = union;\r\n/**\r\n * Simple array item removal with automatic creation if the array doesn't exist. This is a nice optimization which\r\n * enables the event emitter to lazy-instantiate event callback arrays.\r\n *\r\n * DOES NOT REMOVE DUPLICATE VALUES!\r\n *\r\n * @param array - The array from which to remove an item.\r\n * @param item - The item to remove from the given array.\r\n * @return The original array, modified to remove the item if it existed. If the array doesn't exist, an empty array\r\n *         is returned.\r\n */\r\nfunction without(array, item) {\r\n    if (!array) {\r\n        return [];\r\n    }\r\n    const indexOfItem = array.indexOf(item);\r\n    if (indexOfItem !== -1) {\r\n        array.splice(indexOfItem, 1);\r\n    }\r\n    return array;\r\n}\r\nexports.without = without;\r\n/**\r\n * A ridiculously simple event emitter with typesafety.\r\n *\r\n * TODO: Maybe opensource this under its own package in the future.\r\n */\r\nclass SimpleEventEmitter {\r\n    constructor() {\r\n        // All event arrays are dynamically filled when calling on/onc.\r\n        this.onListeners = {};\r\n        this.onceListeners = {};\r\n    }\r\n    on(event, callback) {\r\n        (this.onListeners[event]) = union(this.onListeners[event], [callback]);\r\n    }\r\n    once(event, callback) {\r\n        this.onceListeners[event] = union(this.onceListeners[event], [callback]);\r\n    }\r\n    off(event, callback) {\r\n        this.onListeners[event] = without(this.onListeners[event], callback);\r\n        this.onceListeners[event] = without(this.onceListeners[event], callback);\r\n    }\r\n    emit(event, ...args) {\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n    }\r\n    /**\r\n     * Evaluates each function synchronously, but waits for all to asynchronously complete before returning.\r\n     *\r\n     * TODO: Find a better name for this.\r\n     *\r\n     * @param event - The event to emit.\r\n     * @param args - All args to be emitted for the event.\r\n     */\r\n    emitAndWaitForCompletion(event, ...args) {\r\n        const promises = [];\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n        return Promise.all(promises).then((results) => {\r\n            // Intentionally blank, as we want to swallow all actual \"valid\" values.\r\n            return;\r\n        });\r\n    }\r\n}\r\nexports.SimpleEventEmitter = SimpleEventEmitter;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2ltcGxlRXZlbnRFbWl0dGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0V2ZW50RW1pdHRlci9TaW1wbGVFdmVudEVtaXR0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBR0E7Ozs7Ozs7O0dBUUc7QUFDSCxTQUFTLEtBQUssQ0FBSSxNQUFXLEVBQUUsTUFBVztJQUN0QyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsT0FBTyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0tBQy9CO0lBRUQsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULE9BQU8sTUFBTSxDQUFDO0tBQ2pCO0lBRUQsS0FBSyxNQUFNLElBQUksSUFBSSxNQUFNLEVBQUU7UUFDdkIsSUFBSSxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO1lBQzdCLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDckI7S0FDSjtJQUVELE9BQU8sTUFBTSxDQUFDO0FBQ2xCLENBQUM7QUF5R3FELHNCQUFLO0FBdkczRDs7Ozs7Ozs7OztHQVVHO0FBQ0gsU0FBUyxPQUFPLENBQUksS0FBVSxFQUFFLElBQU87SUFDbkMsSUFBSSxDQUFDLEtBQUssRUFBRTtRQUNSLE9BQU8sRUFBRSxDQUFDO0tBQ2I7SUFFRCxNQUFNLFdBQVcsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3hDLElBQUksV0FBVyxLQUFLLENBQUMsQ0FBQyxFQUFFO1FBQ3BCLEtBQUssQ0FBQyxNQUFNLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQyxDQUFDO0tBQ2hDO0lBRUQsT0FBTyxLQUFLLENBQUM7QUFDakIsQ0FBQztBQWlGNEQsMEJBQU87QUEvRXBFOzs7O0dBSUc7QUFDSCxNQUFNLGtCQUFrQjtJQUF4QjtRQUVJLCtEQUErRDtRQUM5QyxnQkFBVyxHQUFxRSxF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","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.QueueStack = void 0;\r\n/**\r\n * A very creatively named Queue of Stacks, with some simple helper methods for operating on them.\r\n */\r\nclass QueueStack {\r\n    constructor() {\r\n        this.queue = [];\r\n    }\r\n    /**\r\n     * Pushes the given element onto the end of the top stack, on the top queue.\r\n     * @param element\r\n     */\r\n    pushOnTop(element) {\r\n        if (this.queue.length === 0) {\r\n            this.queue.push([element]);\r\n        }\r\n        else {\r\n            this.queue[0].push(element);\r\n        }\r\n    }\r\n    /**\r\n     * Pushes a new stack onto the end of the queue.\r\n     *\r\n     * @param stack\r\n     */\r\n    pushStack(stack) {\r\n        this.queue.push(stack);\r\n    }\r\n    /**\r\n     * Removes the last stack from the queue and returns it.\r\n     */\r\n    popStack() {\r\n        return this.queue.pop();\r\n    }\r\n    /**\r\n     * Removes the first stack from the queue and returns it.\r\n     */\r\n    shiftStack() {\r\n        return this.queue.shift();\r\n    }\r\n    /**\r\n     * Traverses the queue stack, starting at the top, first element and proceeding down level by level.\r\n     *\r\n     * @param callback\r\n     */\r\n    traverseLevelOrder(callback) {\r\n        let promise = Promise.resolve();\r\n        for (let i = 0; i < this.queue.length; i++) {\r\n            const queue = this.queue[i];\r\n            for (let j = 0; j < queue.length; j++) {\r\n                promise = promise.then(() => callback(queue[j]));\r\n            }\r\n        }\r\n        return promise;\r\n    }\r\n    /**\r\n     * Traverses the queue stack, starting at the bottom, last element and proceeding up level by level.\r\n     *\r\n     * @param callback\r\n     */\r\n    traverseInverseLevelOrder(callback) {\r\n        let promise = Promise.resolve();\r\n        for (let i = this.queue.length - 1; i >= 0; i--) {\r\n            const queue = this.queue[i];\r\n            for (let j = queue.length - 1; j >= 0; j--) {\r\n                promise = promise.then(() => callback(queue[j]));\r\n            }\r\n        }\r\n        return promise;\r\n    }\r\n    /**\r\n     * Resets the stack, removing all previously pushed queues and elements.\r\n     */\r\n    reset() {\r\n        this.queue = [];\r\n    }\r\n}\r\nexports.QueueStack = QueueStack;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUXVldWVTdGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9RdWV1ZVN0YWNrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBOztHQUVHO0FBQ0gsTUFBTSxVQUFVO0lBQWhCO1FBRVksVUFBSyxHQUFVLEVBQUUsQ0FBQztJQTZFOUIsQ0FBQztJQTNFRzs7O09BR0c7SUFDSCxTQUFTLENBQUMsT0FBVTtRQUNoQixJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUN6QixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7U0FDOUI7YUFBTTtZQUNILElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQy9CO0lBQ0wsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxTQUFTLENBQUMsS0FBVTtRQUNoQixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRUQ7O09BRUc7SUFDSCxRQUFRO1FBQ0osT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQzVCLENBQUM7SUFFRDs7T0FFRztJQUNILFVBQVU7UUFDTixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxrQkFBa0IsQ0FBQyxRQUF1QztRQUN0RCxJQUFJLE9BQU8sR0FBRyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDaEMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3hDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDNUIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQ25DLE9BQU8sR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3BEO1NBQ0o7UUFFRCxPQUFPLE9BQU8sQ0FBQztJQUNuQixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILHlCQUF5QixDQUFDLFFBQThCO1FBQ3BELElBQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNoQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzdDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDNUIsS0FBSyxJQUFJLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUN4QyxPQUFPLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNwRDtTQUNKO1FBRUQsT0FBTyxPQUFPLENBQUM7SUFDbkIsQ0FBQztJQUVEOztPQUVHO0lBQ0gsS0FBSztRQUNELElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQ3BCLENBQUM7Q0FDSjtBQUVPLGdDQUFVIn0=","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TestRunner = void 0;\r\nconst AsyncPromisifier_1 = require(\"./Async/AsyncPromisifier\");\r\nconst TimeoutPromisifier_1 = require(\"./Async/TimeoutPromisifier\");\r\nconst TestRunnerConfig_1 = require(\"./Config/TestRunnerConfig\");\r\nconst DefaultTestRunnerConfig_1 = require(\"./Config/DefaultTestRunnerConfig\");\r\nconst SimpleEventEmitter_1 = require(\"./EventEmitter/SimpleEventEmitter\");\r\nconst QueueStack_1 = require(\"./QueueStack\");\r\nconst QueueStackTypes = [\"before\", \"beforeEach\", \"after\", \"afterEach\"];\r\n/**\r\n * before -> beforeEach -> beforeHook -> it -> afterHook -> afterEach -> after\r\n */\r\nclass TestRunner {\r\n    constructor(config, eventEmitter = new SimpleEventEmitter_1.SimpleEventEmitter()) {\r\n        this.asyncPromisifier = new AsyncPromisifier_1.AsyncPromisifier();\r\n        this.timeoutPromisifier = new TimeoutPromisifier_1.TimeoutPromisifier();\r\n        this.testQueueStack = [];\r\n        this.queueStacks = {\r\n            \"before\": new QueueStack_1.QueueStack(),\r\n            \"beforeEach\": new QueueStack_1.QueueStack(),\r\n            \"after\": new QueueStack_1.QueueStack(),\r\n            \"afterEach\": new QueueStack_1.QueueStack()\r\n        };\r\n        this.currentTest = null;\r\n        this.testRunCancelled = false;\r\n        // This madness is needed to support function/object hybrids, which is remarkably useful but obnoxious in TS.\r\n        this.describe = ((title, execBlock) => {\r\n            this.throwIfTestInProgress(\"describe\");\r\n            this.pushToCurrentTestQueue(\"describe\", title, execBlock);\r\n        });\r\n        this.describeOnly = (title, execBlock) => {\r\n            this.throwIfTestInProgress(\"describe.only\");\r\n            this.pushToCurrentTestQueue(\"describe\", title, execBlock, true);\r\n        };\r\n        this.describeSkip = (title, execBlock, options) => {\r\n            this.throwIfTestInProgress(\"describe.skip\");\r\n            this.pushToCurrentTestQueue(\"describe\", title, execBlock, false, undefined, true);\r\n        };\r\n        this.it = ((title, execBlock, options) => {\r\n            this.throwIfTestInProgress(\"it\");\r\n            this.pushToCurrentTestQueue(\"it\", title, execBlock, false, options ? options.timeoutMs : undefined);\r\n        });\r\n        this.itOnly = (title, execBlock, options) => {\r\n            this.throwIfTestInProgress(\"it.only\");\r\n            this.pushToCurrentTestQueue(\"it\", title, execBlock, true, options ? options.timeoutMs : undefined);\r\n        };\r\n        this.itSkip = (title, execBlock, options) => {\r\n            this.throwIfTestInProgress(\"it.skip\");\r\n            this.pushToCurrentTestQueue(\"it\", title, execBlock, false, undefined, true);\r\n        };\r\n        this.runNextTestQueue = () => __awaiter(this, void 0, void 0, function* () {\r\n            if (this.testQueueStack.length === 0) {\r\n                return;\r\n            }\r\n            let evaluatedTest = false;\r\n            const queue = this.testQueueStack.shift();\r\n            if (queue.firstOnlyIndex !== null) {\r\n                evaluatedTest = yield this.executeTest(queue, queue.tests[queue.firstOnlyIndex]);\r\n            }\r\n            else {\r\n                for (let i = 0; i < queue.tests.length; i++) {\r\n                    evaluatedTest = (yield this.executeTest(queue, queue.tests[i])) || evaluatedTest;\r\n                }\r\n            }\r\n            if (evaluatedTest) {\r\n                yield this.evaluateQueueWithTimeout(\"after\");\r\n            }\r\n        });\r\n        this.throwIfTestInProgress = (name) => {\r\n            if (this.currentTest) {\r\n                throw new Error(`Cannot add an ${name} block while executing a test!`);\r\n            }\r\n        };\r\n        this.resetRunResults = () => {\r\n            this.runResults = {\r\n                elapsedTimeMs: 0,\r\n                totalTests: 0,\r\n                totalSuccesses: 0,\r\n                totalFailures: 0,\r\n                totalTimeouts: 0,\r\n                failureInfo: [],\r\n                timeoutInfo: []\r\n            };\r\n        };\r\n        this.config = TestRunnerConfig_1.mergeConfig(DefaultTestRunnerConfig_1.DefaultTestRunnerConfig, config);\r\n        this.eventEmitter = eventEmitter;\r\n        this.it.only = this.itOnly;\r\n        this.describe.only = this.describeOnly;\r\n        this.it.skip = this.itSkip;\r\n        this.describe.skip = this.describeSkip;\r\n        this.resetRunResults();\r\n    }\r\n    /**\r\n     * Sets the current file name for all subsequent calls to describe/it/etc. This is used for logging where tests\r\n     * are sourced from.\r\n     */\r\n    setCurrentFile(absolutePath) {\r\n        this.lastFilePathSet = absolutePath;\r\n    }\r\n    on(event, callback) {\r\n        this.eventEmitter.on(event, callback);\r\n    }\r\n    once(event, callback) {\r\n        this.eventEmitter.once(event, callback);\r\n    }\r\n    off(event, callback) {\r\n        this.eventEmitter.off(event, callback);\r\n    }\r\n    before(execBlock) {\r\n        this.throwIfTestInProgress(\"before\");\r\n        this.queueStacks[\"before\"].pushOnTop(execBlock);\r\n    }\r\n    beforeEach(execBlock) {\r\n        this.throwIfTestInProgress(\"beforeEach\");\r\n        this.queueStacks[\"beforeEach\"].pushOnTop(execBlock);\r\n    }\r\n    after(execBlock) {\r\n        this.throwIfTestInProgress(\"after\");\r\n        this.queueStacks[\"after\"].pushOnTop(execBlock);\r\n    }\r\n    afterEach(execBlock) {\r\n        this.throwIfTestInProgress(\"afterEach\");\r\n        this.queueStacks[\"afterEach\"].pushOnTop(execBlock);\r\n    }\r\n    /**\r\n     * Triggers a test run based on the describes and its added previously.\r\n     *\r\n     * If a test is already in progress, an error will be returned.\r\n     */\r\n    run() {\r\n        if (this.currentRun) {\r\n            throw new Error(\"Can't start a test run if one is already in progress!\");\r\n        }\r\n        const startTime = Date.now();\r\n        this.currentRun = this.runNextTestQueue().then(() => {\r\n            const results = this.runResults;\r\n            results.elapsedTimeMs = Date.now() - startTime;\r\n            this.currentRun = null;\r\n            this.resetRunResults();\r\n            return results;\r\n        }).catch((e) => {\r\n            this.currentRun = null;\r\n            throw e;\r\n        });\r\n        return this.currentRun;\r\n    }\r\n    /**\r\n     * If a test is in progress, the current information for the test will be returned.\r\n     *\r\n     * If not, an error will be thrown.\r\n     */\r\n    getCurrentTestInfo() {\r\n        if (!this.currentTest) {\r\n            throw new Error(\"Can't obtain TestInfo if not actively in a test!\");\r\n        }\r\n        return this.currentTest;\r\n    }\r\n    /**\r\n     * Resets all pending state, including all attached before, beforeEach, after, afterEach, tests, describes, etc.\r\n     *\r\n     * If a test run is already in progress, an error will be thrown.\r\n     */\r\n    reset() {\r\n        if (this.currentRun) {\r\n            throw new Error(\"Can't reset if a test run is already in progress!\");\r\n        }\r\n        this.resetRunResults();\r\n        this.testRunCancelled = false;\r\n        this.testQueueStack = [];\r\n        for (const type of QueueStackTypes) {\r\n            this.queueStacks[type].reset();\r\n        }\r\n    }\r\n    cancel() {\r\n        if (!this.currentRun) {\r\n            return Promise.reject(new Error(\"Not currently executing a test run! Unable to cancel accordingly.\"));\r\n        }\r\n        this.testRunCancelled = true;\r\n        return this.currentRun.then((results) => {\r\n            this.reset();\r\n            return results;\r\n        });\r\n    }\r\n    pushToCurrentTestQueue(type, title, execBlock, only, timeoutMs, skip) {\r\n        if (this.testQueueStack.length === 0) {\r\n            const testQueue = {\r\n                titleChain: [],\r\n                tests: [],\r\n                evaluatedBefores: false,\r\n                skipAllTests: type === \"describe\" && skip,\r\n                firstOnlyIndex: only ? 0 : null\r\n            };\r\n            this.testQueueStack.push(testQueue);\r\n        }\r\n        const currentEntry = this.testQueueStack[this.testQueueStack.length - 1];\r\n        const testEntry = {\r\n            title: title,\r\n            type: type,\r\n            callback: execBlock,\r\n            absoluteFilePath: this.lastFilePathSet,\r\n            skip: skip || currentEntry.skipAllTests\r\n        };\r\n        if (only && currentEntry.firstOnlyIndex === null) {\r\n            currentEntry.firstOnlyIndex = currentEntry.tests.length;\r\n        }\r\n        if (timeoutMs > 0) {\r\n            testEntry.timeoutMs = timeoutMs;\r\n        }\r\n        currentEntry.tests.push(testEntry);\r\n    }\r\n    executeTest(queue, entry) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (entry.absoluteFilePath !== this.currentlyExecutingFilePath) {\r\n                this.currentlyExecutingFilePath = entry.absoluteFilePath;\r\n                this.eventEmitter.emit(\"activeFileChanged\", this.currentlyExecutingFilePath);\r\n            }\r\n            if (this.testRunCancelled) {\r\n                return false;\r\n            }\r\n            else if (entry.type === \"describe\") {\r\n                return this.evaluateDescribe(queue, entry);\r\n            }\r\n            else {\r\n                return this.evaluateTest(queue, entry);\r\n            }\r\n        });\r\n    }\r\n    evaluateDescribe(queue, entry) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.testQueueStack.push({\r\n                titleChain: [].concat(queue.titleChain, entry.title),\r\n                tests: [],\r\n                evaluatedBefores: false,\r\n                skipAllTests: entry.skip,\r\n                firstOnlyIndex: null\r\n            });\r\n            for (const type of QueueStackTypes) {\r\n                this.queueStacks[type].pushStack([]);\r\n            }\r\n            this.eventEmitter.emit(\"beforeDescribe\", entry.title);\r\n            const startTime = Date.now();\r\n            yield this.asyncPromisifier.exec(entry.callback, \"describe\");\r\n            yield this.runNextTestQueue();\r\n            for (const type of QueueStackTypes) {\r\n                this.queueStacks[type].shiftStack();\r\n            }\r\n            const describeDurationMs = Date.now() - startTime;\r\n            this.eventEmitter.emit(\"afterDescribe\", entry.title, describeDurationMs);\r\n            return false;\r\n        });\r\n    }\r\n    evaluateTest(queue, entry) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (entry.skip) {\r\n                this.eventEmitter.emit(\"testSkipped\", entry.title);\r\n                return false;\r\n            }\r\n            if (!queue.evaluatedBefores) {\r\n                queue.evaluatedBefores = true;\r\n                yield this.evaluateQueueWithTimeout(\"before\");\r\n            }\r\n            yield this.evaluateQueueWithTimeout(\"beforeEach\");\r\n            this.eventEmitter.emit(\"beforeTest\", entry.title);\r\n            this.currentTest = entry;\r\n            try {\r\n                yield this.executeTestCallback(entry, queue.titleChain);\r\n                yield this.evaluateQueueWithTimeout(\"afterEach\");\r\n            }\r\n            finally {\r\n                this.runResults.totalTests++;\r\n                this.currentTest = null;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    executeTestCallback(entry, titleChain) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const startTime = Date.now();\r\n            const timeoutValue = entry.timeoutMs >= 0 ? entry.timeoutMs : this.getTimeoutValue(\"it\");\r\n            try {\r\n                yield this.timeoutPromisifier.wrap(this.asyncPromisifier.exec(entry.callback, \"Test: \" + entry.title), timeoutValue);\r\n                yield this.eventEmitter.emitAndWaitForCompletion(\"beforeTestSuccess\", entry.title);\r\n                this.runResults.totalSuccesses++;\r\n                const testDurationMs = Date.now() - startTime;\r\n                this.eventEmitter.emit(\"testSuccess\", entry.title, testDurationMs);\r\n            }\r\n            catch (error) {\r\n                if (error instanceof TimeoutPromisifier_1.TimeoutError) {\r\n                    this.runResults.totalTimeouts++;\r\n                    this.runResults.timeoutInfo.push({\r\n                        describeChain: titleChain,\r\n                        title: entry.title,\r\n                        elapsedMs: error.elapsedMs,\r\n                        timeoutMs: error.timeoutMs\r\n                    });\r\n                    this.eventEmitter.emit(\"testTimeout\", entry.title, error.elapsedMs, error.timeoutMs);\r\n                }\r\n                else {\r\n                    this.runResults.totalFailures++;\r\n                    this.runResults.failureInfo.push({\r\n                        describeChain: titleChain,\r\n                        title: entry.title,\r\n                        error: error\r\n                    });\r\n                    this.eventEmitter.emit(\"testFail\", entry.title, error, Date.now() - startTime);\r\n                }\r\n                // If we want to stop additional execution on the first fail, just cancel the rest of the run.\r\n                if (this.config.stopOnFirstFail) {\r\n                    this.testRunCancelled = true;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    evaluateQueueWithTimeout(type) {\r\n        return this.timeoutPromisifier.wrap(this.evaluateQueue(type), this.getTimeoutValue(type));\r\n    }\r\n    evaluateQueue(type) {\r\n        const queueStack = this.queueStacks[type];\r\n        if (type === \"before\" || type === \"beforeEach\") {\r\n            return queueStack.traverseLevelOrder((callback) => this.asyncPromisifier.exec(callback, type));\r\n        }\r\n        else {\r\n            return queueStack.traverseInverseLevelOrder((callback) => this.asyncPromisifier.exec(callback, type));\r\n        }\r\n    }\r\n    getTimeoutValue(type) {\r\n        const timeout = this.config.timeoutMs;\r\n        return typeof timeout === \"number\" ? timeout : timeout[type];\r\n    }\r\n}\r\nexports.TestRunner = TestRunner;\r\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TestRunner = void 0;\r\nconst TestRunner_1 = require(\"./TestRunner\");\r\nObject.defineProperty(exports, \"TestRunner\", { enumerable: true, get: function () { return TestRunner_1.TestRunner; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsNkNBQXdDO0FBS2hDLDJGQUxBLHVCQUFVLE9BS0EifQ==","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.deepEqual = void 0;\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    else if (a instanceof Date && b instanceof Date) {\r\n        return a.getTime() === b.getTime();\r\n    }\r\n    else if (!exists(a) || !exists(b) || typeof a !== \"object\" && typeof b !== \"object\") {\r\n        return a === b;\r\n    }\r\n    else {\r\n        return deepEqualObject(a, b);\r\n    }\r\n}\r\nexports.deepEqual = deepEqual;\r\nfunction deepEqualObject(a, b) {\r\n    let i;\r\n    let key;\r\n    if (!exists(a) || !exists(b)) {\r\n        return false;\r\n    }\r\n    if (a.prototype !== b.prototype) {\r\n        return false;\r\n    }\r\n    let aKeys;\r\n    let bKeys;\r\n    try {\r\n        aKeys = Object.keys(a);\r\n        bKeys = Object.keys(b);\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n    if (aKeys.length !== bKeys.length) {\r\n        return false;\r\n    }\r\n    aKeys.sort();\r\n    bKeys.sort();\r\n    for (i = aKeys.length - 1; i >= 0; i--) {\r\n        if (aKeys[i] !== bKeys[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    for (i = aKeys.length - 1; i >= 0; i--) {\r\n        key = aKeys[i];\r\n        if (!deepEqual(a[key], b[key])) {\r\n            return false;\r\n        }\r\n    }\r\n    return typeof a === typeof b;\r\n}\r\nfunction exists(value) {\r\n    return value !== null && value !== undefined;\r\n}\r\n//# sourceMappingURL=DeepEqual.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.without = exports.union = void 0;\r\nfunction union(arrayA, arrayB) {\r\n    if (!arrayA) {\r\n        return arrayB ? arrayB : [];\r\n    }\r\n    if (!arrayB) {\r\n        return arrayA;\r\n    }\r\n    for (const item of arrayB) {\r\n        if (arrayA.indexOf(item) === -1) {\r\n            arrayA.push(item);\r\n        }\r\n    }\r\n    return arrayA;\r\n}\r\nexports.union = union;\r\nfunction without(array, item) {\r\n    if (!array) {\r\n        return [];\r\n    }\r\n    const indexOfItem = array.indexOf(item);\r\n    if (indexOfItem !== -1) {\r\n        array.splice(indexOfItem, 1);\r\n    }\r\n    return array;\r\n}\r\nexports.without = without;\r\n//# sourceMappingURL=ArrayUtils.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SimpleEventEmitter = void 0;\r\nconst ArrayUtils_1 = require(\"./ArrayUtils\");\r\nclass SimpleEventEmitter {\r\n    constructor() {\r\n        this.onListeners = {};\r\n        this.onceListeners = {};\r\n    }\r\n    on(event, callback) {\r\n        (this.onListeners[event]) = ArrayUtils_1.union(this.onListeners[event], [callback]);\r\n    }\r\n    once(event, callback) {\r\n        this.onceListeners[event] = ArrayUtils_1.union(this.onceListeners[event], [callback]);\r\n    }\r\n    off(event, callback) {\r\n        this.onListeners[event] = ArrayUtils_1.without(this.onListeners[event], callback);\r\n        this.onceListeners[event] = ArrayUtils_1.without(this.onceListeners[event], callback);\r\n    }\r\n    emit(event, ...args) {\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n    }\r\n    emitAndWaitForCompletion(event, ...args) {\r\n        const promises = [];\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n        return Promise.all(promises).then((results) => {\r\n            return;\r\n        });\r\n    }\r\n}\r\nexports.SimpleEventEmitter = SimpleEventEmitter;\r\n//# sourceMappingURL=SimpleEventEmitter.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SortedArray = void 0;\r\nclass SortedArray {\r\n    constructor(compare = compareDefault, initialValues = []) {\r\n        this.array = [];\r\n        this.compareFunction = compare || compareDefault;\r\n        const length = initialValues.length;\r\n        for (let i = 0; i < length; i++) {\r\n            this.insert(initialValues[i]);\r\n        }\r\n    }\r\n    getData() {\r\n        return this.array;\r\n    }\r\n    insert(element) {\r\n        let foundIndex = this.searchInternal(element) + 1;\r\n        const highestIndex = this.array.length - 1;\r\n        while ((foundIndex < highestIndex) && (this.compareFunction(element, this.array[foundIndex]) === 0)) {\r\n            foundIndex++;\r\n        }\r\n        let index = this.array.length;\r\n        this.array.push(element);\r\n        while (index > foundIndex) {\r\n            this.array[index] = this.array[--index];\r\n        }\r\n        this.array[foundIndex] = element;\r\n    }\r\n    search(element) {\r\n        const foundIndex = this.searchInternal(element);\r\n        if (this.compareFunction(this.array[foundIndex], element) !== 0) {\r\n            return -1;\r\n        }\r\n        return foundIndex;\r\n    }\r\n    remove(element) {\r\n        const index = this.search(element);\r\n        if (index >= 0) {\r\n            this.array.splice(index, 1);\r\n        }\r\n    }\r\n    searchInternal(element) {\r\n        let high = this.array.length - 1;\r\n        let low = 0;\r\n        let index;\r\n        let ordering;\r\n        while (high >= low) {\r\n            index = Math.floor((high + low) / 2);\r\n            ordering = this.compareFunction(this.array[index], element);\r\n            if (ordering < 0) {\r\n                low = index + 1;\r\n            }\r\n            else if (ordering > 0) {\r\n                high = index - 1;\r\n            }\r\n            else {\r\n                return index;\r\n            }\r\n        }\r\n        return high;\r\n    }\r\n}\r\nexports.SortedArray = SortedArray;\r\nfunction compareDefault(a, b) {\r\n    if (a < b) {\r\n        return -1;\r\n    }\r\n    else if (a > b) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n//# sourceMappingURL=SortedArray.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.INTERNAL_MOCKER_NAME = exports.printObject = void 0;\r\nconst INTERNAL_MOCKER_NAME = \"__internalMocker\";\r\nexports.INTERNAL_MOCKER_NAME = INTERNAL_MOCKER_NAME;\r\nfunction GetMockerDataSafe(mock) {\r\n    const internalMocker = mock[INTERNAL_MOCKER_NAME];\r\n    return internalMocker !== null && internalMocker !== void 0 ? internalMocker : null;\r\n}\r\nfunction printObject(object) {\r\n    if (object === null) {\r\n        return \"null\";\r\n    }\r\n    if (object === undefined) {\r\n        return \"undefined\";\r\n    }\r\n    if (object instanceof RegExp) {\r\n        return object.toString();\r\n    }\r\n    const mockerData = GetMockerDataSafe(object);\r\n    if (mockerData !== null) {\r\n        return mockerData.mockName;\r\n    }\r\n    return JSON.stringify(object);\r\n}\r\nexports.printObject = printObject;\r\n//# sourceMappingURL=Stringify.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.matcher = exports.regexMatches = exports.startsWith = exports.lte = exports.lt = exports.gte = exports.gt = exports.eq = exports.any = void 0;\r\nconst DeepEqual_1 = require(\"./DeepEqual\");\r\nconst Stringify_1 = require(\"./Stringify\");\r\nfunction any() {\r\n    const validator = {\r\n        precedence: -1,\r\n        matches: () => true,\r\n        description: () => \"any()\",\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.any = any;\r\nfunction gt(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue > value),\r\n        description: () => `gt(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.gt = gt;\r\nfunction lt(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue < value),\r\n        description: () => `lt(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.lt = lt;\r\nfunction gte(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue >= value),\r\n        description: () => `gte(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.gte = gte;\r\nfunction lte(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue <= value),\r\n        description: () => `lte(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.lte = lte;\r\nfunction eq(value) {\r\n    const validator = {\r\n        precedence: 1,\r\n        matches: ((realValue) => DeepEqual_1.deepEqual(value, realValue)),\r\n        description: () => Stringify_1.printObject(value),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.eq = eq;\r\nfunction startsWith(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue.startsWith(value)),\r\n        description: () => \"startsWith \" + value,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.startsWith = startsWith;\r\nfunction regexMatches(value) {\r\n    const validator = {\r\n        matches: ((realValue) => value.test(realValue)),\r\n        description: () => value.toString(),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.regexMatches = regexMatches;\r\nfunction matcher(func) {\r\n    const validator = {\r\n        matches: (realValue) => func(realValue),\r\n        description: () => func.toString(),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.matcher = matcher;\r\n//# sourceMappingURL=ArgumentValidator.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.printObject = exports.INTERNAL_MOCKER_NAME = exports.startsWith = exports.regexMatches = exports.matcher = exports.lte = exports.lt = exports.gte = exports.gt = exports.eq = exports.any = exports.SimpleEventEmitter = exports.SortedArray = exports.deepEqual = void 0;\r\nconst DeepEqual_1 = require(\"./DeepEqual\");\r\nObject.defineProperty(exports, \"deepEqual\", { enumerable: true, get: function () { return DeepEqual_1.deepEqual; } });\r\nconst SimpleEventEmitter_1 = require(\"./SimpleEventEmitter\");\r\nObject.defineProperty(exports, \"SimpleEventEmitter\", { enumerable: true, get: function () { return SimpleEventEmitter_1.SimpleEventEmitter; } });\r\nconst SortedArray_1 = require(\"./SortedArray\");\r\nObject.defineProperty(exports, \"SortedArray\", { enumerable: true, get: function () { return SortedArray_1.SortedArray; } });\r\nconst ArgumentValidator_1 = require(\"./ArgumentValidator\");\r\nObject.defineProperty(exports, \"any\", { enumerable: true, get: function () { return ArgumentValidator_1.any; } });\r\nObject.defineProperty(exports, \"eq\", { enumerable: true, get: function () { return ArgumentValidator_1.eq; } });\r\nObject.defineProperty(exports, \"gt\", { enumerable: true, get: function () { return ArgumentValidator_1.gt; } });\r\nObject.defineProperty(exports, \"gte\", { enumerable: true, get: function () { return ArgumentValidator_1.gte; } });\r\nObject.defineProperty(exports, \"lt\", { enumerable: true, get: function () { return ArgumentValidator_1.lt; } });\r\nObject.defineProperty(exports, \"lte\", { enumerable: true, get: function () { return ArgumentValidator_1.lte; } });\r\nObject.defineProperty(exports, \"matcher\", { enumerable: true, get: function () { return ArgumentValidator_1.matcher; } });\r\nObject.defineProperty(exports, \"regexMatches\", { enumerable: true, get: function () { return ArgumentValidator_1.regexMatches; } });\r\nObject.defineProperty(exports, \"startsWith\", { enumerable: true, get: function () { return ArgumentValidator_1.startsWith; } });\r\nconst Stringify_1 = require(\"./Stringify\");\r\nObject.defineProperty(exports, \"INTERNAL_MOCKER_NAME\", { enumerable: true, get: function () { return Stringify_1.INTERNAL_MOCKER_NAME; } });\r\nObject.defineProperty(exports, \"printObject\", { enumerable: true, get: function () { return Stringify_1.printObject; } });\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.assert = void 0;\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nclass AssertionError extends Error {\r\n    constructor(ourMessage, theirMessage) {\r\n        const message = theirMessage ? ourMessage + \"\\n\" + theirMessage : ourMessage;\r\n        super(message);\r\n    }\r\n}\r\nclass assert {\r\n    static that(output) {\r\n    }\r\n    static equal(expected, actual, message) {\r\n        if (umbra_util_1.deepEqual(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to deeply equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static notEqual(expected, actual, message) {\r\n        if (!umbra_util_1.deepEqual(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to not deeply equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static looseEqual(actual, expected, message) {\r\n        if (expected == actual) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} == ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static notLooseEqual(actual, expected, message) {\r\n        if (expected != actual) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} != ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static strictEqual(actual, expected, message) {\r\n        if (Object.is(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to strictly equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static notStrictEqual(actual, expected, message) {\r\n        if (!Object.is(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to not strictly equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static is(actual, expected, message) {\r\n        assert.strictEqual(actual, expected, message);\r\n    }\r\n    static has(target, keyPath, expected, message) {\r\n        assert.exists(target, \"target\");\r\n        assert.exists(keyPath, \"keyPath\");\r\n        assert.exists(target, \"target\");\r\n        const pathArray = keyPath.split(\".\");\r\n        let result = target;\r\n        for (const path of pathArray) {\r\n            const newResult = result[path];\r\n            if (!newResult) {\r\n                assert.fail(`Missing key \"${path}\" in object ${umbra_util_1.printObject(result)}\\nAvailable keys: ${umbra_util_1.printObject(Object.keys(expected))}`);\r\n            }\r\n            result = newResult;\r\n        }\r\n        assert.strictEqual(result, expected, message);\r\n    }\r\n    static regexMatches(actual, expected, message) {\r\n        if (expected.test(actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to match the regex ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static resolvesTo(actual, expected, message) {\r\n        return actual\r\n            .then((actualValue) => {\r\n            assert.equal(actualValue, expected);\r\n        }, (e) => {\r\n            throw new AssertionError(`Promise should not have successfully resolved.\\nException: ${e}\\n`, message);\r\n        });\r\n    }\r\n    static rejects(actual, expected, message) {\r\n        const errorMessage = expected instanceof Error ? expected.message : expected;\r\n        return actual\r\n            .then(() => {\r\n            throw new AssertionError(\"Promise should not have successfully resolved\", message);\r\n        }, (e) => {\r\n            if (errorMessage) {\r\n                assert.equal(errorMessage, e.message);\r\n            }\r\n        });\r\n    }\r\n    static fail(message) {\r\n        throw new AssertionError(\"Test failed\", message);\r\n    }\r\n    static isTrue(value, message) {\r\n        assert.equal(true, value, message);\r\n    }\r\n    static isFalse(value, message) {\r\n        assert.equal(false, value, message);\r\n    }\r\n    static isTruthy(value, message) {\r\n        if (!value) {\r\n            throw new AssertionError(`Expected ${value} to be truthy`, message);\r\n        }\r\n    }\r\n    static isFalsy(value, message) {\r\n        if (value) {\r\n            throw new AssertionError(`Expected ${value} to be falsy`, message);\r\n        }\r\n    }\r\n    static exists(expected, message) {\r\n        this.notEqual(expected, null, `Expected ${umbra_util_1.printObject(expected)} to not be null. ${message}`);\r\n        this.notEqual(expected, undefined, `Expected ${umbra_util_1.printObject(expected)} to not be undefined. ${message}`);\r\n        return true;\r\n    }\r\n    static contains(target, value, message) {\r\n        this.exists(target);\r\n        if (typeof target === \"string\") {\r\n            assert.isTrue(target.indexOf(value) !== -1, `String: ${value} was not found in ${target}`);\r\n        }\r\n        else if (Array.isArray(target)) {\r\n            assert.isTrue(target.indexOf(value) !== -1, `${umbra_util_1.printObject(value)} was not found in target array ${umbra_util_1.printObject(target)}. ${message !== null && message !== void 0 ? message : \"\"}`);\r\n        }\r\n        else {\r\n            for (const [entryKey, entryValue] of Object.entries(value)) {\r\n                assert.equal(target[entryKey], entryValue);\r\n            }\r\n        }\r\n    }\r\n    static containsAll(target, values, message) {\r\n        this.exists(target);\r\n        this.exists(values);\r\n        for (const value of values) {\r\n            assert.contains(target, value, message);\r\n        }\r\n    }\r\n    static matchesSnapshotFile(snapshot) {\r\n    }\r\n    static matchesSnapshotString(snapshot, snapshotString) {\r\n    }\r\n}\r\nexports.assert = assert;\r\n//# sourceMappingURL=Assert.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.expect = exports.Expect = void 0;\r\nconst Assert_1 = require(\"./Assert\");\r\nclass Expect {\r\n    constructor(target) {\r\n        this.target = target;\r\n    }\r\n    toBe(value) {\r\n        Assert_1.assert.equal(this.target, value);\r\n    }\r\n    toHaveProperty(keyPath, value) {\r\n        Assert_1.assert.has(this.target, keyPath, value);\r\n    }\r\n    toBeTruthy() {\r\n        Assert_1.assert.isTruthy(this.target);\r\n    }\r\n    toBeFalsy() {\r\n        Assert_1.assert.isFalsy(this.target);\r\n    }\r\n}\r\nexports.Expect = Expect;\r\nfunction expect(target) {\r\n    return new Expect(target);\r\n}\r\nexports.expect = expect;\r\n//# sourceMappingURL=Expect.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Expect = exports.expect = exports.assert = void 0;\r\nconst Assert_1 = require(\"./Assert\");\r\nObject.defineProperty(exports, \"assert\", { enumerable: true, get: function () { return Assert_1.assert; } });\r\nconst Expect_1 = require(\"./Expect\");\r\nObject.defineProperty(exports, \"Expect\", { enumerable: true, get: function () { return Expect_1.Expect; } });\r\nObject.defineProperty(exports, \"expect\", { enumerable: true, get: function () { return Expect_1.expect; } });\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.deepEqual = void 0;\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    else if (a instanceof Date && b instanceof Date) {\r\n        return a.getTime() === b.getTime();\r\n    }\r\n    else if (!exists(a) || !exists(b) || typeof a !== \"object\" && typeof b !== \"object\") {\r\n        return a === b;\r\n    }\r\n    else {\r\n        return deepEqualObject(a, b);\r\n    }\r\n}\r\nexports.deepEqual = deepEqual;\r\nfunction deepEqualObject(a, b) {\r\n    let i;\r\n    let key;\r\n    if (!exists(a) || !exists(b)) {\r\n        return false;\r\n    }\r\n    if (a.prototype !== b.prototype) {\r\n        return false;\r\n    }\r\n    let aKeys;\r\n    let bKeys;\r\n    try {\r\n        aKeys = Object.keys(a);\r\n        bKeys = Object.keys(b);\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n    if (aKeys.length !== bKeys.length) {\r\n        return false;\r\n    }\r\n    aKeys.sort();\r\n    bKeys.sort();\r\n    for (i = aKeys.length - 1; i >= 0; i--) {\r\n        if (aKeys[i] !== bKeys[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    for (i = aKeys.length - 1; i >= 0; i--) {\r\n        key = aKeys[i];\r\n        if (!deepEqual(a[key], b[key])) {\r\n            return false;\r\n        }\r\n    }\r\n    return typeof a === typeof b;\r\n}\r\nfunction exists(value) {\r\n    return value !== null && value !== undefined;\r\n}\r\n//# sourceMappingURL=DeepEqual.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.without = exports.union = void 0;\r\nfunction union(arrayA, arrayB) {\r\n    if (!arrayA) {\r\n        return arrayB ? arrayB : [];\r\n    }\r\n    if (!arrayB) {\r\n        return arrayA;\r\n    }\r\n    for (const item of arrayB) {\r\n        if (arrayA.indexOf(item) === -1) {\r\n            arrayA.push(item);\r\n        }\r\n    }\r\n    return arrayA;\r\n}\r\nexports.union = union;\r\nfunction without(array, item) {\r\n    if (!array) {\r\n        return [];\r\n    }\r\n    const indexOfItem = array.indexOf(item);\r\n    if (indexOfItem !== -1) {\r\n        array.splice(indexOfItem, 1);\r\n    }\r\n    return array;\r\n}\r\nexports.without = without;\r\n//# sourceMappingURL=ArrayUtils.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SimpleEventEmitter = void 0;\r\nconst ArrayUtils_1 = require(\"./ArrayUtils\");\r\nclass SimpleEventEmitter {\r\n    constructor() {\r\n        this.onListeners = {};\r\n        this.onceListeners = {};\r\n    }\r\n    on(event, callback) {\r\n        (this.onListeners[event]) = ArrayUtils_1.union(this.onListeners[event], [callback]);\r\n    }\r\n    once(event, callback) {\r\n        this.onceListeners[event] = ArrayUtils_1.union(this.onceListeners[event], [callback]);\r\n    }\r\n    off(event, callback) {\r\n        this.onListeners[event] = ArrayUtils_1.without(this.onListeners[event], callback);\r\n        this.onceListeners[event] = ArrayUtils_1.without(this.onceListeners[event], callback);\r\n    }\r\n    emit(event, ...args) {\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n    }\r\n    emitAndWaitForCompletion(event, ...args) {\r\n        const promises = [];\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n        return Promise.all(promises).then((results) => {\r\n            return;\r\n        });\r\n    }\r\n}\r\nexports.SimpleEventEmitter = SimpleEventEmitter;\r\n//# sourceMappingURL=SimpleEventEmitter.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SortedArray = void 0;\r\nclass SortedArray {\r\n    constructor(compare = compareDefault, initialValues = []) {\r\n        this.array = [];\r\n        this.compareFunction = compare || compareDefault;\r\n        const length = initialValues.length;\r\n        for (let i = 0; i < length; i++) {\r\n            this.insert(initialValues[i]);\r\n        }\r\n    }\r\n    getData() {\r\n        return this.array;\r\n    }\r\n    insert(element) {\r\n        let foundIndex = this.searchInternal(element) + 1;\r\n        const highestIndex = this.array.length - 1;\r\n        while ((foundIndex < highestIndex) && (this.compareFunction(element, this.array[foundIndex]) === 0)) {\r\n            foundIndex++;\r\n        }\r\n        let index = this.array.length;\r\n        this.array.push(element);\r\n        while (index > foundIndex) {\r\n            this.array[index] = this.array[--index];\r\n        }\r\n        this.array[foundIndex] = element;\r\n    }\r\n    search(element) {\r\n        const foundIndex = this.searchInternal(element);\r\n        if (this.compareFunction(this.array[foundIndex], element) !== 0) {\r\n            return -1;\r\n        }\r\n        return foundIndex;\r\n    }\r\n    remove(element) {\r\n        const index = this.search(element);\r\n        if (index >= 0) {\r\n            this.array.splice(index, 1);\r\n        }\r\n    }\r\n    searchInternal(element) {\r\n        let high = this.array.length - 1;\r\n        let low = 0;\r\n        let index;\r\n        let ordering;\r\n        while (high >= low) {\r\n            index = Math.floor((high + low) / 2);\r\n            ordering = this.compareFunction(this.array[index], element);\r\n            if (ordering < 0) {\r\n                low = index + 1;\r\n            }\r\n            else if (ordering > 0) {\r\n                high = index - 1;\r\n            }\r\n            else {\r\n                return index;\r\n            }\r\n        }\r\n        return high;\r\n    }\r\n}\r\nexports.SortedArray = SortedArray;\r\nfunction compareDefault(a, b) {\r\n    if (a < b) {\r\n        return -1;\r\n    }\r\n    else if (a > b) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n//# sourceMappingURL=SortedArray.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.INTERNAL_MOCKER_NAME = exports.printObject = void 0;\r\nconst INTERNAL_MOCKER_NAME = \"__internalMocker\";\r\nexports.INTERNAL_MOCKER_NAME = INTERNAL_MOCKER_NAME;\r\nfunction GetMockerDataSafe(mock) {\r\n    const internalMocker = mock[INTERNAL_MOCKER_NAME];\r\n    return internalMocker !== null && internalMocker !== void 0 ? internalMocker : null;\r\n}\r\nconst defaultIndent = \"  \";\r\nfunction printString(object) {\r\n    if (typeof object === \"symbol\" || typeof object === \"number\") {\r\n        return String(object);\r\n    }\r\n    return `\"${String(object).replace(/\"/g, \"\\\\\\\"\").replace(/\\\\?'/g, \"\\\\'\").replace(/\\r/g, \"\\\\r\").replace(/\\n/g, \"\\\\n\")}\"`;\r\n}\r\nfunction printObject(object) {\r\n    const alreadySeenObjects = [];\r\n    const printObjectCapture = (objectCaptured, indent = defaultIndent) => {\r\n        if (objectCaptured === null) {\r\n            return \"null\";\r\n        }\r\n        if (objectCaptured === undefined) {\r\n            return \"undefined\";\r\n        }\r\n        if (objectCaptured instanceof RegExp) {\r\n            return objectCaptured.toString();\r\n        }\r\n        if (objectCaptured instanceof Date) {\r\n            return `new Date(\"${objectCaptured.toISOString()}\")`;\r\n        }\r\n        if (objectCaptured instanceof Error) {\r\n            return `new Error(${objectCaptured.message})`;\r\n        }\r\n        if (alreadySeenObjects.indexOf(objectCaptured) !== -1) {\r\n            return `[[Circular Object Reference]]`;\r\n        }\r\n        const mockerData = GetMockerDataSafe(objectCaptured);\r\n        if (mockerData !== null) {\r\n            return mockerData.mockName;\r\n        }\r\n        const typeofObject = typeof objectCaptured;\r\n        if (typeofObject === \"function\" || typeofObject === \"boolean\" || typeofObject === \"number\" || typeofObject === \"symbol\") {\r\n            return String(objectCaptured);\r\n        }\r\n        if (Array.isArray(objectCaptured)) {\r\n            const arrayData = [];\r\n            alreadySeenObjects.push(objectCaptured);\r\n            for (const item of objectCaptured) {\r\n                arrayData.push(`${indent}${printObjectCapture(item, indent + defaultIndent)}`);\r\n            }\r\n            alreadySeenObjects.pop();\r\n            return `[\\n${arrayData.join(\",\\n\")}\\n${indent.substr(defaultIndent.length)}]`;\r\n        }\r\n        if (objectCaptured instanceof Object) {\r\n            alreadySeenObjects.push(objectCaptured);\r\n            const keys = Reflect.ownKeys(objectCaptured);\r\n            const keyStrings = [];\r\n            for (const key of keys) {\r\n                keyStrings.push(`${indent}${printString(key)}: ${printObjectCapture(Reflect.get(objectCaptured, key), indent + defaultIndent)}`);\r\n            }\r\n            alreadySeenObjects.pop();\r\n            return `{\\n${keyStrings.join(\",\\n\")}\\n${indent.substr(defaultIndent.length)}}`;\r\n        }\r\n        return printString(objectCaptured);\r\n    };\r\n    return printObjectCapture(object);\r\n}\r\nexports.printObject = printObject;\r\n//# sourceMappingURL=Stringify.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.matcher = exports.regexMatches = exports.startsWith = exports.lte = exports.lt = exports.gte = exports.gt = exports.eq = exports.any = void 0;\r\nconst DeepEqual_1 = require(\"./DeepEqual\");\r\nconst Stringify_1 = require(\"./Stringify\");\r\nfunction any() {\r\n    const validator = {\r\n        precedence: -1,\r\n        matches: () => true,\r\n        description: () => \"any()\",\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.any = any;\r\nfunction gt(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue > value),\r\n        description: () => `gt(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.gt = gt;\r\nfunction lt(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue < value),\r\n        description: () => `lt(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.lt = lt;\r\nfunction gte(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue >= value),\r\n        description: () => `gte(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.gte = gte;\r\nfunction lte(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue <= value),\r\n        description: () => `lte(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.lte = lte;\r\nfunction eq(value) {\r\n    const validator = {\r\n        precedence: 1,\r\n        matches: ((realValue) => DeepEqual_1.deepEqual(value, realValue)),\r\n        description: () => Stringify_1.printObject(value),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.eq = eq;\r\nfunction startsWith(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue.startsWith(value)),\r\n        description: () => \"startsWith \" + value,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.startsWith = startsWith;\r\nfunction regexMatches(value) {\r\n    const validator = {\r\n        matches: ((realValue) => value.test(realValue)),\r\n        description: () => value.toString(),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.regexMatches = regexMatches;\r\nfunction matcher(func) {\r\n    const validator = {\r\n        matches: (realValue) => func(realValue),\r\n        description: () => func.toString(),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.matcher = matcher;\r\n//# sourceMappingURL=ArgumentValidator.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.printObject = exports.INTERNAL_MOCKER_NAME = exports.startsWith = exports.regexMatches = exports.matcher = exports.lte = exports.lt = exports.gte = exports.gt = exports.eq = exports.any = exports.SimpleEventEmitter = exports.SortedArray = exports.deepEqual = void 0;\r\nconst DeepEqual_1 = require(\"./DeepEqual\");\r\nObject.defineProperty(exports, \"deepEqual\", { enumerable: true, get: function () { return DeepEqual_1.deepEqual; } });\r\nconst SimpleEventEmitter_1 = require(\"./SimpleEventEmitter\");\r\nObject.defineProperty(exports, \"SimpleEventEmitter\", { enumerable: true, get: function () { return SimpleEventEmitter_1.SimpleEventEmitter; } });\r\nconst SortedArray_1 = require(\"./SortedArray\");\r\nObject.defineProperty(exports, \"SortedArray\", { enumerable: true, get: function () { return SortedArray_1.SortedArray; } });\r\nconst ArgumentValidator_1 = require(\"./ArgumentValidator\");\r\nObject.defineProperty(exports, \"any\", { enumerable: true, get: function () { return ArgumentValidator_1.any; } });\r\nObject.defineProperty(exports, \"eq\", { enumerable: true, get: function () { return ArgumentValidator_1.eq; } });\r\nObject.defineProperty(exports, \"gt\", { enumerable: true, get: function () { return ArgumentValidator_1.gt; } });\r\nObject.defineProperty(exports, \"gte\", { enumerable: true, get: function () { return ArgumentValidator_1.gte; } });\r\nObject.defineProperty(exports, \"lt\", { enumerable: true, get: function () { return ArgumentValidator_1.lt; } });\r\nObject.defineProperty(exports, \"lte\", { enumerable: true, get: function () { return ArgumentValidator_1.lte; } });\r\nObject.defineProperty(exports, \"matcher\", { enumerable: true, get: function () { return ArgumentValidator_1.matcher; } });\r\nObject.defineProperty(exports, \"regexMatches\", { enumerable: true, get: function () { return ArgumentValidator_1.regexMatches; } });\r\nObject.defineProperty(exports, \"startsWith\", { enumerable: true, get: function () { return ArgumentValidator_1.startsWith; } });\r\nconst Stringify_1 = require(\"./Stringify\");\r\nObject.defineProperty(exports, \"INTERNAL_MOCKER_NAME\", { enumerable: true, get: function () { return Stringify_1.INTERNAL_MOCKER_NAME; } });\r\nObject.defineProperty(exports, \"printObject\", { enumerable: true, get: function () { return Stringify_1.printObject; } });\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.newCapture = void 0;\r\nclass CaptureInternal {\r\n    constructor() {\r\n        this.all = [];\r\n    }\r\n    get first() {\r\n        if (this.all.length === 0) {\r\n            return null;\r\n        }\r\n        return this.all[0];\r\n    }\r\n    get last() {\r\n        if (this.all.length === 0) {\r\n            return null;\r\n        }\r\n        return this.all[this.all.length - 1];\r\n    }\r\n    matches(arg) {\r\n        this.all.push(arg);\r\n        return true;\r\n    }\r\n    description() {\r\n        if (this.all.length === 0) {\r\n            return \"Argument captor. No arguments captured\";\r\n        }\r\n        return \"Argument captor. Currently captured args: \" + this.all;\r\n    }\r\n    equals(other) {\r\n        if (other instanceof CaptureInternal) {\r\n            return other.all === this.all;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nfunction newCapture() {\r\n    return new CaptureInternal();\r\n}\r\nexports.newCapture = newCapture;\r\n//# sourceMappingURL=Capture.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MockType = exports.INTERNAL_MOCKER_NAME = exports.createInvalidMockError = exports.GetInternalMockerSafe = exports.GetInternalMocker = exports.CreateInternalMocker = void 0;\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nObject.defineProperty(exports, \"INTERNAL_MOCKER_NAME\", { enumerable: true, get: function () { return umbra_util_1.INTERNAL_MOCKER_NAME; } });\r\nvar MockType;\r\n(function (MockType) {\r\n    MockType[MockType[\"Instance\"] = 0] = \"Instance\";\r\n    MockType[MockType[\"Static\"] = 1] = \"Static\";\r\n    MockType[MockType[\"Partial\"] = 2] = \"Partial\";\r\n})(MockType || (MockType = {}));\r\nexports.MockType = MockType;\r\nfunction GetInternalMockerSafe(mock) {\r\n    if (mock === null || mock === undefined) {\r\n        return null;\r\n    }\r\n    const internalMocker = mock[umbra_util_1.INTERNAL_MOCKER_NAME];\r\n    return internalMocker !== null && internalMocker !== void 0 ? internalMocker : null;\r\n}\r\nexports.GetInternalMockerSafe = GetInternalMockerSafe;\r\nfunction GetInternalMocker(mock) {\r\n    const internalMocker = GetInternalMockerSafe(mock);\r\n    if (internalMocker === null) {\r\n        throw createInvalidMockError(mock);\r\n    }\r\n    return internalMocker;\r\n}\r\nexports.GetInternalMocker = GetInternalMocker;\r\nfunction createInvalidMockError(object) {\r\n    return new Error(`Passed an object that was not a mock. Object provided: ${umbra_util_1.printObject(object)}`);\r\n}\r\nexports.createInvalidMockError = createInvalidMockError;\r\nfunction CreateInternalMocker(mockedFunction, realFunction, mockName, options, mockType) {\r\n    const internalMocker = {\r\n        expectations: [],\r\n        recordedInvocations: [],\r\n        realFunction: realFunction,\r\n        options: options,\r\n        inProgressInOrder: [],\r\n        isInExpectation: false,\r\n        mockName: mockName !== null && mockName !== void 0 ? mockName : \"mock\",\r\n        mockType: mockType\r\n    };\r\n    mockedFunction[umbra_util_1.INTERNAL_MOCKER_NAME] = internalMocker;\r\n    return internalMocker;\r\n}\r\nexports.CreateInternalMocker = CreateInternalMocker;\r\n//# sourceMappingURL=InternalMocker.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StacktraceUtils = void 0;\r\nclass StacktraceUtils {\r\n    static getCurrentMockLocation(depth) {\r\n        const stackTrace = new Error().stack;\r\n        if (stackTrace === undefined) {\r\n            return null;\r\n        }\r\n        const stackTraceLines = stackTrace.split(\"\\n\");\r\n        const length = stackTraceLines.length;\r\n        if (length < depth + 2) {\r\n            return null;\r\n        }\r\n        let i = 2;\r\n        let callingLocation = null;\r\n        for (; i < length; i++) {\r\n            callingLocation = stackTraceLines[i];\r\n            if (/(expect|InvocationHandler\\.apply).*umbra/.test(callingLocation)) {\r\n                i++;\r\n                callingLocation = stackTraceLines[i];\r\n                break;\r\n            }\r\n        }\r\n        if (callingLocation === null) {\r\n            return null;\r\n        }\r\n        const matches = /.*?\\((.*?)\\)/.exec(callingLocation);\r\n        if (matches === null) {\r\n            return null;\r\n        }\r\n        return matches[1];\r\n    }\r\n}\r\nexports.StacktraceUtils = StacktraceUtils;\r\n//# sourceMappingURL=StackTraceParser.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.verifyArgumentMatcher = exports.findBestArgumentMatcher = exports.createMockedFunction = void 0;\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nconst InternalMocker_1 = require(\"./InternalMocker\");\r\nconst Mock_1 = require(\"./Mock\");\r\nconst StackTraceParser_1 = require(\"./StackTraceParser\");\r\nfunction findBestArgumentMatcher(expectations, args) {\r\n    const argumentMatcherArray = new umbra_util_1.SortedArray((a, b) => {\r\n        if (a === undefined && b === undefined) {\r\n            return 0;\r\n        }\r\n        else if (a === undefined) {\r\n            return 1;\r\n        }\r\n        else if (b === undefined) {\r\n            return -1;\r\n        }\r\n        if (a.inOrderOverride !== null && b.inOrderOverride == null) {\r\n            return -1;\r\n        }\r\n        if (a.inOrderOverride === null && b.inOrderOverride !== null) {\r\n            return 1;\r\n        }\r\n        if (a.expectedArgs === null && b.expectedArgs === null) {\r\n            return 0;\r\n        }\r\n        else if (a.expectedArgs === null) {\r\n            return 1;\r\n        }\r\n        else if (b.expectedArgs === null) {\r\n            return -1;\r\n        }\r\n        const argLengthDifference = b.expectedArgs.length - a.expectedArgs.length;\r\n        if (argLengthDifference !== 0) {\r\n            return argLengthDifference;\r\n        }\r\n        const aMatcherPrecedence = sumMatchers(a.expectedArgs);\r\n        const bMatcherPrecedence = sumMatchers(b.expectedArgs);\r\n        return bMatcherPrecedence - aMatcherPrecedence;\r\n    });\r\n    for (const expectation of expectations) {\r\n        argumentMatcherArray.insert(expectation);\r\n    }\r\n    for (const expectation of argumentMatcherArray.getData()) {\r\n        if (expectation.callCount >= expectation.expectedRange.end) {\r\n            continue;\r\n        }\r\n        const expectedArgs = expectation.expectedArgs;\r\n        const isValid = verifyArgumentMatcher(expectedArgs, args);\r\n        if (isValid) {\r\n            return expectation;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.findBestArgumentMatcher = findBestArgumentMatcher;\r\nfunction sumMatchers(expectedArgs) {\r\n    let sum = 0;\r\n    for (const arg of expectedArgs) {\r\n        sum += arg.precedence !== undefined ? arg.precedence : 0;\r\n    }\r\n    return sum;\r\n}\r\nfunction verifyArgumentMatcher(expectedArgs, args) {\r\n    if (expectedArgs === null) {\r\n        return true;\r\n    }\r\n    if (args.length < expectedArgs.length) {\r\n        return false;\r\n    }\r\n    let isValid = true;\r\n    if (expectedArgs.length === 0) {\r\n        isValid = args.length === 0;\r\n    }\r\n    for (let i = 0; i < expectedArgs.length; i++) {\r\n        const argumentValidator = expectedArgs[i];\r\n        const arg = args[i];\r\n        isValid = isValid && argumentValidator.matches(arg);\r\n    }\r\n    return isValid;\r\n}\r\nexports.verifyArgumentMatcher = verifyArgumentMatcher;\r\nconst defaultExpectationOptions = { includeLocation: true };\r\nfunction buildExpectationString(expectation, options = defaultExpectationOptions) {\r\n    const mockedFuncName = expectation.internalMocker.mockName || \"mock\";\r\n    let argsString = `\\t${mockedFuncName}`;\r\n    if (expectation.expectedArgs === null) {\r\n        argsString += `() with any arguments`;\r\n    }\r\n    else {\r\n        const argData = [];\r\n        for (const argumentValdiatorArg of expectation.expectedArgs) {\r\n            if (argumentValdiatorArg.description) {\r\n                argData.push(argumentValdiatorArg.description());\r\n            }\r\n            else {\r\n                argData.push(argumentValdiatorArg.toString());\r\n            }\r\n        }\r\n        argsString += `(${argData.join(\", \")})`;\r\n    }\r\n    argsString += `. Expected ${expectation.expectedRange.describeRange()}, so far ${expectation.callCount}.`;\r\n    if (options.includeLocation) {\r\n        argsString += `\\n\\tExpectation set at ${expectation.location}`;\r\n    }\r\n    return argsString + \"\\n\";\r\n}\r\nfunction createMockedFunction() {\r\n    const mock = function (...args) {\r\n        const internalMocker = InternalMocker_1.GetInternalMocker(mockedFunc);\r\n        const currentLocation = StackTraceParser_1.StacktraceUtils.getCurrentMockLocation(2);\r\n        internalMocker.recordedInvocations.push({\r\n            params: args,\r\n            location: currentLocation\r\n        });\r\n        const expectationData = findBestArgumentMatcher(internalMocker.expectations, args);\r\n        if (expectationData !== null) {\r\n            if (expectationData.inOrderOverride) {\r\n                const inOrderOverride = expectationData.inOrderOverride;\r\n                const expectedInvocation = inOrderOverride.expectations[inOrderOverride.currentIndex];\r\n                if (expectedInvocation !== expectationData) {\r\n                    const expectedInvocationString = buildExpectationString(expectedInvocation);\r\n                    throw new Error(`Out of order method call.\\nExpected:\\n${expectedInvocationString}\\n` +\r\n                        `Actual:\\n${buildExpectationString(expectationData, { includeLocation: false })}` +\r\n                        `\\tCalled at ${currentLocation}`);\r\n                }\r\n                else {\r\n                    if (inOrderOverride.currentIndex === 0) {\r\n                        internalMocker.inProgressInOrder.push(inOrderOverride);\r\n                    }\r\n                    inOrderOverride.currentIndex++;\r\n                    if (inOrderOverride.currentIndex > inOrderOverride.expectations.length) {\r\n                        const inProgressIndex = internalMocker.inProgressInOrder.indexOf(inOrderOverride);\r\n                        if (inProgressIndex === -1) {\r\n                            throw new Error(\"Could not find in progress index\");\r\n                        }\r\n                        internalMocker.inProgressInOrder.splice(inProgressIndex, 1);\r\n                    }\r\n                }\r\n            }\r\n            else if (internalMocker.inProgressInOrder.length > 0) {\r\n                throw new Error(`Out of order method call.`);\r\n            }\r\n            expectationData.callCount++;\r\n            if (!expectationData.answer) {\r\n                return undefined;\r\n            }\r\n            const result = expectationData.answer(...args);\r\n            return result;\r\n        }\r\n        if (internalMocker.mockType === InternalMocker_1.MockType.Partial) {\r\n            return internalMocker.realFunction.apply(this, args);\r\n        }\r\n        if (internalMocker.options.strictMode === Mock_1.StrictnessMode.Strict) {\r\n            let expectations = \"\";\r\n            for (const expectation of internalMocker.expectations) {\r\n                expectations += buildExpectationString(expectation) + \"\\n\";\r\n            }\r\n            expectations = expectations ? `\\nExpectations:\\n${expectations}\\u00A0` : \"\";\r\n            const wording = internalMocker.expectations.length > 0 ? \"matched\" : \"was set\";\r\n            const argsStringified = [];\r\n            for (const arg of args) {\r\n                argsStringified.push(umbra_util_1.printObject(arg));\r\n            }\r\n            const argsText = argsStringified.join(\", \");\r\n            throw new Error(`${mockedFunc.name}(${argsText}) was called but no expectation ${wording}.${expectations}`);\r\n        }\r\n        return null;\r\n    };\r\n    const mockedFunc = mock;\r\n    return mockedFunc;\r\n}\r\nexports.createMockedFunction = createMockedFunction;\r\n//# sourceMappingURL=MockedFunction.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Range = void 0;\r\nclass Range {\r\n    constructor(start, end = start) {\r\n        if (start < 0) {\r\n            throw new Error(`Start value must be >= 0. Received ${start}`);\r\n        }\r\n        if (end < 1) {\r\n            throw Error(`End value must be >= 1. Received ${end}`);\r\n        }\r\n        if (start > end) {\r\n            throw new Error(`Start must be <= end. Start: ${start} End: ${end}`);\r\n        }\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    isFixedRange() {\r\n        return this.start === this.end;\r\n    }\r\n    isInRange(count) {\r\n        return count >= this.start && count <= this.end;\r\n    }\r\n    hasNoUpperBound() {\r\n        return this.end === Number.MAX_SAFE_INTEGER;\r\n    }\r\n    describeRange() {\r\n        if (this.isFixedRange()) {\r\n            return `${this.start} invocations`;\r\n        }\r\n        if (this.hasNoUpperBound()) {\r\n            return `at least ${this.start} invocations`;\r\n        }\r\n        return `between ${this.start} and ${this.end} invocations`;\r\n    }\r\n}\r\nexports.Range = Range;\r\n//# sourceMappingURL=Range.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.normalizeMatcherArgs = exports.OnGoingStubs = void 0;\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nconst umbra_assert_1 = require(\"umbra-assert\");\r\nconst InternalMocker_1 = require(\"./InternalMocker\");\r\nconst Range_1 = require(\"./Range\");\r\nconst StackTraceParser_1 = require(\"./StackTraceParser\");\r\nfunction createDirectReturnAnswer(value) {\r\n    return function directReturnAnswer() {\r\n        return value;\r\n    };\r\n}\r\nfunction createDirectThrowAnswer(error) {\r\n    return function directThrowAnswer() {\r\n        throw error;\r\n    };\r\n}\r\nfunction createCallRealMethodAnwser(realFunction) {\r\n    return function realMethodAnswer(...args) {\r\n        return realFunction(args);\r\n    };\r\n}\r\nfunction createPromiseResolveAnswer(value) {\r\n    return function directReturnAnswer() {\r\n        return Promise.resolve(value);\r\n    };\r\n}\r\nfunction createPromiseRejectAnswer(error) {\r\n    return function directReturnAnswer() {\r\n        return Promise.reject(error);\r\n    };\r\n}\r\nfunction normalizeMatcherArgs(args) {\r\n    const normalizedArgs = [];\r\n    for (const arg of args) {\r\n        const argMatcher = InternalMocker_1.GetInternalMockerSafe(arg) === null && typeof arg.matches === \"function\" ? arg : umbra_util_1.eq(arg);\r\n        normalizedArgs.push(argMatcher);\r\n    }\r\n    return normalizedArgs;\r\n}\r\nexports.normalizeMatcherArgs = normalizeMatcherArgs;\r\nconst NOT_SET = -1;\r\nclass OnGoingStubs extends umbra_assert_1.Expect {\r\n    constructor(mockedFunction) {\r\n        super(mockedFunction);\r\n        this.atMostCount = NOT_SET;\r\n        this.atLeastCount = NOT_SET;\r\n        this.timesCount = NOT_SET;\r\n        this.mockedFunction = mockedFunction;\r\n        this.internalMocker = InternalMocker_1.GetInternalMockerSafe(mockedFunction);\r\n        this.currentArgumentExpectations = null;\r\n        if (this.internalMocker) {\r\n            this.internalMocker.isInExpectation = true;\r\n            const expectation = {\r\n                internalMocker: this.internalMocker,\r\n                expectedRange: new Range_1.Range(1),\r\n                location: StackTraceParser_1.StacktraceUtils.getCurrentMockLocation(3),\r\n                answer: null,\r\n                expectedArgs: this.currentArgumentExpectations,\r\n                callCount: 0,\r\n                inOrderOverride: null,\r\n            };\r\n            this.internalMocker.expectations.push(expectation);\r\n            this.expectation = expectation;\r\n        }\r\n        else {\r\n            this.expectation = null;\r\n        }\r\n    }\r\n    getExpectation() {\r\n        if (this.expectation === null) {\r\n            throw new Error(\"Tried to access expectation on an invalid mock\");\r\n        }\r\n        return this.expectation;\r\n    }\r\n    withArgs(...args) {\r\n        if (this.expectation === null) {\r\n            throw new Error(\"Cannot set arguments expectations, an invalid mock object was provided\");\r\n        }\r\n        this.currentArgumentExpectations = normalizeMatcherArgs(args);\r\n        this.expectation.expectedArgs = this.currentArgumentExpectations;\r\n        return this;\r\n    }\r\n    andReturn(value) {\r\n        if (this.expectation === null) {\r\n            throw InternalMocker_1.createInvalidMockError(this.mockedFunction);\r\n        }\r\n        this.expectation.answer = createDirectReturnAnswer(value);\r\n        return this;\r\n    }\r\n    andStubReturn(value) {\r\n        if (this.expectation === null) {\r\n            throw InternalMocker_1.createInvalidMockError(this.mockedFunction);\r\n        }\r\n        this.expectation.answer = createDirectReturnAnswer(value);\r\n        this.atLeast(0);\r\n    }\r\n    andThrow(error) {\r\n        if (this.expectation === null) {\r\n            throw InternalMocker_1.createInvalidMockError(this.mockedFunction);\r\n        }\r\n        this.expectation.answer = createDirectThrowAnswer(error);\r\n        return this;\r\n    }\r\n    andStubThrow(error) {\r\n        if (this.expectation === null) {\r\n            throw InternalMocker_1.createInvalidMockError(this.mockedFunction);\r\n        }\r\n        this.expectation.answer = createDirectThrowAnswer(error);\r\n        this.atLeast(0);\r\n    }\r\n    andCallRealMethod() {\r\n        if (this.expectation === null || this.internalMocker === null) {\r\n            throw InternalMocker_1.createInvalidMockError(this.mockedFunction);\r\n        }\r\n        const realFunction = this.internalMocker.realFunction;\r\n        if (!realFunction) {\r\n            throw new Error(\"No function was available. Ensure a real object was passed to the spy\");\r\n        }\r\n        this.expectation.answer = createCallRealMethodAnwser(realFunction);\r\n        return this;\r\n    }\r\n    andAnswer(answer) {\r\n        if (this.expectation === null) {\r\n            throw InternalMocker_1.createInvalidMockError(this.mockedFunction);\r\n        }\r\n        this.expectation.answer = answer;\r\n        return this;\r\n    }\r\n    andStubAnswer(answer) {\r\n        if (this.expectation === null) {\r\n            throw InternalMocker_1.createInvalidMockError(this.mockedFunction);\r\n        }\r\n        this.expectation.answer = answer;\r\n        this.atLeast(0);\r\n    }\r\n    andResolve(value) {\r\n        if (this.expectation === null) {\r\n            throw InternalMocker_1.createInvalidMockError(this.mockedFunction);\r\n        }\r\n        this.expectation.answer = createPromiseResolveAnswer(value);\r\n        return this;\r\n    }\r\n    andStubResolve(value) {\r\n        if (this.expectation === null) {\r\n            throw InternalMocker_1.createInvalidMockError(this.mockedFunction);\r\n        }\r\n        this.expectation.answer = createPromiseResolveAnswer(value);\r\n        this.atLeast(0);\r\n    }\r\n    andReject(error) {\r\n        if (this.expectation === null) {\r\n            throw InternalMocker_1.createInvalidMockError(this.mockedFunction);\r\n        }\r\n        this.expectation.answer = createPromiseRejectAnswer(error);\r\n        return this;\r\n    }\r\n    andStubReject(error) {\r\n        if (this.expectation === null) {\r\n            throw InternalMocker_1.createInvalidMockError(this.mockedFunction);\r\n        }\r\n        this.expectation.answer = createPromiseRejectAnswer(error);\r\n        this.atLeast(0);\r\n    }\r\n    times(count) {\r\n        if (this.expectation === null) {\r\n            throw InternalMocker_1.createInvalidMockError(this.mockedFunction);\r\n        }\r\n        if (this.timesCount !== NOT_SET || this.atLeastCount !== NOT_SET || this.atMostCount !== NOT_SET) {\r\n            throw new Error(\"Previously set expectation count, value must only be set once\");\r\n        }\r\n        this.timesCount = count;\r\n        this.setExpectedRange(new Range_1.Range(count));\r\n        return this;\r\n    }\r\n    once() {\r\n        return this.times(1);\r\n    }\r\n    twice() {\r\n        return this.times(2);\r\n    }\r\n    atMost(atMostInvocations) {\r\n        if (this.expectation === null) {\r\n            throw InternalMocker_1.createInvalidMockError(this.mockedFunction);\r\n        }\r\n        if (this.timesCount !== NOT_SET || (this.atMostCount !== NOT_SET && this.atMostCount !== Number.MAX_SAFE_INTEGER)) {\r\n            throw new Error(\"Previously set expectation count, value must only be set once\");\r\n        }\r\n        this.atMostCount = atMostInvocations;\r\n        this.atLeastCount = this.atLeastCount !== NOT_SET ? this.atLeastCount : 0;\r\n        this.setExpectedRange(new Range_1.Range(this.atLeastCount, this.atMostCount));\r\n        return this;\r\n    }\r\n    atLeast(atLeastInvocations) {\r\n        if (this.timesCount !== NOT_SET || (this.atLeastCount !== NOT_SET && this.atLeastCount !== 0)) {\r\n            throw new Error(\"Previously set expectation count, value must only be set once\");\r\n        }\r\n        this.atLeastCount = atLeastInvocations;\r\n        this.atMostCount = this.atMostCount !== NOT_SET ? this.atMostCount : Number.MAX_SAFE_INTEGER;\r\n        this.setExpectedRange(new Range_1.Range(this.atLeastCount, this.atMostCount));\r\n        return this;\r\n    }\r\n    setExpectedRange(range) {\r\n        const expectations = this.internalMocker.expectations;\r\n        if (expectations.length > 1 && range.isFixedRange()) {\r\n            const newExpectations = expectations[expectations.length - 1];\r\n            const lastExpectations = expectations[expectations.length - 2];\r\n            if (!lastExpectations.expectedRange.isFixedRange()) {\r\n                if (this.doArgumentsMatch(lastExpectations, newExpectations)) {\r\n                    throw new Error(\"Previous expectation had a non fixed range.\");\r\n                }\r\n            }\r\n        }\r\n        this.expectation.expectedRange = range;\r\n    }\r\n    doArgumentsMatch(lastExpectations, newExpectations) {\r\n        if (newExpectations.expectedArgs === null || lastExpectations.expectedArgs === null) {\r\n            return lastExpectations.expectedArgs === null && newExpectations.expectedArgs === null;\r\n        }\r\n        if (newExpectations.expectedArgs.length !== lastExpectations.expectedArgs.length) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < newExpectations.expectedArgs.length; i++) {\r\n            const lastArg = lastExpectations.expectedArgs[i];\r\n            const newArg = newExpectations.expectedArgs[i];\r\n            if (!newArg.equals(lastArg)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexports.OnGoingStubs = OnGoingStubs;\r\n//# sourceMappingURL=OnGoingStubs.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.verify = exports.reset = void 0;\r\nconst InternalMocker_1 = require(\"./InternalMocker\");\r\nfunction verify(...mocks) {\r\n    for (const mock of mocks) {\r\n        verifyMock(mock);\r\n    }\r\n}\r\nexports.verify = verify;\r\nfunction reset(...mocks) {\r\n    for (const mock of mocks) {\r\n        resetMock(mock);\r\n    }\r\n}\r\nexports.reset = reset;\r\nfunction resetMock(mock) {\r\n    const internalMocker = InternalMocker_1.GetInternalMocker(mock);\r\n    const test = Object.keys(mock);\r\n    for (const key of test) {\r\n        const value = mock[key];\r\n        if (value) {\r\n            const internalFunctionMocker = InternalMocker_1.GetInternalMockerSafe(value);\r\n            if (internalFunctionMocker) {\r\n                resetMock(value);\r\n            }\r\n        }\r\n    }\r\n    internalMocker.isInExpectation = false;\r\n    clearArray(internalMocker.expectations);\r\n    clearArray(internalMocker.inProgressInOrder);\r\n    clearArray(internalMocker.recordedInvocations);\r\n}\r\nfunction clearArray(array) {\r\n    while (array.length > 0) {\r\n        array.shift();\r\n    }\r\n}\r\nfunction verifyMock(mock) {\r\n    const internalMocker = InternalMocker_1.GetInternalMocker(mock);\r\n    const test = Reflect.ownKeys(mock);\r\n    for (const key of test) {\r\n        const value = Reflect.get(mock, key);\r\n        if (value) {\r\n            const internalFunctionMocker = InternalMocker_1.GetInternalMockerSafe(value);\r\n            if (internalFunctionMocker) {\r\n                verifyMock(value);\r\n            }\r\n        }\r\n    }\r\n    for (const expectation of internalMocker.expectations) {\r\n        if (!expectation.expectedRange.isInRange(expectation.callCount)) {\r\n            throw new Error(buildErrorMessage(internalMocker.recordedInvocations, expectation));\r\n        }\r\n    }\r\n}\r\nfunction buildErrorMessage(args, expectationData) {\r\n    const calledLocations = buildCallLocations(expectationData.expectedArgs, args);\r\n    const specificMessage = buildRangeMessage(expectationData.expectedRange, expectationData.callCount);\r\n    const callLocation = calledLocations.length > 0 ? \"Called at:\\n\" + calledLocations.join(\"\\n\") : \"\";\r\n    return `${specificMessage}\\nExpected at: ${expectationData.location}\\n${callLocation}\\n\\u00A0`;\r\n}\r\nfunction buildRangeMessage(range, callCount) {\r\n    return `Expected ${range.describeRange()}, got ${callCount}.`;\r\n}\r\nfunction buildCallLocations(expectedArgs, args) {\r\n    const callLocations = [];\r\n    for (const invocation of args) {\r\n        if (expectedArgs === null) {\r\n            if (invocation.location !== null) {\r\n                callLocations.push(invocation.location);\r\n            }\r\n        }\r\n    }\r\n    return callLocations;\r\n}\r\n//# sourceMappingURL=Verify.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createdMocks = void 0;\r\nconst Verify_1 = require(\"./Verify\");\r\nlet createdMocks = null;\r\nexports.createdMocks = createdMocks;\r\nconst umbraTestRunner = global.__testRunner;\r\nif (umbraTestRunner) {\r\n    exports.createdMocks = createdMocks = [];\r\n    umbraTestRunner.on(\"testSuccess\", () => {\r\n        for (const mock of createdMocks) {\r\n            Verify_1.verify(mock);\r\n        }\r\n        exports.createdMocks = createdMocks = [];\r\n    });\r\n    umbraTestRunner.on(\"testFail\", () => {\r\n        exports.createdMocks = createdMocks = [];\r\n    });\r\n    umbraTestRunner.on(\"testTimeout\", () => {\r\n        exports.createdMocks = createdMocks = [];\r\n    });\r\n}\r\n//# sourceMappingURL=UmbraTestRunnerIntegration.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StrictnessMode = exports.setDefaultOptions = exports.expect = exports.staticMock = exports.partialMock = exports.mock = exports.inOrder = void 0;\r\nconst InternalMocker_1 = require(\"./InternalMocker\");\r\nconst MockedFunction_1 = require(\"./MockedFunction\");\r\nconst OnGoingStubs_1 = require(\"./OnGoingStubs\");\r\nconst UmbraTestRunnerIntegration_1 = require(\"./UmbraTestRunnerIntegration\");\r\nconst objectPrototype = Object.prototype;\r\nvar StrictnessMode;\r\n(function (StrictnessMode) {\r\n    StrictnessMode[StrictnessMode[\"Strict\"] = 0] = \"Strict\";\r\n    StrictnessMode[StrictnessMode[\"Loose\"] = 1] = \"Loose\";\r\n})(StrictnessMode || (StrictnessMode = {}));\r\nexports.StrictnessMode = StrictnessMode;\r\nclass InvocationHandler {\r\n    constructor(clazz, mockedFunction, realObject, mockName, options, mockType) {\r\n        this.classPrototype = clazz;\r\n        this.realObject = realObject;\r\n        this.mockName = mockName;\r\n        this.options = options;\r\n        this.mockType = mockType;\r\n        if (this.mockName !== null) {\r\n            Reflect.defineProperty(realObject, \"name\", { value: this.mockName });\r\n        }\r\n        this.internalMocker = InternalMocker_1.CreateInternalMocker(mockedFunction, realObject, this.mockName, this.options, this.mockType);\r\n    }\r\n    apply(target, thisArg, argArray) {\r\n        return target.apply(thisArg, argArray);\r\n    }\r\n    construct(target, argArray, newTarget) {\r\n        if (this.mockType === InternalMocker_1.MockType.Partial) {\r\n            return partialMock(new this.realObject(...argArray));\r\n        }\r\n        return {};\r\n    }\r\n    get(target, p, receiver) {\r\n        if (p === InternalMocker_1.INTERNAL_MOCKER_NAME) {\r\n            return this.internalMocker;\r\n        }\r\n        let realValue = Reflect.get(this.realObject, p, receiver);\r\n        if (realValue !== undefined) {\r\n            if (typeof realValue !== \"function\" || this.mockType !== InternalMocker_1.MockType.Partial || InternalMocker_1.GetInternalMockerSafe(realValue) !== null) {\r\n                return realValue;\r\n            }\r\n        }\r\n        if (this.classPrototype && realValue === undefined) {\r\n            const propertyDescriptor = this.getPropertyDescriptor(this.classPrototype, p);\r\n            if (propertyDescriptor !== undefined) {\r\n                realValue = propertyDescriptor.value;\r\n            }\r\n            else if (this.mockType === InternalMocker_1.MockType.Instance) {\r\n                return undefined;\r\n            }\r\n        }\r\n        if (this.realObject instanceof Promise && p === \"then\") {\r\n            realValue = realValue.bind(this.realObject);\r\n        }\r\n        let newCachedField;\r\n        const mockName = this.mockName !== null ? `${this.mockName}.${p.toString()}` : p.toString();\r\n        switch (this.mockType) {\r\n            case InternalMocker_1.MockType.Instance:\r\n                newCachedField = mock(realValue, mockName);\r\n                break;\r\n            case InternalMocker_1.MockType.Static:\r\n            case InternalMocker_1.MockType.Partial:\r\n                if (!realValue) {\r\n                    return realValue;\r\n                }\r\n                newCachedField = partialMock(realValue);\r\n                break;\r\n            default:\r\n                throw new Error(\"Unknown mock type \" + InternalMocker_1.MockType[this.mockType]);\r\n        }\r\n        Reflect.set(this.realObject, p, newCachedField);\r\n        return newCachedField;\r\n    }\r\n    deleteProperty(target, p) {\r\n        return Reflect.deleteProperty(this.realObject, p);\r\n    }\r\n    set(target, p, value, receiver) {\r\n        return Reflect.set(this.realObject, p, value, receiver);\r\n    }\r\n    ownKeys(target) {\r\n        let normalTargetKeys = Reflect.ownKeys(target);\r\n        if (this.mockType === InternalMocker_1.MockType.Static) {\r\n            normalTargetKeys = normalTargetKeys.concat(Reflect.ownKeys(this.classPrototype));\r\n        }\r\n        const resultKeys = Reflect.ownKeys(this.realObject);\r\n        const internalMockIndex = resultKeys.indexOf(InternalMocker_1.INTERNAL_MOCKER_NAME);\r\n        if (internalMockIndex !== -1) {\r\n            resultKeys.splice(internalMockIndex, 1);\r\n        }\r\n        for (const key of normalTargetKeys) {\r\n            if (key === InternalMocker_1.INTERNAL_MOCKER_NAME) {\r\n                continue;\r\n            }\r\n            if (resultKeys.indexOf(key) === -1) {\r\n                resultKeys.push(key);\r\n            }\r\n        }\r\n        return resultKeys;\r\n    }\r\n    getOwnPropertyDescriptor(target, p) {\r\n        const descriptor = Reflect.getOwnPropertyDescriptor(target, p);\r\n        if (descriptor !== undefined) {\r\n            return descriptor;\r\n        }\r\n        return Reflect.getOwnPropertyDescriptor(this.realObject, p);\r\n    }\r\n    getPropertyDescriptor(object, propertyKey) {\r\n        if (!object) {\r\n            return undefined;\r\n        }\r\n        let searchTarget = object;\r\n        while (searchTarget !== objectPrototype) {\r\n            const propertyDescriptor = Reflect.getOwnPropertyDescriptor(searchTarget, propertyKey);\r\n            if (propertyDescriptor !== undefined) {\r\n                return propertyDescriptor;\r\n            }\r\n            searchTarget = Reflect.getPrototypeOf(searchTarget);\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nlet defaultOptions = {\r\n    strictMode: StrictnessMode.Strict,\r\n    inOrder: false\r\n};\r\nfunction setDefaultOptions(options) {\r\n    defaultOptions = Object.assign(defaultOptions, options);\r\n}\r\nexports.setDefaultOptions = setDefaultOptions;\r\nfunction mock(clazz, mockName, options = defaultOptions) {\r\n    const stubFunction = MockedFunction_1.createMockedFunction();\r\n    if (typeof clazz === \"string\") {\r\n        mockName = clazz;\r\n        clazz = undefined;\r\n    }\r\n    if (!mockName) {\r\n        mockName = null;\r\n    }\r\n    const proxy = new Proxy(stubFunction, new InvocationHandler(clazz ? clazz.prototype : null, stubFunction, stubFunction, mockName, options, InternalMocker_1.MockType.Instance));\r\n    if (UmbraTestRunnerIntegration_1.createdMocks) {\r\n        UmbraTestRunnerIntegration_1.createdMocks.push(proxy);\r\n    }\r\n    return proxy;\r\n}\r\nexports.mock = mock;\r\nfunction staticMock(clazz) {\r\n    const stubFunction = MockedFunction_1.createMockedFunction();\r\n    return new Proxy(stubFunction, new InvocationHandler(clazz, stubFunction, stubFunction, null, defaultOptions, InternalMocker_1.MockType.Static));\r\n}\r\nexports.staticMock = staticMock;\r\nfunction partialMock(realObject, mockName = null, options = defaultOptions) {\r\n    const stubFunction = (typeof realObject === \"function\" ? MockedFunction_1.createMockedFunction() : {});\r\n    return new Proxy(stubFunction, new InvocationHandler(Object.getPrototypeOf(realObject), stubFunction, realObject, mockName, options, InternalMocker_1.MockType.Partial));\r\n}\r\nexports.partialMock = partialMock;\r\nfunction expect(mockedFunction) {\r\n    return new OnGoingStubs_1.OnGoingStubs(mockedFunction);\r\n}\r\nexports.expect = expect;\r\nfunction inOrder(...stubs) {\r\n    const inOrderExpectation = {\r\n        expectations: [],\r\n        currentIndex: 0\r\n    };\r\n    const castStubs = stubs;\r\n    for (const castStub of castStubs) {\r\n        const expectation = castStub.getExpectation();\r\n        inOrderExpectation.expectations.push(expectation);\r\n        expectation.inOrderOverride = inOrderExpectation;\r\n    }\r\n}\r\nexports.inOrder = inOrder;\r\n//# sourceMappingURL=Mock.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.newCapture = exports.matcher = exports.regexMatches = exports.startsWith = exports.lte = exports.lt = exports.gte = exports.gt = exports.eq = exports.any = exports.setDefaultOptions = exports.inOrder = exports.verify = exports.reset = exports.expect = exports.staticMock = exports.partialMock = exports.mock = void 0;\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nObject.defineProperty(exports, \"any\", { enumerable: true, get: function () { return umbra_util_1.any; } });\r\nObject.defineProperty(exports, \"eq\", { enumerable: true, get: function () { return umbra_util_1.eq; } });\r\nObject.defineProperty(exports, \"gt\", { enumerable: true, get: function () { return umbra_util_1.gt; } });\r\nObject.defineProperty(exports, \"gte\", { enumerable: true, get: function () { return umbra_util_1.gte; } });\r\nObject.defineProperty(exports, \"lt\", { enumerable: true, get: function () { return umbra_util_1.lt; } });\r\nObject.defineProperty(exports, \"lte\", { enumerable: true, get: function () { return umbra_util_1.lte; } });\r\nObject.defineProperty(exports, \"matcher\", { enumerable: true, get: function () { return umbra_util_1.matcher; } });\r\nObject.defineProperty(exports, \"regexMatches\", { enumerable: true, get: function () { return umbra_util_1.regexMatches; } });\r\nObject.defineProperty(exports, \"startsWith\", { enumerable: true, get: function () { return umbra_util_1.startsWith; } });\r\nconst Capture_1 = require(\"./Capture\");\r\nObject.defineProperty(exports, \"newCapture\", { enumerable: true, get: function () { return Capture_1.newCapture; } });\r\nconst Mock_1 = require(\"./Mock\");\r\nObject.defineProperty(exports, \"expect\", { enumerable: true, get: function () { return Mock_1.expect; } });\r\nObject.defineProperty(exports, \"inOrder\", { enumerable: true, get: function () { return Mock_1.inOrder; } });\r\nObject.defineProperty(exports, \"mock\", { enumerable: true, get: function () { return Mock_1.mock; } });\r\nObject.defineProperty(exports, \"partialMock\", { enumerable: true, get: function () { return Mock_1.partialMock; } });\r\nObject.defineProperty(exports, \"setDefaultOptions\", { enumerable: true, get: function () { return Mock_1.setDefaultOptions; } });\r\nObject.defineProperty(exports, \"staticMock\", { enumerable: true, get: function () { return Mock_1.staticMock; } });\r\nconst Verify_1 = require(\"./Verify\");\r\nObject.defineProperty(exports, \"reset\", { enumerable: true, get: function () { return Verify_1.reset; } });\r\nObject.defineProperty(exports, \"verify\", { enumerable: true, get: function () { return Verify_1.verify; } });\r\nrequire(\"./UmbraTestRunnerIntegration\");\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TestRunner = exports.staticMock = exports.startsWith = exports.setMockOptions = exports.reset = exports.regexMatches = exports.partialMock = exports.newCapture = exports.matcher = exports.lte = exports.lt = exports.inOrder = exports.gte = exports.gt = exports.eq = exports.any = exports.verify = exports.mock = exports.assert = exports.expect = void 0;\r\nrequire(\"umbra-cli/lib/StartupStages/ExportGlobals\");\r\nconst umbra_test_runner_1 = require(\"@umbra-test/umbra-test-runner\");\r\nObject.defineProperty(exports, \"TestRunner\", { enumerable: true, get: function () { return umbra_test_runner_1.TestRunner; } });\r\nconst umbra_assert_1 = require(\"umbra-assert\");\r\nObject.defineProperty(exports, \"assert\", { enumerable: true, get: function () { return umbra_assert_1.assert; } });\r\nconst umbra_test_mock_1 = require(\"umbra-test-mock\");\r\nObject.defineProperty(exports, \"any\", { enumerable: true, get: function () { return umbra_test_mock_1.any; } });\r\nObject.defineProperty(exports, \"eq\", { enumerable: true, get: function () { return umbra_test_mock_1.eq; } });\r\nObject.defineProperty(exports, \"expect\", { enumerable: true, get: function () { return umbra_test_mock_1.expect; } });\r\nObject.defineProperty(exports, \"gt\", { enumerable: true, get: function () { return umbra_test_mock_1.gt; } });\r\nObject.defineProperty(exports, \"gte\", { enumerable: true, get: function () { return umbra_test_mock_1.gte; } });\r\nObject.defineProperty(exports, \"inOrder\", { enumerable: true, get: function () { return umbra_test_mock_1.inOrder; } });\r\nObject.defineProperty(exports, \"lt\", { enumerable: true, get: function () { return umbra_test_mock_1.lt; } });\r\nObject.defineProperty(exports, \"lte\", { enumerable: true, get: function () { return umbra_test_mock_1.lte; } });\r\nObject.defineProperty(exports, \"matcher\", { enumerable: true, get: function () { return umbra_test_mock_1.matcher; } });\r\nObject.defineProperty(exports, \"mock\", { enumerable: true, get: function () { return umbra_test_mock_1.mock; } });\r\nObject.defineProperty(exports, \"newCapture\", { enumerable: true, get: function () { return umbra_test_mock_1.newCapture; } });\r\nObject.defineProperty(exports, \"partialMock\", { enumerable: true, get: function () { return umbra_test_mock_1.partialMock; } });\r\nObject.defineProperty(exports, \"regexMatches\", { enumerable: true, get: function () { return umbra_test_mock_1.regexMatches; } });\r\nObject.defineProperty(exports, \"reset\", { enumerable: true, get: function () { return umbra_test_mock_1.reset; } });\r\nObject.defineProperty(exports, \"setMockOptions\", { enumerable: true, get: function () { return umbra_test_mock_1.setDefaultOptions; } });\r\nObject.defineProperty(exports, \"startsWith\", { enumerable: true, get: function () { return umbra_test_mock_1.startsWith; } });\r\nObject.defineProperty(exports, \"staticMock\", { enumerable: true, get: function () { return umbra_test_mock_1.staticMock; } });\r\nObject.defineProperty(exports, \"verify\", { enumerable: true, get: function () { return umbra_test_mock_1.verify; } });\r\n//# sourceMappingURL=index.js.map"],"names":["Object","defineProperty","exports","value","[object Object]","fn","name","writable","length","Promise","resolve","reject","result","Error","e","TimeoutError","message","elapsedMs","timeoutMs","super","this","promise","startTime","Date","now","timerId","timeoutPromise","setTimeout","catch","clearTimeout","race","then","to","from","entryType","stopOnFirstFail","union","arrayA","arrayB","item","indexOf","push","without","array","indexOfItem","splice","onListeners","onceListeners","event","callback","args","call","promises","all","results","queue","element","stack","pop","shift","i","j","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","done","apply","QueueStackTypes","config","eventEmitter","SimpleEventEmitter_1","SimpleEventEmitter","asyncPromisifier","AsyncPromisifier_1","AsyncPromisifier","timeoutPromisifier","TimeoutPromisifier_1","TimeoutPromisifier","testQueueStack","queueStacks","before","QueueStack_1","QueueStack","beforeEach","after","afterEach","currentTest","testRunCancelled","describe","title","execBlock","throwIfTestInProgress","pushToCurrentTestQueue","describeOnly","describeSkip","options","undefined","it","itOnly","itSkip","runNextTestQueue","evaluatedTest","firstOnlyIndex","executeTest","tests","evaluateQueueWithTimeout","resetRunResults","runResults","elapsedTimeMs","totalTests","totalSuccesses","totalFailures","totalTimeouts","failureInfo","timeoutInfo","TestRunnerConfig_1","mergeConfig","DefaultTestRunnerConfig_1","DefaultTestRunnerConfig","only","skip","absolutePath","lastFilePathSet","on","once","off","pushOnTop","currentRun","type","reset","testQueue","titleChain","evaluatedBefores","skipAllTests","currentEntry","testEntry","absoluteFilePath","entry","currentlyExecutingFilePath","emit","evaluateDescribe","evaluateTest","concat","pushStack","exec","shiftStack","describeDurationMs","executeTestCallback","timeoutValue","getTimeoutValue","wrap","emitAndWaitForCompletion","testDurationMs","error","describeChain","evaluateQueue","queueStack","traverseLevelOrder","traverseInverseLevelOrder","timeout","enumerable","get","TestRunner_1","TestRunner","deepEqual","a","b","getTime","exists","key","aKeys","bKeys","prototype","keys","sort","deepEqualObject","ArrayUtils_1","compareDefault","compare","initialValues","compareFunction","insert","foundIndex","searchInternal","highestIndex","index","search","ordering","high","low","Math","floor","object","RegExp","toString","mockerData","mock","internalMocker","GetMockerDataSafe","mockName","JSON","stringify","validator","precedence","matches","description","equals","other","realValue","Stringify_1","printObject","DeepEqual_1","startsWith","test","func","SortedArray_1","SortedArray","ArgumentValidator_1","any","eq","gt","gte","lt","lte","matcher","regexMatches","INTERNAL_MOCKER_NAME","AssertionError","ourMessage","theirMessage","assert","output","expected","actual","umbra_util_1","is","strictEqual","target","keyPath","pathArray","split","path","newResult","fail","actualValue","equal","errorMessage","notEqual","isTrue","Array","isArray","entryKey","entryValue","entries","values","contains","snapshot","snapshotString","Expect","Assert_1","has","isTruthy","isFalsy","Expect_1","expect","printString","String","replace","alreadySeenObjects","printObjectCapture","objectCaptured","indent","toISOString","typeofObject","arrayData","join","substr","Reflect","ownKeys","keyStrings","CaptureInternal","first","last","arg","MockType","GetInternalMockerSafe","createInvalidMockError","mockedFunction","realFunction","mockType","expectations","recordedInvocations","inProgressInOrder","isInExpectation","depth","stackTrace","stackTraceLines","callingLocation","findBestArgumentMatcher","argumentMatcherArray","inOrderOverride","expectedArgs","argLengthDifference","aMatcherPrecedence","sumMatchers","expectation","getData","callCount","expectedRange","end","verifyArgumentMatcher","sum","isValid","argumentValidator","defaultExpectationOptions","includeLocation","buildExpectationString","argsString","argData","argumentValdiatorArg","describeRange","location","mockedFunc","InternalMocker_1","GetInternalMocker","currentLocation","StackTraceParser_1","StacktraceUtils","getCurrentMockLocation","params","expectationData","expectedInvocation","currentIndex","expectedInvocationString","inProgressIndex","answer","Partial","strictMode","Mock_1","StrictnessMode","Strict","wording","argsStringified","argsText","start","count","Number","MAX_SAFE_INTEGER","isFixedRange","hasNoUpperBound","createDirectReturnAnswer","createDirectThrowAnswer","createPromiseResolveAnswer","createPromiseRejectAnswer","normalizeMatcherArgs","normalizedArgs","argMatcher","OnGoingStubs","umbra_assert_1","atMostCount","atLeastCount","timesCount","currentArgumentExpectations","Range_1","Range","atLeast","createCallRealMethodAnwser","setExpectedRange","times","atMostInvocations","atLeastInvocations","range","newExpectations","lastExpectations","doArgumentsMatch","lastArg","resetMock","clearArray","verifyMock","isInRange","buildErrorMessage","calledLocations","callLocations","invocation","buildCallLocations","specificMessage","callLocation","mocks","createdMocks","umbraTestRunner","global","__testRunner","Verify_1","verify","objectPrototype","InvocationHandler","clazz","realObject","classPrototype","CreateInternalMocker","argArray","newTarget","partialMock","p","receiver","newCachedField","propertyDescriptor","getPropertyDescriptor","Instance","bind","Static","set","deleteProperty","normalTargetKeys","resultKeys","internalMockIndex","descriptor","getOwnPropertyDescriptor","propertyKey","searchTarget","getPrototypeOf","defaultOptions","inOrder","stubFunction","MockedFunction_1","createMockedFunction","proxy","Proxy","UmbraTestRunnerIntegration_1","assign","OnGoingStubs_1","stubs","inOrderExpectation","castStubs","castStub","getExpectation","Capture_1","newCapture","setDefaultOptions","staticMock","umbra_test_runner_1","umbra_test_mock_1"],"mappings":"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"}