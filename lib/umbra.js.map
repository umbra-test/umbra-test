{"version":3,"file":"umbra.js","sources":["../node_modules/@umbra-test/umbra-test-runner/lib/index.esm.js","../node_modules/@umbra-test/umbra-util/lib/DeepEqual.js","../node_modules/@umbra-test/umbra-util/lib/ArrayUtils.js","../node_modules/@umbra-test/umbra-util/lib/SimpleEventEmitter.js","../node_modules/@umbra-test/umbra-util/lib/SortedArray.js","../node_modules/@umbra-test/umbra-util/lib/Stringify.js","../node_modules/@umbra-test/umbra-util/lib/ArgumentValidator.js","../node_modules/@umbra-test/umbra-util/lib/index.js","../node_modules/umbra-assert/lib/Assert.js","../node_modules/umbra-assert/lib/Expect.js","../node_modules/umbra-assert/lib/index.js","../node_modules/umbra-test-mock/lib/Capture.js","../node_modules/umbra-test-mock/lib/InternalMocker.js","../node_modules/umbra-test-mock/lib/StackTraceParser.js","../node_modules/umbra-test-mock/lib/MockedFunction.js","../node_modules/umbra-test-mock/lib/Range.js","../node_modules/umbra-test-mock/lib/OnGoingStubs.js","../node_modules/umbra-test-mock/lib/Mock.js","../node_modules/umbra-test-mock/lib/Verify.js","../node_modules/umbra-test-mock/lib/index.js","index.js"],"sourcesContent":["class t{exec(t){if(1===t.length)return new Promise((e,s)=>{t(t=>{t instanceof Error?s(t):e(t)})});try{return Promise.resolve(t())}catch(t){return Promise.reject(t)}}}class e extends Error{constructor(t,e,s){super(t),this.timeoutMs=s}}class s{wrap(t,s){if(s<=0)return t;const i=Date.now();let r=null;const n=new Promise((t,n)=>{r=setTimeout(()=>{const t=Date.now()-i;n(new e(`Async task timeout exceeded! Elapsed: ${t}, timeout: ${s}ms.`,t,s))},s)});return t.catch(()=>{clearTimeout(r)}),Promise.race([t,n]).then(t=>(clearTimeout(r),t))}}const i={timeoutMs:100,stopOnFirstFail:!1};function r(t,e){if(!t)return e||[];if(!e)return t;for(const s of e)-1===t.indexOf(s)&&t.push(s);return t}function n(t,e){if(!t)return[];const s=t.indexOf(e);return-1!==s&&t.splice(s,1),t}class o{constructor(){this.onListeners={},this.onceListeners={}}on(t,e){this.onListeners[t]=r(this.onListeners[t],[e])}once(t,e){this.onceListeners[t]=r(this.onceListeners[t],[e])}off(t,e){this.onListeners[t]=n(this.onListeners[t],e),this.onceListeners[t]=n(this.onceListeners[t],e)}emit(t,...e){if(this.onListeners[t])for(const s of this.onListeners[t])s.call(null,...e);if(this.onceListeners[t]&&this.onceListeners[t].length>0){for(const s of this.onceListeners[t])s.call(null,...e);this.onceListeners[t]=[]}}emitAndWaitForCompletion(t,...e){const s=[];if(this.onListeners[t])for(const i of this.onListeners[t])try{s.push(Promise.resolve(i.call(null,...e)))}catch(t){s.push(Promise.reject(t))}if(this.onceListeners[t]&&this.onceListeners[t].length>0){for(const i of this.onceListeners[t])try{s.push(Promise.resolve(i.call(null,...e)))}catch(t){s.push(Promise.reject(t))}this.onceListeners[t]=[]}return Promise.all(s).then(t=>{})}}const u=[\"before\",\"beforeEach\",\"after\",\"afterEach\"];class h{constructor(e,r=new o){this.asyncPromisifier=new t,this.timeoutPromisifier=new s,this.testQueueStack=[],this.queueStacks={before:[[]],beforeEach:[[]],after:[[]],afterEach:[[]]},this.hasAnOnlyDescribe=!1,this.hasAnOnlyIt=!1,this.currentTest=null,this.testRunCancelled=!1,this.describe=(t,e)=>{this.throwIfTestInProgress(\"describe\"),this.pushToCurrentTestQueue(\"describe\",t,e)},this.describeOnly=(t,e)=>{this.throwIfTestInProgress(\"describe.only\"),this.hasAnOnlyDescribe=!0,this.pushToCurrentTestQueue(\"describe\",t,e,!0)},this.it=(t,e,s)=>{this.throwIfTestInProgress(\"it\"),this.pushToCurrentTestQueue(\"it\",t,e,!1,s?s.timeoutMs:void 0)},this.itOnly=(t,e,s)=>{this.throwIfTestInProgress(\"it.only\"),this.hasAnOnlyIt=!0,this.pushToCurrentTestQueue(\"it\",t,e,!0,s?s.timeoutMs:void 0)},this.runNextTestQueue=()=>{if(0===this.testQueueStack.length)return Promise.resolve();const t=this.testQueueStack.shift();let e=!1,s=Promise.resolve();for(let i=0;i<t.tests.length;i++){const r=t.tests[i];r.absoluteFilePath!==this.currentlyExecutingFilePath&&(this.currentlyExecutingFilePath=r.absoluteFilePath,this.eventEmitter.emit(\"activeFileChanged\",this.currentlyExecutingFilePath)),s=s.then(()=>{if(!this.testRunCancelled)return\"describe\"===r.type?this.evaluateDescribe(t,r):this.evaluateTest(t,r).then(t=>{e=t})})}return s.then(()=>{if(e)return this.evaluateQueueWithTimeout(\"after\")})},this.throwIfTestInProgress=t=>{if(this.currentTest)throw new Error(`Cannot add an ${t} block while executing a test!`)},this.resetRunResults=()=>{this.runResults={elapsedTimeMs:0,totalTests:0,totalSuccesses:0,totalFailures:0,totalTimeouts:0,failureInfo:[],timeoutInfo:[]}},this.config=function(t,e){if(!e||\"object\"!=typeof e)return t;if(\"object\"==typeof t.timeoutMs&&\"object\"==typeof e.timeoutMs)for(const s of[\"it\",\"before\",\"beforeEach\",\"after\",\"afterEach\"])\"number\"==typeof e.timeoutMs[s]&&(t.timeoutMs[s]=e.timeoutMs[s]);else void 0!==e.timeoutMs&&(t.timeoutMs=e.timeoutMs);return t.stopOnFirstFail!==e.stopOnFirstFail&&(t.stopOnFirstFail=e.stopOnFirstFail),t}(i,e),this.eventEmitter=r,this.it.only=this.itOnly,this.describe.only=this.describeOnly,this.resetRunResults()}setCurrentFile(t){this.lastFilePathSet=t}on(t,e){this.eventEmitter.on(t,e)}once(t,e){this.eventEmitter.once(t,e)}off(t,e){this.eventEmitter.off(t,e)}before(t){this.throwIfTestInProgress(\"before\"),this.queueStacks.before[0].push(t)}beforeEach(t){this.throwIfTestInProgress(\"beforeEach\"),this.queueStacks.beforeEach[0].push(t)}after(t){this.throwIfTestInProgress(\"after\"),this.queueStacks.after[0].push(t)}afterEach(t){this.throwIfTestInProgress(\"afterEach\"),this.queueStacks.afterEach[0].push(t)}run(){if(this.currentRun)throw new Error(\"Can't start a test run if one is already in progress!\");return this.currentRun=this.runNextTestQueue().then(()=>{const t=this.runResults;return this.resetRunResults(),t}).finally(()=>{this.currentRun=null}),this.currentRun}getCurrentTestInfo(){if(!this.currentTest)throw new Error(\"Can't obtain TestInfo if not actively in a test!\");return this.currentTest}reset(){if(this.currentRun)throw new Error(\"Can't reset if a test run is already in progress!\");this.resetRunResults(),this.testRunCancelled=!1,this.hasAnOnlyIt=!1,this.hasAnOnlyDescribe=!1,this.testQueueStack=[];for(const t of u)this.queueStacks[t]=[[]]}cancel(){if(this.currentRun)return this.testRunCancelled=!0,this.currentRun.then(t=>(this.reset(),t))}pushToCurrentTestQueue(t,e,s,i,r){if(0===this.testQueueStack.length){const t={titleChain:[],tests:[],evaluatedBefores:!1};this.testQueueStack.push(t)}const n=this.testQueueStack[this.testQueueStack.length-1],o={title:e,type:t,callback:s,absoluteFilePath:this.lastFilePathSet};i&&(o.only=i),r>0&&(o.timeoutMs=r),n.tests.push(o)}evaluateDescribe(t,e){if(this.hasAnOnlyDescribe&&!e.only)return Promise.resolve();this.testQueueStack.push({titleChain:[].concat(t.titleChain,e.title),tests:[],evaluatedBefores:!1});for(const t of u)this.queueStacks[t].push([]);this.eventEmitter.emit(\"beforeDescribe\",e.title);const s=Date.now();return this.asyncPromisifier.exec(e.callback).then(this.runNextTestQueue).then(()=>{for(const t of u)this.queueStacks[t].shift();const t=Date.now()-s;this.eventEmitter.emit(\"afterDescribe\",e.title,t)})}evaluateTest(t,s){if(this.hasAnOnlyIt&&!s.only)return Promise.resolve(!1);let i=Promise.resolve();return t.evaluatedBefores||(t.evaluatedBefores=!0,i=i.then(()=>this.evaluateQueueWithTimeout(\"before\"))),i.then(()=>this.evaluateQueueWithTimeout(\"beforeEach\").then(()=>{this.eventEmitter.emit(\"beforeTest\",s.title);const i=Date.now();this.currentTest=s;const r=s.timeoutMs>=0?s.timeoutMs:this.getTimeoutValue(\"it\");return this.timeoutPromisifier.wrap(this.asyncPromisifier.exec(s.callback),r).then(()=>this.eventEmitter.emitAndWaitForCompletion(\"beforeTestSuccess\",s.title)).then(()=>{this.runResults.totalSuccesses++;const t=Date.now()-i;this.eventEmitter.emit(\"testSuccess\",s.title,t)}).catch(r=>{r instanceof e?(this.runResults.totalTimeouts++,this.runResults.timeoutInfo.push({describeChain:t.titleChain,title:s.title,elapsedMs:r.elapsedMs,timeoutMs:r.timeoutMs}),this.eventEmitter.emit(\"testTimeout\",s.title,r.elapsedMs,r.timeoutMs)):(this.runResults.totalFailures++,this.runResults.failureInfo.push({describeChain:t.titleChain,title:s.title,error:r}),this.eventEmitter.emit(\"testFail\",s.title,r,Date.now()-i)),this.config.stopOnFirstFail&&(this.testRunCancelled=!0)}).then(()=>this.evaluateQueueWithTimeout(\"afterEach\")).finally(()=>{this.runResults.totalTests++,this.currentTest=null})})).then(()=>!0)}evaluateQueueWithTimeout(t){return this.timeoutPromisifier.wrap(this.evaluateQueue(t),this.getTimeoutValue(t))}evaluateQueue(t){const e=this.queueStacks[t];let s=Promise.resolve();if(\"before\"===t||\"beforeEach\"===t)for(let t=0;t<e.length;t++){const i=e[t];for(let t=0;t<i.length;t++)s=s.then(()=>this.asyncPromisifier.exec(i[t]))}else for(let t=e.length-1;t>=0;t--){const i=e[t];for(let t=i.length-1;t>=0;t--)s=s.then(()=>this.asyncPromisifier.exec(i[t]))}return s}getTimeoutValue(t){return\"number\"==typeof this.config.timeoutMs?this.config.timeoutMs:this.config.timeoutMs[t]}}export{h as TestRunner};\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    else if (a instanceof Date && b instanceof Date) {\r\n        return a.getTime() === b.getTime();\r\n    }\r\n    else if (!exists(a) || !exists(b) || typeof a !== \"object\" && typeof b !== \"object\") {\r\n        return a === b;\r\n    }\r\n    else {\r\n        return deepEqualObject(a, b);\r\n    }\r\n}\r\nexports.deepEqual = deepEqual;\r\nfunction deepEqualObject(a, b) {\r\n    let i;\r\n    let key;\r\n    if (!exists(a) || !exists(b)) {\r\n        return false;\r\n    }\r\n    if (a.prototype !== b.prototype) {\r\n        return false;\r\n    }\r\n    let aKeys;\r\n    let bKeys;\r\n    try {\r\n        aKeys = Object.keys(a);\r\n        bKeys = Object.keys(b);\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n    if (aKeys.length !== bKeys.length) {\r\n        return false;\r\n    }\r\n    aKeys.sort();\r\n    bKeys.sort();\r\n    for (i = aKeys.length - 1; i >= 0; i--) {\r\n        if (aKeys[i] !== bKeys[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    for (i = aKeys.length - 1; i >= 0; i--) {\r\n        key = aKeys[i];\r\n        if (!deepEqual(a[key], b[key])) {\r\n            return false;\r\n        }\r\n    }\r\n    return typeof a === typeof b;\r\n}\r\nfunction exists(value) {\r\n    return value !== null && value !== undefined;\r\n}\r\n//# sourceMappingURL=DeepEqual.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction union(arrayA, arrayB) {\r\n    if (!arrayA) {\r\n        return arrayB ? arrayB : [];\r\n    }\r\n    if (!arrayB) {\r\n        return arrayA;\r\n    }\r\n    for (const item of arrayB) {\r\n        if (arrayA.indexOf(item) === -1) {\r\n            arrayA.push(item);\r\n        }\r\n    }\r\n    return arrayA;\r\n}\r\nexports.union = union;\r\nfunction without(array, item) {\r\n    if (!array) {\r\n        return [];\r\n    }\r\n    const indexOfItem = array.indexOf(item);\r\n    if (indexOfItem !== -1) {\r\n        array.splice(indexOfItem, 1);\r\n    }\r\n    return array;\r\n}\r\nexports.without = without;\r\n//# sourceMappingURL=ArrayUtils.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ArrayUtils_1 = require(\"./ArrayUtils\");\r\nclass SimpleEventEmitter {\r\n    constructor() {\r\n        this.onListeners = {};\r\n        this.onceListeners = {};\r\n    }\r\n    on(event, callback) {\r\n        (this.onListeners[event]) = ArrayUtils_1.union(this.onListeners[event], [callback]);\r\n    }\r\n    once(event, callback) {\r\n        this.onceListeners[event] = ArrayUtils_1.union(this.onceListeners[event], [callback]);\r\n    }\r\n    off(event, callback) {\r\n        this.onListeners[event] = ArrayUtils_1.without(this.onListeners[event], callback);\r\n        this.onceListeners[event] = ArrayUtils_1.without(this.onceListeners[event], callback);\r\n    }\r\n    emit(event, ...args) {\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n    }\r\n    emitAndWaitForCompletion(event, ...args) {\r\n        const promises = [];\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n        return Promise.all(promises).then((results) => {\r\n            return;\r\n        });\r\n    }\r\n}\r\nexports.SimpleEventEmitter = SimpleEventEmitter;\r\n//# sourceMappingURL=SimpleEventEmitter.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass SortedArray {\r\n    constructor(compare = compareDefault, initialValues = []) {\r\n        this.array = [];\r\n        this.compareFunction = compare || compareDefault;\r\n        const length = initialValues.length;\r\n        for (let i = 0; i < length; i++) {\r\n            this.insert(initialValues[i]);\r\n        }\r\n    }\r\n    getData() {\r\n        return this.array;\r\n    }\r\n    insert(element) {\r\n        let foundIndex = this.searchInternal(element) + 1;\r\n        const highestIndex = this.array.length - 1;\r\n        while ((foundIndex < highestIndex) && (this.compareFunction(element, this.array[foundIndex]) === 0)) {\r\n            foundIndex++;\r\n        }\r\n        let index = this.array.length;\r\n        this.array.push(element);\r\n        while (index > foundIndex) {\r\n            this.array[index] = this.array[--index];\r\n        }\r\n        this.array[foundIndex] = element;\r\n    }\r\n    search(element) {\r\n        const foundIndex = this.searchInternal(element);\r\n        if (this.compareFunction(this.array[foundIndex], element) !== 0) {\r\n            return -1;\r\n        }\r\n        return foundIndex;\r\n    }\r\n    remove(element) {\r\n        const index = this.search(element);\r\n        if (index >= 0) {\r\n            this.array.splice(index, 1);\r\n        }\r\n    }\r\n    searchInternal(element) {\r\n        let high = this.array.length - 1;\r\n        let low = 0;\r\n        let index;\r\n        let ordering;\r\n        while (high >= low) {\r\n            index = Math.floor((high + low) / 2);\r\n            ordering = this.compareFunction(this.array[index], element);\r\n            if (ordering < 0) {\r\n                low = index + 1;\r\n            }\r\n            else if (ordering > 0) {\r\n                high = index - 1;\r\n            }\r\n            else {\r\n                return index;\r\n            }\r\n        }\r\n        return high;\r\n    }\r\n}\r\nexports.SortedArray = SortedArray;\r\nfunction compareDefault(a, b) {\r\n    if (a < b) {\r\n        return -1;\r\n    }\r\n    else if (a > b) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n//# sourceMappingURL=SortedArray.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst INTERNAL_MOCKER_NAME = \"__internalMocker\";\r\nexports.INTERNAL_MOCKER_NAME = INTERNAL_MOCKER_NAME;\r\nfunction GetMockerDataSafe(mock) {\r\n    const internalMocker = mock[INTERNAL_MOCKER_NAME];\r\n    return internalMocker !== null && internalMocker !== void 0 ? internalMocker : null;\r\n}\r\nfunction printObject(object) {\r\n    if (object === null) {\r\n        return \"null\";\r\n    }\r\n    if (object === undefined) {\r\n        return \"undefined\";\r\n    }\r\n    if (object instanceof RegExp) {\r\n        return object.toString();\r\n    }\r\n    const mockerData = GetMockerDataSafe(object);\r\n    if (mockerData !== null) {\r\n        return mockerData.mockName;\r\n    }\r\n    return JSON.stringify(object);\r\n}\r\nexports.printObject = printObject;\r\n//# sourceMappingURL=Stringify.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst DeepEqual_1 = require(\"./DeepEqual\");\r\nconst Stringify_1 = require(\"./Stringify\");\r\nfunction any() {\r\n    const validator = {\r\n        precedence: -1,\r\n        matches: () => true,\r\n        description: () => \"any()\",\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.any = any;\r\nfunction gt(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue > value),\r\n        description: () => `gt(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.gt = gt;\r\nfunction lt(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue < value),\r\n        description: () => `lt(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.lt = lt;\r\nfunction gte(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue >= value),\r\n        description: () => `gte(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.gte = gte;\r\nfunction lte(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue <= value),\r\n        description: () => `lte(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.lte = lte;\r\nfunction eq(value) {\r\n    const validator = {\r\n        precedence: 1,\r\n        matches: ((realValue) => DeepEqual_1.deepEqual(value, realValue)),\r\n        description: () => Stringify_1.printObject(value),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.eq = eq;\r\nfunction startsWith(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue.startsWith(value)),\r\n        description: () => \"startsWith \" + value,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.startsWith = startsWith;\r\nfunction regexMatches(value) {\r\n    const validator = {\r\n        matches: ((realValue) => value.test(realValue)),\r\n        description: () => value.toString(),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.regexMatches = regexMatches;\r\nfunction matcher(func) {\r\n    const validator = {\r\n        matches: (realValue) => func(realValue),\r\n        description: () => func.toString(),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.matcher = matcher;\r\n//# sourceMappingURL=ArgumentValidator.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst DeepEqual_1 = require(\"./DeepEqual\");\r\nexports.deepEqual = DeepEqual_1.deepEqual;\r\nconst SimpleEventEmitter_1 = require(\"./SimpleEventEmitter\");\r\nexports.SimpleEventEmitter = SimpleEventEmitter_1.SimpleEventEmitter;\r\nconst SortedArray_1 = require(\"./SortedArray\");\r\nexports.SortedArray = SortedArray_1.SortedArray;\r\nconst ArgumentValidator_1 = require(\"./ArgumentValidator\");\r\nexports.any = ArgumentValidator_1.any;\r\nexports.eq = ArgumentValidator_1.eq;\r\nexports.gt = ArgumentValidator_1.gt;\r\nexports.gte = ArgumentValidator_1.gte;\r\nexports.lt = ArgumentValidator_1.lt;\r\nexports.lte = ArgumentValidator_1.lte;\r\nexports.matcher = ArgumentValidator_1.matcher;\r\nexports.regexMatches = ArgumentValidator_1.regexMatches;\r\nexports.startsWith = ArgumentValidator_1.startsWith;\r\nconst Stringify_1 = require(\"./Stringify\");\r\nexports.INTERNAL_MOCKER_NAME = Stringify_1.INTERNAL_MOCKER_NAME;\r\nexports.printObject = Stringify_1.printObject;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nclass AssertionError extends Error {\r\n    constructor(ourMessage, theirMessage) {\r\n        const message = theirMessage ? ourMessage + \"\\n\" + theirMessage : ourMessage;\r\n        super(message);\r\n    }\r\n}\r\nclass Assert {\r\n    static that(output) {\r\n    }\r\n    static equal(expected, actual, message) {\r\n        if (umbra_util_1.deepEqual(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to deeply equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static notEqual(expected, actual, message) {\r\n        if (!umbra_util_1.deepEqual(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to not deeply equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static looseEqual(actual, expected, message) {\r\n        if (expected == actual) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} == ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static notLooseEqual(actual, expected, message) {\r\n        if (expected != actual) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} != ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static strictEqual(actual, expected, message) {\r\n        if (Object.is(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to strictly equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static notStrictEqual(actual, expected, message) {\r\n        if (!Object.is(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to not strictly equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static is(actual, expected, message) {\r\n        Assert.strictEqual(actual, expected, message);\r\n    }\r\n    static has(target, keyPath, expected, message) {\r\n        Assert.exists(target, \"target\");\r\n        Assert.exists(keyPath, \"keyPath\");\r\n        Assert.exists(target, \"target\");\r\n        const pathArray = keyPath.split(\".\");\r\n        let result = target;\r\n        for (const path of pathArray) {\r\n            const newResult = result[path];\r\n            if (!newResult) {\r\n                Assert.fail(`Missing key \"${path}\" in object ${umbra_util_1.printObject(result)}\\nAvailable keys: ${umbra_util_1.printObject(Object.keys(expected))}`);\r\n            }\r\n            result = newResult;\r\n        }\r\n        Assert.strictEqual(result, expected, message);\r\n    }\r\n    static regexMatches(actual, expected, message) {\r\n        if (expected.test(actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to match the regex ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static resolvesTo(actual, expected, message) {\r\n        return actual\r\n            .then((actualValue) => {\r\n            Assert.equal(actualValue, expected);\r\n        }, (e) => {\r\n            throw new AssertionError(`Promise should not have successfully resolved.\\nException: ${e}\\n`, message);\r\n        });\r\n    }\r\n    static rejects(actual, expected, message) {\r\n        const errorMessage = expected instanceof Error ? expected.message : expected;\r\n        return actual\r\n            .then(() => {\r\n            throw new AssertionError(\"Promise should not have successfully resolved\", message);\r\n        }, (e) => {\r\n            if (errorMessage) {\r\n                Assert.equal(errorMessage, e.message);\r\n            }\r\n        });\r\n    }\r\n    static fail(message) {\r\n        throw new AssertionError(\"Test failed\", message);\r\n    }\r\n    static isTrue(value, message) {\r\n        Assert.equal(true, value, message);\r\n    }\r\n    static isFalse(value, message) {\r\n        Assert.equal(false, value, message);\r\n    }\r\n    static isTruthy(value, message) {\r\n        if (!value) {\r\n            throw new AssertionError(`Expected ${value} to be truthy`, message);\r\n        }\r\n    }\r\n    static isFalsy(value, message) {\r\n        if (value) {\r\n            throw new AssertionError(`Expected ${value} to be falsy`, message);\r\n        }\r\n    }\r\n    static exists(expected, message) {\r\n        this.notEqual(expected, null, `Expected ${umbra_util_1.printObject(expected)} to not be null. ${message}`);\r\n        this.notEqual(expected, undefined, `Expected ${umbra_util_1.printObject(expected)} to not be undefined. ${message}`);\r\n        return true;\r\n    }\r\n    static contains(target, value, message) {\r\n        this.exists(target);\r\n        if (typeof target === \"string\") {\r\n            Assert.isTrue(target.indexOf(value) !== -1, `String: ${value} was not found in ${target}`);\r\n        }\r\n        else if (Array.isArray(target)) {\r\n            Assert.isTrue(target.indexOf(value) !== -1, `${umbra_util_1.printObject(value)} was not found in target array ${umbra_util_1.printObject(target)}. ${message !== null && message !== void 0 ? message : \"\"}`);\r\n        }\r\n        else {\r\n            for (const [entryKey, entryValue] of Object.entries(value)) {\r\n                Assert.equal(target[entryKey], entryValue);\r\n            }\r\n        }\r\n    }\r\n    static containsAll(target, values, message) {\r\n        this.exists(target);\r\n        this.exists(values);\r\n        for (const value of values) {\r\n            Assert.contains(target, value, message);\r\n        }\r\n    }\r\n}\r\nexports.Assert = Assert;\r\n//# sourceMappingURL=Assert.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Assert_1 = require(\"./Assert\");\r\nclass Expect {\r\n    constructor(target) {\r\n        this.target = target;\r\n    }\r\n    toBe(value) {\r\n        Assert_1.Assert.equal(this.target, value);\r\n    }\r\n    toHaveProperty(keyPath, value) {\r\n        Assert_1.Assert.has(this.target, keyPath, value);\r\n    }\r\n    toBeTruthy() {\r\n        Assert_1.Assert.isTruthy(this.target);\r\n    }\r\n    toBeFalsy() {\r\n        Assert_1.Assert.isFalsy(this.target);\r\n    }\r\n}\r\nexports.Expect = Expect;\r\nfunction expect(target) {\r\n    return new Expect(target);\r\n}\r\nexports.expect = expect;\r\n//# sourceMappingURL=Expect.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Assert_1 = require(\"./Assert\");\r\nexports.assert = Assert_1.Assert;\r\nconst Expect_1 = require(\"./Expect\");\r\nexports.Expect = Expect_1.Expect;\r\nexports.expect = Expect_1.expect;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass CaptureInternal {\r\n    constructor() {\r\n        this.all = [];\r\n    }\r\n    get first() {\r\n        if (this.all.length === 0) {\r\n            return null;\r\n        }\r\n        return this.all[0];\r\n    }\r\n    get last() {\r\n        if (this.all.length === 0) {\r\n            return null;\r\n        }\r\n        return this.all[this.all.length - 1];\r\n    }\r\n    matches(arg) {\r\n        this.all.push(arg);\r\n        return true;\r\n    }\r\n    description() {\r\n        if (this.all.length === 0) {\r\n            return \"Argument captor. No arguments captured\";\r\n        }\r\n        return \"Argument captor. Currently captured args: \" + this.all;\r\n    }\r\n    equals(other) {\r\n        if (other instanceof CaptureInternal) {\r\n            return other.all === this.all;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nfunction newCapture() {\r\n    return new CaptureInternal();\r\n}\r\nexports.newCapture = newCapture;\r\n//# sourceMappingURL=Capture.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nexports.INTERNAL_MOCKER_NAME = umbra_util_1.INTERNAL_MOCKER_NAME;\r\nfunction GetInternalMockerSafe(mock) {\r\n    const internalMocker = mock[umbra_util_1.INTERNAL_MOCKER_NAME];\r\n    return internalMocker !== null && internalMocker !== void 0 ? internalMocker : null;\r\n}\r\nexports.GetInternalMockerSafe = GetInternalMockerSafe;\r\nfunction GetInternalMocker(mock) {\r\n    const internalMocker = GetInternalMockerSafe(mock);\r\n    if (internalMocker === null) {\r\n        throw new Error(`Passed an object that was not a mock. Object: ${mock.toString()}`);\r\n    }\r\n    return internalMocker;\r\n}\r\nexports.GetInternalMocker = GetInternalMocker;\r\nfunction CreateInternalMocker(mockedFunction, realFunction, mockName, options) {\r\n    const internalMocker = {\r\n        expectations: [],\r\n        recordedInvocations: [],\r\n        realFunction: realFunction,\r\n        options: options,\r\n        inProgressInOrder: [],\r\n        isInExpectation: false,\r\n        mockName: mockName !== null && mockName !== void 0 ? mockName : \"mock\"\r\n    };\r\n    mockedFunction[umbra_util_1.INTERNAL_MOCKER_NAME] = internalMocker;\r\n    return internalMocker;\r\n}\r\nexports.CreateInternalMocker = CreateInternalMocker;\r\n//# sourceMappingURL=InternalMocker.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass StacktraceUtils {\r\n    static getCurrentMockLocation(depth) {\r\n        const stackTrace = new Error().stack;\r\n        if (stackTrace === undefined) {\r\n            return null;\r\n        }\r\n        const stackTraceLines = stackTrace.split(\"\\n\");\r\n        if (stackTraceLines.length < depth + 2) {\r\n            return null;\r\n        }\r\n        const callingLocation = stackTraceLines[depth + 1];\r\n        const matches = /.*?\\((.*?)\\)/.exec(callingLocation);\r\n        if (matches === null) {\r\n            return null;\r\n        }\r\n        return matches[1];\r\n    }\r\n}\r\nexports.StacktraceUtils = StacktraceUtils;\r\n//# sourceMappingURL=StackTraceParser.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nconst InternalMocker_1 = require(\"./InternalMocker\");\r\nconst Mock_1 = require(\"./Mock\");\r\nconst StackTraceParser_1 = require(\"./StackTraceParser\");\r\nfunction findBestArgumentMatcher(expectations, args) {\r\n    const argumentMatcherArray = new umbra_util_1.SortedArray((a, b) => {\r\n        if (a === undefined && b === undefined) {\r\n            return 0;\r\n        }\r\n        else if (a === undefined) {\r\n            return 1;\r\n        }\r\n        else if (b === undefined) {\r\n            return -1;\r\n        }\r\n        if (a.inOrderOverride !== null && b.inOrderOverride == null) {\r\n            return -1;\r\n        }\r\n        if (a.inOrderOverride === null && b.inOrderOverride !== null) {\r\n            return 1;\r\n        }\r\n        if (a.expectedArgs === null && b.expectedArgs === null) {\r\n            return 0;\r\n        }\r\n        else if (a.expectedArgs === null) {\r\n            return 1;\r\n        }\r\n        else if (b.expectedArgs === null) {\r\n            return -1;\r\n        }\r\n        const argLengthDifference = b.expectedArgs.length - a.expectedArgs.length;\r\n        if (argLengthDifference !== 0) {\r\n            return argLengthDifference;\r\n        }\r\n        const aMatcherPrecedence = sumMatchers(a.expectedArgs);\r\n        const bMatcherPrecedence = sumMatchers(b.expectedArgs);\r\n        return bMatcherPrecedence - aMatcherPrecedence;\r\n    });\r\n    for (const expectation of expectations) {\r\n        argumentMatcherArray.insert(expectation);\r\n    }\r\n    for (const expectation of argumentMatcherArray.getData()) {\r\n        if (expectation.callCount >= expectation.expectedRange.end) {\r\n            continue;\r\n        }\r\n        const expectedArgs = expectation.expectedArgs;\r\n        const isValid = verifyArgumentMatcher(expectedArgs, args);\r\n        if (isValid) {\r\n            return expectation;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.findBestArgumentMatcher = findBestArgumentMatcher;\r\nfunction sumMatchers(expectedArgs) {\r\n    let sum = 0;\r\n    for (const arg of expectedArgs) {\r\n        sum += arg.precedence !== undefined ? arg.precedence : 0;\r\n    }\r\n    return sum;\r\n}\r\nfunction verifyArgumentMatcher(expectedArgs, args) {\r\n    if (expectedArgs === null) {\r\n        return true;\r\n    }\r\n    if (args.length < expectedArgs.length) {\r\n        return false;\r\n    }\r\n    let isValid = true;\r\n    if (expectedArgs.length === 0) {\r\n        isValid = args.length === 0;\r\n    }\r\n    for (let i = 0; i < expectedArgs.length; i++) {\r\n        const argumentValidator = expectedArgs[i];\r\n        const arg = args[i];\r\n        isValid = isValid && argumentValidator.matches(arg);\r\n    }\r\n    return isValid;\r\n}\r\nexports.verifyArgumentMatcher = verifyArgumentMatcher;\r\nconst defaultExpectationOptions = { includeLocation: true };\r\nfunction buildExpectationString(expectation, options = defaultExpectationOptions) {\r\n    const mockedFuncName = expectation.internalMocker.mockName || \"mock\";\r\n    let argsString = `\\t${mockedFuncName}`;\r\n    if (expectation.expectedArgs === null) {\r\n        argsString += `() with any arguments`;\r\n    }\r\n    else {\r\n        const argData = [];\r\n        for (const argumentValdiatorArg of expectation.expectedArgs) {\r\n            if (argumentValdiatorArg.description) {\r\n                argData.push(argumentValdiatorArg.description());\r\n            }\r\n            else {\r\n                argData.push(argumentValdiatorArg.toString());\r\n            }\r\n        }\r\n        argsString += `(${argData.join(\", \")})`;\r\n    }\r\n    argsString += `. Expected ${expectation.expectedRange.describeRange()}, so far ${expectation.callCount}.`;\r\n    if (options.includeLocation) {\r\n        argsString += `\\n\\tExpectation set at ${expectation.location}`;\r\n    }\r\n    return argsString + \"\\n\";\r\n}\r\nfunction createMockedFunction() {\r\n    const mock = (...args) => {\r\n        const internalMocker = InternalMocker_1.GetInternalMocker(mockedFunc);\r\n        const currentLocation = StackTraceParser_1.StacktraceUtils.getCurrentMockLocation(2);\r\n        internalMocker.recordedInvocations.push({\r\n            params: args,\r\n            location: currentLocation\r\n        });\r\n        const expectationData = findBestArgumentMatcher(internalMocker.expectations, args);\r\n        if (expectationData !== null) {\r\n            if (expectationData.inOrderOverride) {\r\n                const inOrderOverride = expectationData.inOrderOverride;\r\n                const expectedInvocation = inOrderOverride.expectations[inOrderOverride.currentIndex];\r\n                if (expectedInvocation !== expectationData) {\r\n                    const expectedInvocationString = buildExpectationString(expectedInvocation);\r\n                    throw new Error(`Out of order method call.\\nExpected:\\n${expectedInvocationString}\\n` +\r\n                        `Actual:\\n${buildExpectationString(expectationData, { includeLocation: false })}` +\r\n                        `\\tCalled at ${currentLocation}`);\r\n                }\r\n                else {\r\n                    if (inOrderOverride.currentIndex === 0) {\r\n                        internalMocker.inProgressInOrder.push(inOrderOverride);\r\n                    }\r\n                    inOrderOverride.currentIndex++;\r\n                    if (inOrderOverride.currentIndex > inOrderOverride.expectations.length) {\r\n                        const inProgressIndex = internalMocker.inProgressInOrder.indexOf(inOrderOverride);\r\n                        if (inProgressIndex === -1) {\r\n                            throw new Error(\"Could not find in progress index\");\r\n                        }\r\n                        internalMocker.inProgressInOrder.splice(inProgressIndex, 1);\r\n                    }\r\n                }\r\n            }\r\n            else if (internalMocker.inProgressInOrder.length > 0) {\r\n                throw new Error(`Out of order method call.`);\r\n            }\r\n            expectationData.callCount++;\r\n            if (!expectationData.answer) {\r\n                return undefined;\r\n            }\r\n            const result = expectationData.answer(...args);\r\n            return result;\r\n        }\r\n        if (internalMocker.options.strictMode === Mock_1.StrictnessMode.Strict) {\r\n            let expectations = \"\";\r\n            for (const expectation of internalMocker.expectations) {\r\n                expectations += buildExpectationString(expectation) + \"\\n\";\r\n            }\r\n            expectations = expectations ? `\\nExpectations:\\n${expectations}\\u00A0` : \"\";\r\n            const wording = internalMocker.expectations.length > 0 ? \"matched\" : \"was set\";\r\n            const argsStringified = [];\r\n            for (const arg of args) {\r\n                argsStringified.push(umbra_util_1.printObject(arg));\r\n            }\r\n            const argsText = argsStringified.join(\", \");\r\n            throw new Error(`${mockedFunc.name}(${argsText}) was called but no expectation ${wording}.${expectations}`);\r\n        }\r\n        return null;\r\n    };\r\n    const mockedFunc = mock;\r\n    return mockedFunc;\r\n}\r\nexports.createMockedFunction = createMockedFunction;\r\n//# sourceMappingURL=MockedFunction.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Range {\r\n    constructor(start, end = start) {\r\n        if (start < 0) {\r\n            throw new Error(`Start value must be >= 0. Received ${start}`);\r\n        }\r\n        if (end < 1) {\r\n            throw Error(`End value must be >= 1. Received ${end}`);\r\n        }\r\n        if (start > end) {\r\n            throw new Error(`Start must be <= end. Start: ${start} End: ${end}`);\r\n        }\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    isFixedRange() {\r\n        return this.start === this.end;\r\n    }\r\n    isInRange(count) {\r\n        return count >= this.start && count <= this.end;\r\n    }\r\n    hasNoUpperBound() {\r\n        return this.end === Number.MAX_SAFE_INTEGER;\r\n    }\r\n    describeRange() {\r\n        if (this.isFixedRange()) {\r\n            return `${this.start} invocations`;\r\n        }\r\n        if (this.hasNoUpperBound()) {\r\n            return `at least ${this.start} invocations`;\r\n        }\r\n        return `between ${this.start} and ${this.end} invocations`;\r\n    }\r\n}\r\nexports.Range = Range;\r\n//# sourceMappingURL=Range.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nconst umbra_assert_1 = require(\"umbra-assert\");\r\nconst InternalMocker_1 = require(\"./InternalMocker\");\r\nconst Range_1 = require(\"./Range\");\r\nconst StackTraceParser_1 = require(\"./StackTraceParser\");\r\nfunction createDirectReturnAnswer(value) {\r\n    return function directReturnAnswer() {\r\n        return value;\r\n    };\r\n}\r\nfunction createDirectThrowAnswer(error) {\r\n    return function directThrowAnswer() {\r\n        throw error;\r\n    };\r\n}\r\nfunction createCallRealMethodAnwser(realFunction) {\r\n    return function realMethodAnswer(...args) {\r\n        return realFunction(args);\r\n    };\r\n}\r\nfunction createPromiseResolveAnswer(value) {\r\n    return function directReturnAnswer() {\r\n        return Promise.resolve(value);\r\n    };\r\n}\r\nfunction createPromiseRejectAnswer(error) {\r\n    return function directReturnAnswer() {\r\n        return Promise.reject(error);\r\n    };\r\n}\r\nfunction normalizeMatcherArgs(args) {\r\n    const normalizedArgs = [];\r\n    for (const arg of args) {\r\n        const argMatcher = InternalMocker_1.GetInternalMockerSafe(arg) === null && typeof arg.matches === \"function\" ? arg : umbra_util_1.eq(arg);\r\n        normalizedArgs.push(argMatcher);\r\n    }\r\n    return normalizedArgs;\r\n}\r\nexports.normalizeMatcherArgs = normalizeMatcherArgs;\r\nconst NOT_SET = -1;\r\nclass OnGoingStubs extends umbra_assert_1.Expect {\r\n    constructor(mockedFunction) {\r\n        super(mockedFunction);\r\n        this.atMostCount = NOT_SET;\r\n        this.atLeastCount = NOT_SET;\r\n        this.timesCount = NOT_SET;\r\n        this.internalMocker = InternalMocker_1.GetInternalMocker(mockedFunction);\r\n        this.currentArgumentExpectations = null;\r\n        this.internalMocker.isInExpectation = true;\r\n        const expectation = {\r\n            internalMocker: this.internalMocker,\r\n            expectedRange: new Range_1.Range(1),\r\n            location: StackTraceParser_1.StacktraceUtils.getCurrentMockLocation(3),\r\n            answer: null,\r\n            expectedArgs: this.currentArgumentExpectations,\r\n            callCount: 0,\r\n            inOrderOverride: null,\r\n        };\r\n        this.internalMocker.expectations.push(expectation);\r\n        this.expectation = expectation;\r\n    }\r\n    getExpectation() {\r\n        return this.expectation;\r\n    }\r\n    withArgs(...args) {\r\n        this.currentArgumentExpectations = normalizeMatcherArgs(args);\r\n        this.expectation.expectedArgs = this.currentArgumentExpectations;\r\n        return this;\r\n    }\r\n    andReturn(value) {\r\n        this.expectation.answer = createDirectReturnAnswer(value);\r\n        return this;\r\n    }\r\n    andStubReturn(value) {\r\n        this.expectation.answer = createDirectReturnAnswer(value);\r\n        this.atLeast(0);\r\n    }\r\n    andThrow(error) {\r\n        this.expectation.answer = createDirectThrowAnswer(error);\r\n        return this;\r\n    }\r\n    andCallRealMethod() {\r\n        const realFunction = this.internalMocker.realFunction;\r\n        if (!realFunction) {\r\n            throw new Error(\"No function was available. Ensure a real object was passed to the spy\");\r\n        }\r\n        this.expectation.answer = createCallRealMethodAnwser(realFunction);\r\n        return this;\r\n    }\r\n    andAnswer(answer) {\r\n        this.expectation.answer = answer;\r\n        return this;\r\n    }\r\n    andResolve(value) {\r\n        this.expectation.answer = createPromiseResolveAnswer(value);\r\n        return this;\r\n    }\r\n    andReject(error) {\r\n        this.expectation.answer = createPromiseRejectAnswer(error);\r\n        return this;\r\n    }\r\n    times(count) {\r\n        if (this.timesCount !== NOT_SET || this.atLeastCount !== NOT_SET || this.atMostCount !== NOT_SET) {\r\n            throw new Error(\"Previously set expectation count, value must only be set once\");\r\n        }\r\n        this.timesCount = count;\r\n        this.setExpectedRange(new Range_1.Range(count));\r\n        return this;\r\n    }\r\n    once() {\r\n        return this.times(1);\r\n    }\r\n    twice() {\r\n        return this.times(2);\r\n    }\r\n    atMost(atMostInvocations) {\r\n        if (this.timesCount !== NOT_SET || (this.atMostCount !== NOT_SET && this.atMostCount !== Number.MAX_SAFE_INTEGER)) {\r\n            throw new Error(\"Previously set expectation count, value must only be set once\");\r\n        }\r\n        this.atMostCount = atMostInvocations;\r\n        this.atLeastCount = this.atLeastCount !== NOT_SET ? this.atLeastCount : 0;\r\n        this.setExpectedRange(new Range_1.Range(this.atLeastCount, this.atMostCount));\r\n        return this;\r\n    }\r\n    atLeast(atLeastInvocations) {\r\n        if (this.timesCount !== NOT_SET || (this.atLeastCount !== NOT_SET && this.atLeastCount !== 0)) {\r\n            throw new Error(\"Previously set expectation count, value must only be set once\");\r\n        }\r\n        this.atLeastCount = atLeastInvocations;\r\n        this.atMostCount = this.atMostCount !== NOT_SET ? this.atMostCount : Number.MAX_SAFE_INTEGER;\r\n        this.setExpectedRange(new Range_1.Range(this.atLeastCount, this.atMostCount));\r\n        return this;\r\n    }\r\n    setExpectedRange(range) {\r\n        const expectations = this.internalMocker.expectations;\r\n        if (expectations.length > 1 && range.isFixedRange()) {\r\n            const newExpectations = expectations[expectations.length - 1];\r\n            const lastExpectations = expectations[expectations.length - 2];\r\n            if (!lastExpectations.expectedRange.isFixedRange()) {\r\n                if (this.doArgumentsMatch(lastExpectations, newExpectations)) {\r\n                    throw new Error(\"Previous expectation had a non fixed range.\");\r\n                }\r\n            }\r\n        }\r\n        this.expectation.expectedRange = range;\r\n    }\r\n    doArgumentsMatch(lastExpectations, newExpectations) {\r\n        if (newExpectations.expectedArgs === null || lastExpectations.expectedArgs === null) {\r\n            return lastExpectations.expectedArgs === null && newExpectations.expectedArgs === null;\r\n        }\r\n        if (newExpectations.expectedArgs.length !== lastExpectations.expectedArgs.length) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < newExpectations.expectedArgs.length; i++) {\r\n            const lastArg = lastExpectations.expectedArgs[i];\r\n            const newArg = newExpectations.expectedArgs[i];\r\n            if (!newArg.equals(lastArg)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexports.OnGoingStubs = OnGoingStubs;\r\n//# sourceMappingURL=OnGoingStubs.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst InternalMocker_1 = require(\"./InternalMocker\");\r\nconst MockedFunction_1 = require(\"./MockedFunction\");\r\nconst OnGoingStubs_1 = require(\"./OnGoingStubs\");\r\nvar StrictnessMode;\r\n(function (StrictnessMode) {\r\n    StrictnessMode[StrictnessMode[\"Strict\"] = 0] = \"Strict\";\r\n    StrictnessMode[StrictnessMode[\"Loose\"] = 1] = \"Loose\";\r\n})(StrictnessMode || (StrictnessMode = {}));\r\nexports.StrictnessMode = StrictnessMode;\r\nclass InvocationHandler {\r\n    constructor(clazz, realObject, mockName, options) {\r\n        this.cachedStubs = {};\r\n        this.cachedFunctionStub = null;\r\n        this.clazz = clazz;\r\n        this.realObject = realObject;\r\n        this.mockName = mockName;\r\n        this.options = options;\r\n    }\r\n    apply(target, thisArg, argArray) {\r\n        if (target === this.realObject) {\r\n            this.mockSingleFunctionIfNecessary(this.realObject);\r\n            return this.cachedFunctionStub(...argArray);\r\n        }\r\n        target(argArray);\r\n    }\r\n    get(target, p, receiver) {\r\n        if (p === InternalMocker_1.INTERNAL_MOCKER_NAME) {\r\n            this.mockSingleFunctionIfNecessary(target[p]);\r\n            return this.cachedFunctionStub[InternalMocker_1.INTERNAL_MOCKER_NAME];\r\n        }\r\n        if (this.clazz) {\r\n            const realMethod = this.clazz[p];\r\n            if (realMethod === null || realMethod === undefined) {\r\n                const validMethods = Object.getOwnPropertyNames(this.clazz).join(\", \");\r\n                throw new Error(`Method \"${p.toString()}\" was called on class \"${this.clazz.constructor.name}\". ` +\r\n                    `Ensure method exists on prototype. Valid methods: [${validMethods}]`);\r\n            }\r\n        }\r\n        if (!this.cachedStubs[p]) {\r\n            const mockedFunction = MockedFunction_1.createMockedFunction();\r\n            const mockName = this.mockName !== null ? `${this.mockName}.${p.toString()}` : p.toString();\r\n            Object.defineProperty(mockedFunction, \"name\", { value: mockName });\r\n            const internalMocker = InternalMocker_1.CreateInternalMocker(mockedFunction, target[p], mockName, this.options);\r\n            if (internalMocker.isInExpectation) {\r\n                internalMocker.isInExpectation = false;\r\n            }\r\n            this.cachedStubs[p] = mockedFunction;\r\n        }\r\n        return this.cachedStubs[p];\r\n    }\r\n    enumerate(target) {\r\n        return this.ownKeys(target);\r\n    }\r\n    ownKeys(target) {\r\n        const test2 = Object.keys(this.cachedStubs);\r\n        return test2;\r\n    }\r\n    getOwnPropertyDescriptor(target, p) {\r\n        return Object.getOwnPropertyDescriptor(this.cachedStubs, p);\r\n    }\r\n    isExtensible(target) {\r\n        return false;\r\n    }\r\n    mockSingleFunctionIfNecessary(realFunction) {\r\n        if (!this.cachedFunctionStub) {\r\n            const mockedFunction = MockedFunction_1.createMockedFunction();\r\n            if (this.mockName !== null) {\r\n                Object.defineProperty(mockedFunction, \"name\", { value: this.mockName });\r\n            }\r\n            const internalMocker = InternalMocker_1.CreateInternalMocker(mockedFunction, realFunction, this.mockName, this.options);\r\n            if (internalMocker.isInExpectation) {\r\n                internalMocker.isInExpectation = false;\r\n            }\r\n            this.cachedFunctionStub = mockedFunction;\r\n        }\r\n    }\r\n}\r\nlet defaultOptions = {\r\n    strictMode: StrictnessMode.Strict,\r\n    inOrder: false\r\n};\r\nfunction setDefaultOptions(options) {\r\n    defaultOptions = Object.assign(defaultOptions, options);\r\n}\r\nexports.setDefaultOptions = setDefaultOptions;\r\nfunction mock(clazz, mockName, options = defaultOptions) {\r\n    const stubFunction = (() => { });\r\n    if (typeof clazz === \"string\") {\r\n        mockName = clazz;\r\n        clazz = undefined;\r\n    }\r\n    if (!mockName) {\r\n        mockName = null;\r\n    }\r\n    return new Proxy(stubFunction, new InvocationHandler(clazz ? clazz.prototype : null, stubFunction, mockName, options));\r\n}\r\nexports.mock = mock;\r\nfunction spy(realObject, options = defaultOptions) {\r\n    return new Proxy(realObject, new InvocationHandler(Object.getPrototypeOf(realObject), realObject, null, options));\r\n}\r\nexports.spy = spy;\r\nfunction expect(mockedFunction) {\r\n    return new OnGoingStubs_1.OnGoingStubs(mockedFunction);\r\n}\r\nexports.expect = expect;\r\nfunction inOrder(...stubs) {\r\n    const inOrderExpectation = {\r\n        expectations: [],\r\n        currentIndex: 0\r\n    };\r\n    const castStubs = stubs;\r\n    for (const stub of castStubs) {\r\n        const expectation = stub.getExpectation();\r\n        inOrderExpectation.expectations.push(expectation);\r\n        expectation.inOrderOverride = inOrderExpectation;\r\n    }\r\n}\r\nexports.inOrder = inOrder;\r\n//# sourceMappingURL=Mock.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst InternalMocker_1 = require(\"./InternalMocker\");\r\nfunction verify(...mocks) {\r\n    for (const mock of mocks) {\r\n        verifyMock(mock);\r\n    }\r\n}\r\nexports.verify = verify;\r\nfunction verifyMock(mock) {\r\n    const internalMocker = InternalMocker_1.GetInternalMocker(mock);\r\n    const test = Object.keys(mock);\r\n    for (const key of test) {\r\n        if (key === InternalMocker_1.INTERNAL_MOCKER_NAME) {\r\n            continue;\r\n        }\r\n        const value = mock[key];\r\n        if (value) {\r\n            const internalFunctionMocker = InternalMocker_1.GetInternalMocker(value);\r\n            if (internalFunctionMocker) {\r\n                verifyMock(value);\r\n            }\r\n        }\r\n    }\r\n    for (const expectation of internalMocker.expectations) {\r\n        if (!expectation.expectedRange.isInRange(expectation.callCount)) {\r\n            throw new Error(buildErrorMessage(internalMocker.recordedInvocations, expectation));\r\n        }\r\n    }\r\n}\r\nfunction buildErrorMessage(args, expectationData) {\r\n    const calledLocations = buildCallLocations(expectationData.expectedArgs, args);\r\n    const specificMessage = buildRangeMessage(expectationData.expectedRange, expectationData.callCount);\r\n    const callLocation = calledLocations.length > 0 ? \"Called at:\\n\" + calledLocations.join(\"\\n\") : \"\";\r\n    return `${specificMessage}\\nExpected at: ${expectationData.location}\\n${callLocation}\\n\\u00A0`;\r\n}\r\nfunction buildRangeMessage(range, callCount) {\r\n    return `Expected ${range.describeRange()}, got ${callCount}.`;\r\n}\r\nfunction buildCallLocations(expectedArgs, args) {\r\n    const callLocations = [];\r\n    for (const invocation of args) {\r\n        if (expectedArgs === null) {\r\n            if (invocation.location !== null) {\r\n                callLocations.push(invocation.location);\r\n            }\r\n        }\r\n    }\r\n    return callLocations;\r\n}\r\n//# sourceMappingURL=Verify.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nexports.any = umbra_util_1.any;\r\nexports.eq = umbra_util_1.eq;\r\nexports.gt = umbra_util_1.gt;\r\nexports.gte = umbra_util_1.gte;\r\nexports.lt = umbra_util_1.lt;\r\nexports.lte = umbra_util_1.lte;\r\nexports.matcher = umbra_util_1.matcher;\r\nexports.regexMatches = umbra_util_1.regexMatches;\r\nexports.startsWith = umbra_util_1.startsWith;\r\nconst Capture_1 = require(\"./Capture\");\r\nexports.newCapture = Capture_1.newCapture;\r\nconst Mock_1 = require(\"./Mock\");\r\nexports.expect = Mock_1.expect;\r\nexports.inOrder = Mock_1.inOrder;\r\nexports.mock = Mock_1.mock;\r\nexports.setDefaultOptions = Mock_1.setDefaultOptions;\r\nexports.spy = Mock_1.spy;\r\nconst Verify_1 = require(\"./Verify\");\r\nexports.verify = Verify_1.verify;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst umbra_test_runner_1 = require(\"@umbra-test/umbra-test-runner\");\r\nexports.TestRunner = umbra_test_runner_1.TestRunner;\r\nconst umbra_assert_1 = require(\"umbra-assert\");\r\nexports.assert = umbra_assert_1.assert;\r\nconst umbra_test_mock_1 = require(\"umbra-test-mock\");\r\nexports.any = umbra_test_mock_1.any;\r\nexports.eq = umbra_test_mock_1.eq;\r\nexports.expect = umbra_test_mock_1.expect;\r\nexports.gt = umbra_test_mock_1.gt;\r\nexports.gte = umbra_test_mock_1.gte;\r\nexports.inOrder = umbra_test_mock_1.inOrder;\r\nexports.lt = umbra_test_mock_1.lt;\r\nexports.lte = umbra_test_mock_1.lte;\r\nexports.matcher = umbra_test_mock_1.matcher;\r\nexports.mock = umbra_test_mock_1.mock;\r\nexports.newCapture = umbra_test_mock_1.newCapture;\r\nexports.regexMatches = umbra_test_mock_1.regexMatches;\r\nexports.setMockOptions = umbra_test_mock_1.setDefaultOptions;\r\nexports.spy = umbra_test_mock_1.spy;\r\nexports.startsWith = umbra_test_mock_1.startsWith;\r\nexports.verify = umbra_test_mock_1.verify;\r\n//# sourceMappingURL=index.js.map"],"names":["t","[object Object]","length","Promise","e","s","Error","resolve","reject","super","this","timeoutMs","i","Date","now","r","n","setTimeout","catch","clearTimeout","race","then","stopOnFirstFail","indexOf","push","splice","o","onListeners","onceListeners","call","all","u","asyncPromisifier","timeoutPromisifier","testQueueStack","queueStacks","before","beforeEach","after","afterEach","hasAnOnlyDescribe","hasAnOnlyIt","currentTest","testRunCancelled","describe","throwIfTestInProgress","pushToCurrentTestQueue","describeOnly","it","itOnly","runNextTestQueue","shift","tests","absoluteFilePath","currentlyExecutingFilePath","eventEmitter","emit","type","evaluateDescribe","evaluateTest","evaluateQueueWithTimeout","resetRunResults","runResults","elapsedTimeMs","totalTests","totalSuccesses","totalFailures","totalTimeouts","failureInfo","timeoutInfo","config","only","lastFilePathSet","on","once","off","currentRun","finally","reset","titleChain","evaluatedBefores","title","callback","concat","exec","getTimeoutValue","wrap","emitAndWaitForCompletion","describeChain","elapsedMs","error","evaluateQueue","deepEqual","a","b","getTime","exists","key","aKeys","bKeys","prototype","Object","keys","sort","deepEqualObject","value","defineProperty","exports","arrayA","arrayB","item","array","indexOfItem","event","ArrayUtils_1","union","without","args","promises","results","compareDefault","compare","initialValues","compareFunction","insert","element","foundIndex","searchInternal","highestIndex","index","search","ordering","high","low","Math","floor","object","undefined","RegExp","toString","mockerData","mock","internalMocker","GetMockerDataSafe","mockName","JSON","stringify","validator","precedence","matches","description","equals","other","realValue","Stringify_1","printObject","DeepEqual_1","startsWith","test","func","SimpleEventEmitter_1","SimpleEventEmitter","SortedArray_1","SortedArray","ArgumentValidator_1","any","eq","gt","gte","lt","lte","matcher","regexMatches","INTERNAL_MOCKER_NAME","AssertionError","ourMessage","theirMessage","Assert","output","expected","actual","message","umbra_util_1","is","strictEqual","target","keyPath","pathArray","split","result","path","newResult","fail","actualValue","equal","errorMessage","notEqual","isTrue","Array","isArray","entryKey","entryValue","entries","values","contains","Expect","Assert_1","has","isTruthy","isFalsy","Expect_1","expect","CaptureInternal","first","last","arg","GetInternalMockerSafe","mockedFunction","realFunction","options","expectations","recordedInvocations","inProgressInOrder","isInExpectation","depth","stackTrace","stack","stackTraceLines","callingLocation","findBestArgumentMatcher","argumentMatcherArray","inOrderOverride","expectedArgs","argLengthDifference","aMatcherPrecedence","sumMatchers","expectation","getData","callCount","expectedRange","end","verifyArgumentMatcher","sum","isValid","argumentValidator","defaultExpectationOptions","includeLocation","buildExpectationString","argsString","argData","argumentValdiatorArg","join","describeRange","location","mockedFunc","InternalMocker_1","GetInternalMocker","currentLocation","StackTraceParser_1","StacktraceUtils","getCurrentMockLocation","params","expectationData","expectedInvocation","currentIndex","expectedInvocationString","inProgressIndex","answer","strictMode","Mock_1","StrictnessMode","Strict","wording","argsStringified","argsText","name","start","count","Number","MAX_SAFE_INTEGER","isFixedRange","hasNoUpperBound","createDirectReturnAnswer","normalizeMatcherArgs","normalizedArgs","argMatcher","OnGoingStubs","umbra_assert_1","atMostCount","atLeastCount","timesCount","currentArgumentExpectations","Range_1","Range","atLeast","createDirectThrowAnswer","createCallRealMethodAnwser","createPromiseResolveAnswer","createPromiseRejectAnswer","setExpectedRange","times","atMostInvocations","atLeastInvocations","range","newExpectations","lastExpectations","doArgumentsMatch","lastArg","InvocationHandler","clazz","realObject","cachedStubs","cachedFunctionStub","thisArg","argArray","mockSingleFunctionIfNecessary","p","receiver","realMethod","validMethods","getOwnPropertyNames","constructor","MockedFunction_1","createMockedFunction","CreateInternalMocker","ownKeys","getOwnPropertyDescriptor","defaultOptions","inOrder","assign","stubFunction","Proxy","getPrototypeOf","OnGoingStubs_1","stubs","inOrderExpectation","castStubs","stub","getExpectation","verifyMock","isInRange","buildErrorMessage","calledLocations","callLocations","invocation","buildCallLocations","specificMessage","callLocation","mocks","Capture_1","newCapture","setDefaultOptions","spy","Verify_1","verify","umbra_test_runner_1","TestRunner","assert","umbra_test_mock_1"],"mappings":"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"}