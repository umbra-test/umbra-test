{"version":3,"file":"umbra.js","sources":["../../umbra-test-runner/lib/Async/AsyncPromisifier.js","../../umbra-test-runner/lib/Async/TimeoutPromisifier.js","../../umbra-test-runner/lib/Config/TestRunnerConfig.js","../../umbra-test-runner/lib/Config/DefaultTestRunnerConfig.js","../../umbra-test-runner/lib/EventEmitter/SimpleEventEmitter.js","../../umbra-test-runner/lib/QueueStack.js","../../umbra-test-runner/lib/TestRunner.js","../../umbra-test-runner/lib/index.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/DeepEqual.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/ArrayUtils.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/SimpleEventEmitter.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/SortedArray.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/Stringify.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/ArgumentValidator.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/index.js","../../umbra-assert/lib/Assert.js","../../umbra-assert/lib/Expect.js","../../umbra-assert/lib/index.js","../../umbra-mock/node_modules/@umbra-test/umbra-util/lib/DeepEqual.js","../../umbra-mock/node_modules/@umbra-test/umbra-util/lib/ArrayUtils.js","../../umbra-mock/node_modules/@umbra-test/umbra-util/lib/SimpleEventEmitter.js","../../umbra-mock/node_modules/@umbra-test/umbra-util/lib/SortedArray.js","../../umbra-mock/node_modules/@umbra-test/umbra-util/lib/Stringify.js","../../umbra-mock/node_modules/@umbra-test/umbra-util/lib/ArgumentValidator.js","../../umbra-mock/node_modules/@umbra-test/umbra-util/lib/index.js","../../umbra-mock/lib/Capture.js","../../umbra-mock/lib/InternalMocker.js","../../umbra-mock/lib/StackTraceParser.js","../../umbra-mock/lib/MockedFunction.js","../../umbra-mock/node_modules/umbra-assert/lib/Assert.js","../../umbra-mock/node_modules/umbra-assert/lib/Expect.js","../../umbra-mock/node_modules/umbra-assert/lib/index.js","../../umbra-mock/lib/Range.js","../../umbra-mock/lib/OnGoingStubs.js","../../umbra-mock/lib/Mock.js","../../umbra-mock/lib/Verify.js","../../umbra-mock/lib/index.js","index.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * A class that massages synchronous and some async functions into promises. Expects very specific function signatures.\r\n */\r\nclass AsyncPromisifier {\r\n    /**\r\n     * Takes a function and executes it as a Promise.\r\n     *\r\n     * Supports:\r\n     *  - Promises\r\n     *  - \"done\" callback\r\n     *  - sync returns\r\n     *\r\n     * @param {(done) => any} fn\r\n     * @returns {Promise<T>}\r\n     */\r\n    exec(fn, name) {\r\n        Object.defineProperty(fn, \"name\", { value: name, writable: false });\r\n        /*\r\n         * 2nd param is \"done\" -- if the user fn has exactly two params then it is expected that they are using a\r\n         * classic asynchronous function and will call \"done\" when complete.\r\n         */\r\n        if (fn.length === 1) {\r\n            return new Promise((resolve, reject) => {\r\n                fn((result) => {\r\n                    if (result instanceof Error) {\r\n                        reject(result);\r\n                    }\r\n                    else {\r\n                        resolve(result);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            try {\r\n                return Promise.resolve(fn());\r\n            }\r\n            catch (e) {\r\n                return Promise.reject(e);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.AsyncPromisifier = AsyncPromisifier;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXN5bmNQcm9taXNpZmllci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Bc3luYy9Bc3luY1Byb21pc2lmaWVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBWUE7O0dBRUc7QUFDSCxNQUFNLGdCQUFnQjtJQUVsQjs7Ozs7Ozs7OztPQVVHO0lBQ0gsSUFBSSxDQUFJLEVBQTJELEVBQUUsSUFBWTtRQUU3RSxNQUFNLENBQUMsY0FBYyxDQUFDLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBQ3BFOzs7V0FHRztRQUNILElBQUksRUFBRSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDakIsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtnQkFDZixFQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRTtvQkFDL0IsSUFBSSxNQUFNLFlBQVksS0FBSyxFQUFFO3dCQUN6QixNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7cUJBQ2xCO3lCQUFNO3dCQUNILE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztxQkFDbkI7Z0JBQ0wsQ0FBQyxDQUFDLENBQUM7WUFDUCxDQUFDLENBQUMsQ0FBQztTQUNOO2FBQU07WUFDSCxJQUFJO2dCQUNBLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBb0IsRUFBRyxFQUFFLENBQUMsQ0FBQzthQUNwRDtZQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUNSLE9BQU8sT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUM1QjtTQUNKO0lBQ0wsQ0FBQztDQUNKO0FBRVEsNENBQWdCIn0=","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Internal error type for differentiating timeouts from other promise failures.\r\n */\r\nclass TimeoutError extends Error {\r\n    constructor(message, elapsedMs, timeoutMs) {\r\n        super(message);\r\n        this.timeoutMs = timeoutMs;\r\n    }\r\n}\r\nexports.TimeoutError = TimeoutError;\r\n/**\r\n * A simple promise wrapper, which enables promises to \"timeout\". It does *NOT* actually manipulate or otherwise\r\n * interrupt long-running tasks, but rather simply ignores their result if they eventually do complete.\r\n */\r\nclass TimeoutPromisifier {\r\n    /**\r\n     * Wraps the Promise in another Promise, which will resolve/reject based on the former, or if a given amount of time\r\n     * has passed.\r\n     *\r\n     * @param promise\r\n     * @param timeoutMs\r\n     * @return A new promise, which will resolve if the given promise resolves, or reject if the timeout occurs first.\r\n     */\r\n    wrap(promise, timeoutMs) {\r\n        if (timeoutMs <= 0) {\r\n            return promise;\r\n        }\r\n        const startTime = Date.now();\r\n        let timerId = null;\r\n        const timeoutPromise = new Promise((resolve, reject) => {\r\n            timerId = setTimeout(() => {\r\n                const elapsedMs = Date.now() - startTime;\r\n                reject(new TimeoutError(`Async task timeout exceeded! Elapsed: ${elapsedMs}, timeout: ${timeoutMs}ms.`, elapsedMs, timeoutMs));\r\n            }, timeoutMs);\r\n        });\r\n        promise.catch(() => {\r\n            clearTimeout(timerId);\r\n        });\r\n        // timeoutPromise will never resolve, thus we can safely assume that the result is the original one.\r\n        return Promise.race([promise, timeoutPromise]).then((result) => {\r\n            clearTimeout(timerId);\r\n            return result;\r\n        });\r\n    }\r\n}\r\nexports.TimeoutPromisifier = TimeoutPromisifier;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGltZW91dFByb21pc2lmaWVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0FzeW5jL1RpbWVvdXRQcm9taXNpZmllci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOztHQUVHO0FBQ0gsTUFBTSxZQUFhLFNBQVEsS0FBSztJQUk1QixZQUFZLE9BQWUsRUFBRSxTQUFpQixFQUFFLFNBQWlCO1FBQzdELEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO0lBQy9CLENBQUM7Q0FDSjtBQTJDTyxvQ0FBWTtBQXpDcEI7OztHQUdHO0FBQ0gsTUFBTSxrQkFBa0I7SUFFcEI7Ozs7Ozs7T0FPRztJQUNILElBQUksQ0FBSSxPQUFtQixFQUFFLFNBQWlCO1FBQzFDLElBQUksU0FBUyxJQUFJLENBQUMsRUFBRTtZQUNoQixPQUFPLE9BQU8sQ0FBQztTQUNsQjtRQUVELE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUM3QixJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDbkIsTUFBTSxjQUFjLEdBQUcsSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQUU7WUFDbkQsT0FBTyxHQUFHLFVBQVUsQ0FBQyxHQUFHLEVBQUU7Z0JBQ3RCLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxTQUFTLENBQUM7Z0JBQ3pDLE1BQU0sQ0FBQyxJQUFJLFlBQVksQ0FBQyx5Q0FBeUMsU0FBUyxjQUFjLFNBQVMsS0FBSyxFQUFFLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQ25JLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUNsQixDQUFDLENBQUMsQ0FBQztRQUVILE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFO1lBQ2YsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzFCLENBQUMsQ0FBQyxDQUFDO1FBRUgsb0dBQW9HO1FBQ3BHLE9BQU8sT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sRUFBRSxjQUFjLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQWUsRUFBRSxFQUFFO1lBQ3BFLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUN0QixPQUFPLE1BQVcsQ0FBQztRQUN2QixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7Q0FFSjtBQUVxQixnREFBa0IifQ==","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * A helper method to merge multiple sources of configuration.\r\n *\r\n * @param to - The base configuration object to be merged into.\r\n * @param from - The configuration object to merge from.\r\n */\r\nfunction mergeConfig(to, from) {\r\n    if (!from || typeof from !== \"object\") {\r\n        return to;\r\n    }\r\n    if (typeof to.timeoutMs === \"object\" && typeof from.timeoutMs === \"object\") {\r\n        for (const entryType of [\"it\", \"before\", \"beforeEach\", \"after\", \"afterEach\"]) {\r\n            if (typeof from.timeoutMs[entryType] === \"number\") {\r\n                to.timeoutMs[entryType] = from.timeoutMs[entryType];\r\n            }\r\n        }\r\n    }\r\n    else if (typeof from.timeoutMs !== \"undefined\") {\r\n        to.timeoutMs = from.timeoutMs;\r\n    }\r\n    if (to.stopOnFirstFail !== from.stopOnFirstFail) {\r\n        to.stopOnFirstFail = from.stopOnFirstFail;\r\n    }\r\n    return to;\r\n}\r\nexports.mergeConfig = mergeConfig;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGVzdFJ1bm5lckNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Db25maWcvVGVzdFJ1bm5lckNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQThCQTs7Ozs7R0FLRztBQUNILFNBQVMsV0FBVyxDQUFDLEVBQW9CLEVBQUUsSUFBZ0M7SUFDdkUsSUFBSSxDQUFDLElBQUksSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLEVBQUU7UUFDbkMsT0FBTyxFQUFFLENBQUM7S0FDYjtJQUVELElBQUksT0FBTyxFQUFFLENBQUMsU0FBUyxLQUFLLFFBQVEsSUFBSSxPQUFPLElBQUksQ0FBQyxTQUFTLEtBQUssUUFBUSxFQUFFO1FBQ3hFLEtBQUssTUFBTSxTQUFTLElBQUksQ0FBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsV0FBVyxDQUFDLEVBQUU7WUFDMUUsSUFBSSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLEtBQUssUUFBUSxFQUFFO2dCQUMvQyxFQUFFLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUM7YUFDdkQ7U0FDSjtLQUNKO1NBQU0sSUFBSSxPQUFPLElBQUksQ0FBQyxTQUFTLEtBQUssV0FBVyxFQUFFO1FBQzlDLEVBQUUsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztLQUNqQztJQUVELElBQUksRUFBRSxDQUFDLGVBQWUsS0FBSyxJQUFJLENBQUMsZUFBZSxFQUFFO1FBQzdDLEVBQUUsQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQztLQUM3QztJQUVELE9BQU8sRUFBRSxDQUFDO0FBQ2QsQ0FBQztBQUV3QyxrQ0FBVyJ9","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Default configuration to be used if the user does not explicitly set configuration.\r\n */\r\nconst DefaultTestRunnerConfig = {\r\n    timeoutMs: 100,\r\n    stopOnFirstFail: false\r\n};\r\nexports.DefaultTestRunnerConfig = DefaultTestRunnerConfig;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVmYXVsdFRlc3RSdW5uZXJDb25maWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvQ29uZmlnL0RlZmF1bHRUZXN0UnVubmVyQ29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUE7O0dBRUc7QUFDSCxNQUFNLHVCQUF1QixHQUFxQjtJQUM5QyxTQUFTLEVBQUUsR0FBRztJQUNkLGVBQWUsRUFBRSxLQUFLO0NBQ3pCLENBQUM7QUFFTSwwREFBdUIifQ==","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Simple array union with automatic creation if the arrays don't exist. This is a nice optimization which\r\n * enables the event emitter to lazy-instantiate event callback arrays.\r\n *\r\n * @param arrayA\r\n * @param arrayB\r\n * @return arrayA, modified to include all items from arrayB that weren't already in arrayA. If arrayA doesn't exist,\r\n *         an empty array is returned.\r\n */\r\nfunction union(arrayA, arrayB) {\r\n    if (!arrayA) {\r\n        return arrayB ? arrayB : [];\r\n    }\r\n    if (!arrayB) {\r\n        return arrayA;\r\n    }\r\n    for (const item of arrayB) {\r\n        if (arrayA.indexOf(item) === -1) {\r\n            arrayA.push(item);\r\n        }\r\n    }\r\n    return arrayA;\r\n}\r\nexports.union = union;\r\n/**\r\n * Simple array item removal with automatic creation if the array doesn't exist. This is a nice optimization which\r\n * enables the event emitter to lazy-instantiate event callback arrays.\r\n *\r\n * DOES NOT REMOVE DUPLICATE VALUES!\r\n *\r\n * @param array - The array from which to remove an item.\r\n * @param item - The item to remove from the given array.\r\n * @return The original array, modified to remove the item if it existed. If the array doesn't exist, an empty array\r\n *         is returned.\r\n */\r\nfunction without(array, item) {\r\n    if (!array) {\r\n        return [];\r\n    }\r\n    const indexOfItem = array.indexOf(item);\r\n    if (indexOfItem !== -1) {\r\n        array.splice(indexOfItem, 1);\r\n    }\r\n    return array;\r\n}\r\nexports.without = without;\r\n/**\r\n * A ridiculously simple event emitter with typesafety.\r\n *\r\n * TODO: Maybe opensource this under its own package in the future.\r\n */\r\nclass SimpleEventEmitter {\r\n    constructor() {\r\n        // All event arrays are dynamically filled when calling on/onc.\r\n        this.onListeners = {};\r\n        this.onceListeners = {};\r\n    }\r\n    on(event, callback) {\r\n        (this.onListeners[event]) = union(this.onListeners[event], [callback]);\r\n    }\r\n    once(event, callback) {\r\n        this.onceListeners[event] = union(this.onceListeners[event], [callback]);\r\n    }\r\n    off(event, callback) {\r\n        this.onListeners[event] = without(this.onListeners[event], callback);\r\n        this.onceListeners[event] = without(this.onceListeners[event], callback);\r\n    }\r\n    emit(event, ...args) {\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n    }\r\n    /**\r\n     * Evaluates each function synchronously, but waits for all to asynchronously complete before returning.\r\n     *\r\n     * TODO: Find a better name for this.\r\n     *\r\n     * @param event - The event to emit.\r\n     * @param args - All args to be emitted for the event.\r\n     */\r\n    emitAndWaitForCompletion(event, ...args) {\r\n        const promises = [];\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n        return Promise.all(promises).then((results) => {\r\n            // Intentionally blank, as we want to swallow all actual \"valid\" values.\r\n            return;\r\n        });\r\n    }\r\n}\r\nexports.SimpleEventEmitter = SimpleEventEmitter;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2ltcGxlRXZlbnRFbWl0dGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0V2ZW50RW1pdHRlci9TaW1wbGVFdmVudEVtaXR0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFHQTs7Ozs7Ozs7R0FRRztBQUNILFNBQVMsS0FBSyxDQUFJLE1BQVcsRUFBRSxNQUFXO0lBQ3RDLElBQUksQ0FBQyxNQUFNLEVBQUU7UUFDVCxPQUFPLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7S0FDL0I7SUFFRCxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsT0FBTyxNQUFNLENBQUM7S0FDakI7SUFFRCxLQUFLLE1BQU0sSUFBSSxJQUFJLE1BQU0sRUFBRTtRQUN2QixJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7WUFDN0IsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNyQjtLQUNKO0lBRUQsT0FBTyxNQUFNLENBQUM7QUFDbEIsQ0FBQztBQXlHcUQsc0JBQUs7QUF2RzNEOzs7Ozs7Ozs7O0dBVUc7QUFDSCxTQUFTLE9BQU8sQ0FBSSxLQUFVLEVBQUUsSUFBTztJQUNuQyxJQUFJLENBQUMsS0FBSyxFQUFFO1FBQ1IsT0FBTyxFQUFFLENBQUM7S0FDYjtJQUVELE1BQU0sV0FBVyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDeEMsSUFBSSxXQUFXLEtBQUssQ0FBQyxDQUFDLEVBQUU7UUFDcEIsS0FBSyxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUM7S0FDaEM7SUFFRCxPQUFPLEtBQUssQ0FBQztBQUNqQixDQUFDO0FBaUY0RCwwQkFBTztBQS9FcEU7Ozs7R0FJRztBQUNILE1BQU0sa0JBQWtCO0lBQXhCO1FBRUksK0RBQStEO1FBQzlDLGdCQUFXLEdBQXFFLEVB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","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * A very creatively named Queue of Stacks, with some simple helper methods for operating on them.\r\n */\r\nclass QueueStack {\r\n    constructor() {\r\n        this.queue = [];\r\n    }\r\n    /**\r\n     * Pushes the given element onto the end of the top stack, on the top queue.\r\n     * @param element\r\n     */\r\n    pushOnTop(element) {\r\n        if (this.queue.length === 0) {\r\n            this.queue.push([element]);\r\n        }\r\n        else {\r\n            this.queue[0].push(element);\r\n        }\r\n    }\r\n    /**\r\n     * Pushes a new stack onto the end of the queue.\r\n     *\r\n     * @param stack\r\n     */\r\n    pushStack(stack) {\r\n        this.queue.push(stack);\r\n    }\r\n    /**\r\n     * Removes the last stack from the queue and returns it.\r\n     */\r\n    popStack() {\r\n        return this.queue.pop();\r\n    }\r\n    /**\r\n     * Removes the first stack from the queue and returns it.\r\n     */\r\n    shiftStack() {\r\n        return this.queue.shift();\r\n    }\r\n    /**\r\n     * Traverses the queue stack, starting at the top, first element and proceeding down level by level.\r\n     *\r\n     * @param callback\r\n     */\r\n    traverseLevelOrder(callback) {\r\n        let promise = Promise.resolve();\r\n        for (let i = 0; i < this.queue.length; i++) {\r\n            const queue = this.queue[i];\r\n            for (let j = 0; j < queue.length; j++) {\r\n                promise = promise.then(() => callback(queue[j]));\r\n            }\r\n        }\r\n        return promise;\r\n    }\r\n    /**\r\n     * Traverses the queue stack, starting at the bottom, last element and proceeding up level by level.\r\n     *\r\n     * @param callback\r\n     */\r\n    traverseInverseLevelOrder(callback) {\r\n        let promise = Promise.resolve();\r\n        for (let i = this.queue.length - 1; i >= 0; i--) {\r\n            const queue = this.queue[i];\r\n            for (let j = queue.length - 1; j >= 0; j--) {\r\n                promise = promise.then(() => callback(queue[j]));\r\n            }\r\n        }\r\n        return promise;\r\n    }\r\n    /**\r\n     * Resets the stack, removing all previously pushed queues and elements.\r\n     */\r\n    reset() {\r\n        this.queue = [];\r\n    }\r\n}\r\nexports.QueueStack = QueueStack;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUXVldWVTdGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9RdWV1ZVN0YWNrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7O0dBRUc7QUFDSCxNQUFNLFVBQVU7SUFBaEI7UUFFWSxVQUFLLEdBQVUsRUFBRSxDQUFDO0lBNkU5QixDQUFDO0lBM0VHOzs7T0FHRztJQUNILFNBQVMsQ0FBQyxPQUFVO1FBQ2hCLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ3pCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztTQUM5QjthQUFNO1lBQ0gsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDL0I7SUFDTCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILFNBQVMsQ0FBQyxLQUFVO1FBQ2hCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFFRDs7T0FFRztJQUNILFFBQVE7UUFDSixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDNUIsQ0FBQztJQUVEOztPQUVHO0lBQ0gsVUFBVTtRQUNOLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUM5QixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILGtCQUFrQixDQUFDLFFBQXVDO1FBQ3RELElBQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNoQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDeEMsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM1QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDbkMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDcEQ7U0FDSjtRQUVELE9BQU8sT0FBTyxDQUFDO0lBQ25CLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gseUJBQXlCLENBQUMsUUFBOEI7UUFDcEQsSUFBSSxPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2hDLEtBQUssSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDN0MsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM1QixLQUFLLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQ3hDLE9BQU8sR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3BEO1NBQ0o7UUFFRCxPQUFPLE9BQU8sQ0FBQztJQUNuQixDQUFDO0lBRUQ7O09BRUc7SUFDSCxLQUFLO1FBQ0QsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7SUFDcEIsQ0FBQztDQUNKO0FBRU8sZ0NBQVUifQ==","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst AsyncPromisifier_1 = require(\"./Async/AsyncPromisifier\");\r\nconst TimeoutPromisifier_1 = require(\"./Async/TimeoutPromisifier\");\r\nconst TestRunnerConfig_1 = require(\"./Config/TestRunnerConfig\");\r\nconst DefaultTestRunnerConfig_1 = require(\"./Config/DefaultTestRunnerConfig\");\r\nconst SimpleEventEmitter_1 = require(\"./EventEmitter/SimpleEventEmitter\");\r\nconst QueueStack_1 = require(\"./QueueStack\");\r\nconst QueueStackTypes = [\"before\", \"beforeEach\", \"after\", \"afterEach\"];\r\n/**\r\n * before -> beforeEach -> beforeHook -> it -> afterHook -> afterEach -> after\r\n */\r\nclass TestRunner {\r\n    constructor(config, eventEmitter = new SimpleEventEmitter_1.SimpleEventEmitter()) {\r\n        this.asyncPromisifier = new AsyncPromisifier_1.AsyncPromisifier();\r\n        this.timeoutPromisifier = new TimeoutPromisifier_1.TimeoutPromisifier();\r\n        this.testQueueStack = [];\r\n        this.queueStacks = {\r\n            \"before\": new QueueStack_1.QueueStack(),\r\n            \"beforeEach\": new QueueStack_1.QueueStack(),\r\n            \"after\": new QueueStack_1.QueueStack(),\r\n            \"afterEach\": new QueueStack_1.QueueStack()\r\n        };\r\n        this.currentTest = null;\r\n        this.testRunCancelled = false;\r\n        // This madness is needed to support function/object hybrids, which is remarkably useful but obnoxious in TS.\r\n        this.describe = ((title, execBlock) => {\r\n            this.throwIfTestInProgress(\"describe\");\r\n            this.pushToCurrentTestQueue(\"describe\", title, execBlock);\r\n        });\r\n        this.describeOnly = (title, execBlock) => {\r\n            this.throwIfTestInProgress(\"describe.only\");\r\n            this.pushToCurrentTestQueue(\"describe\", title, execBlock, true);\r\n        };\r\n        this.it = ((title, execBlock, options) => {\r\n            this.throwIfTestInProgress(\"it\");\r\n            this.pushToCurrentTestQueue(\"it\", title, execBlock, false, options ? options.timeoutMs : undefined);\r\n        });\r\n        this.itOnly = (title, execBlock, options) => {\r\n            this.throwIfTestInProgress(\"it.only\");\r\n            this.pushToCurrentTestQueue(\"it\", title, execBlock, true, options ? options.timeoutMs : undefined);\r\n        };\r\n        this.runNextTestQueue = () => __awaiter(this, void 0, void 0, function* () {\r\n            if (this.testQueueStack.length === 0) {\r\n                return;\r\n            }\r\n            let evaluatedTest = false;\r\n            const queue = this.testQueueStack.shift();\r\n            if (queue.firstOnlyIndex !== null) {\r\n                evaluatedTest = yield this.executeTest(queue, queue.tests[queue.firstOnlyIndex]);\r\n            }\r\n            else {\r\n                for (let i = 0; i < queue.tests.length; i++) {\r\n                    evaluatedTest = (yield this.executeTest(queue, queue.tests[i])) || evaluatedTest;\r\n                }\r\n            }\r\n            if (evaluatedTest) {\r\n                yield this.evaluateQueueWithTimeout(\"after\");\r\n            }\r\n        });\r\n        this.throwIfTestInProgress = (name) => {\r\n            if (this.currentTest) {\r\n                throw new Error(`Cannot add an ${name} block while executing a test!`);\r\n            }\r\n        };\r\n        this.resetRunResults = () => {\r\n            this.runResults = {\r\n                elapsedTimeMs: 0,\r\n                totalTests: 0,\r\n                totalSuccesses: 0,\r\n                totalFailures: 0,\r\n                totalTimeouts: 0,\r\n                failureInfo: [],\r\n                timeoutInfo: []\r\n            };\r\n        };\r\n        this.config = TestRunnerConfig_1.mergeConfig(DefaultTestRunnerConfig_1.DefaultTestRunnerConfig, config);\r\n        this.eventEmitter = eventEmitter;\r\n        this.it.only = this.itOnly;\r\n        this.describe.only = this.describeOnly;\r\n        this.resetRunResults();\r\n    }\r\n    /**\r\n     * Sets the current file name for all subsequent calls to describe/it/etc. This is used for logging where tests\r\n     * are sourced from.\r\n     */\r\n    setCurrentFile(absolutePath) {\r\n        this.lastFilePathSet = absolutePath;\r\n    }\r\n    on(event, callback) {\r\n        this.eventEmitter.on(event, callback);\r\n    }\r\n    once(event, callback) {\r\n        this.eventEmitter.once(event, callback);\r\n    }\r\n    off(event, callback) {\r\n        this.eventEmitter.off(event, callback);\r\n    }\r\n    before(execBlock) {\r\n        this.throwIfTestInProgress(\"before\");\r\n        this.queueStacks[\"before\"].pushOnTop(execBlock);\r\n    }\r\n    beforeEach(execBlock) {\r\n        this.throwIfTestInProgress(\"beforeEach\");\r\n        this.queueStacks[\"beforeEach\"].pushOnTop(execBlock);\r\n    }\r\n    after(execBlock) {\r\n        this.throwIfTestInProgress(\"after\");\r\n        this.queueStacks[\"after\"].pushOnTop(execBlock);\r\n    }\r\n    afterEach(execBlock) {\r\n        this.throwIfTestInProgress(\"afterEach\");\r\n        this.queueStacks[\"afterEach\"].pushOnTop(execBlock);\r\n    }\r\n    /**\r\n     * Triggers a test run based on the describes and its added previously.\r\n     *\r\n     * If a test is already in progress, an error will be returned.\r\n     */\r\n    run() {\r\n        if (this.currentRun) {\r\n            throw new Error(\"Can't start a test run if one is already in progress!\");\r\n        }\r\n        const startTime = Date.now();\r\n        this.currentRun = this.runNextTestQueue().then(() => {\r\n            const results = this.runResults;\r\n            results.elapsedTimeMs = Date.now() - startTime;\r\n            this.currentRun = null;\r\n            this.resetRunResults();\r\n            return results;\r\n        }).catch((e) => {\r\n            this.currentRun = null;\r\n            throw e;\r\n        });\r\n        return this.currentRun;\r\n    }\r\n    /**\r\n     * If a test is in progress, the current information for the test will be returned.\r\n     *\r\n     * If not, an error will be thrown.\r\n     */\r\n    getCurrentTestInfo() {\r\n        if (!this.currentTest) {\r\n            throw new Error(\"Can't obtain TestInfo if not actively in a test!\");\r\n        }\r\n        return this.currentTest;\r\n    }\r\n    /**\r\n     * Resets all pending state, including all attached before, beforeEach, after, afterEach, tests, describes, etc.\r\n     *\r\n     * If a test run is already in progress, an error will be thrown.\r\n     */\r\n    reset() {\r\n        if (this.currentRun) {\r\n            throw new Error(\"Can't reset if a test run is already in progress!\");\r\n        }\r\n        this.resetRunResults();\r\n        this.testRunCancelled = false;\r\n        this.testQueueStack = [];\r\n        for (const type of QueueStackTypes) {\r\n            this.queueStacks[type].reset();\r\n        }\r\n    }\r\n    cancel() {\r\n        if (!this.currentRun) {\r\n            return Promise.reject(new Error(\"Not currently executing a test run! Unable to cancel accordingly.\"));\r\n        }\r\n        this.testRunCancelled = true;\r\n        return this.currentRun.then((results) => {\r\n            this.reset();\r\n            return results;\r\n        });\r\n    }\r\n    pushToCurrentTestQueue(type, title, execBlock, only, timeoutMs) {\r\n        if (this.testQueueStack.length === 0) {\r\n            const testQueue = {\r\n                titleChain: [],\r\n                tests: [],\r\n                evaluatedBefores: false,\r\n                firstOnlyIndex: only ? 0 : null\r\n            };\r\n            this.testQueueStack.push(testQueue);\r\n        }\r\n        const currentEntry = this.testQueueStack[this.testQueueStack.length - 1];\r\n        const testEntry = {\r\n            title: title,\r\n            type: type,\r\n            callback: execBlock,\r\n            absoluteFilePath: this.lastFilePathSet\r\n        };\r\n        if (only && currentEntry.firstOnlyIndex === null) {\r\n            currentEntry.firstOnlyIndex = currentEntry.tests.length;\r\n        }\r\n        if (timeoutMs > 0) {\r\n            testEntry.timeoutMs = timeoutMs;\r\n        }\r\n        currentEntry.tests.push(testEntry);\r\n    }\r\n    executeTest(queue, entry) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (entry.absoluteFilePath !== this.currentlyExecutingFilePath) {\r\n                this.currentlyExecutingFilePath = entry.absoluteFilePath;\r\n                this.eventEmitter.emit(\"activeFileChanged\", this.currentlyExecutingFilePath);\r\n            }\r\n            if (this.testRunCancelled) {\r\n                return false;\r\n            }\r\n            else if (entry.type === \"describe\") {\r\n                return this.evaluateDescribe(queue, entry);\r\n            }\r\n            else {\r\n                return this.evaluateTest(queue, entry);\r\n            }\r\n        });\r\n    }\r\n    evaluateDescribe(queue, entry) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.testQueueStack.push({\r\n                titleChain: [].concat(queue.titleChain, entry.title),\r\n                tests: [],\r\n                evaluatedBefores: false,\r\n                firstOnlyIndex: null\r\n            });\r\n            for (const type of QueueStackTypes) {\r\n                this.queueStacks[type].pushStack([]);\r\n            }\r\n            this.eventEmitter.emit(\"beforeDescribe\", entry.title);\r\n            const startTime = Date.now();\r\n            yield this.asyncPromisifier.exec(entry.callback, \"describe\");\r\n            yield this.runNextTestQueue();\r\n            for (const type of QueueStackTypes) {\r\n                // Befores operate outside-in, first-last.\r\n                if (type === \"before\" || type === \"beforeEach\") {\r\n                    this.queueStacks[type].popStack();\r\n                }\r\n                else {\r\n                    this.queueStacks[type].shiftStack();\r\n                }\r\n            }\r\n            const describeDurationMs = Date.now() - startTime;\r\n            this.eventEmitter.emit(\"afterDescribe\", entry.title, describeDurationMs);\r\n            return false;\r\n        });\r\n    }\r\n    evaluateTest(queue, entry) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!queue.evaluatedBefores) {\r\n                queue.evaluatedBefores = true;\r\n                yield this.evaluateQueueWithTimeout(\"before\");\r\n            }\r\n            yield this.evaluateQueueWithTimeout(\"beforeEach\");\r\n            this.eventEmitter.emit(\"beforeTest\", entry.title);\r\n            this.currentTest = entry;\r\n            try {\r\n                yield this.executeTestCallback(entry, queue.titleChain);\r\n                yield this.evaluateQueueWithTimeout(\"afterEach\");\r\n            }\r\n            finally {\r\n                this.runResults.totalTests++;\r\n                this.currentTest = null;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    executeTestCallback(entry, titleChain) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const startTime = Date.now();\r\n            const timeoutValue = entry.timeoutMs >= 0 ? entry.timeoutMs : this.getTimeoutValue(\"it\");\r\n            try {\r\n                yield this.timeoutPromisifier.wrap(this.asyncPromisifier.exec(entry.callback, \"Test: \" + entry.title), timeoutValue);\r\n                yield this.eventEmitter.emitAndWaitForCompletion(\"beforeTestSuccess\", entry.title);\r\n                this.runResults.totalSuccesses++;\r\n                const testDurationMs = Date.now() - startTime;\r\n                this.eventEmitter.emit(\"testSuccess\", entry.title, testDurationMs);\r\n            }\r\n            catch (error) {\r\n                if (error instanceof TimeoutPromisifier_1.TimeoutError) {\r\n                    this.runResults.totalTimeouts++;\r\n                    this.runResults.timeoutInfo.push({\r\n                        describeChain: titleChain,\r\n                        title: entry.title,\r\n                        elapsedMs: error.elapsedMs,\r\n                        timeoutMs: error.timeoutMs\r\n                    });\r\n                    this.eventEmitter.emit(\"testTimeout\", entry.title, error.elapsedMs, error.timeoutMs);\r\n                }\r\n                else {\r\n                    this.runResults.totalFailures++;\r\n                    this.runResults.failureInfo.push({\r\n                        describeChain: titleChain,\r\n                        title: entry.title,\r\n                        error: error\r\n                    });\r\n                    this.eventEmitter.emit(\"testFail\", entry.title, error, Date.now() - startTime);\r\n                }\r\n                // If we want to stop additional execution on the first fail, just cancel the rest of the run.\r\n                if (this.config.stopOnFirstFail) {\r\n                    this.testRunCancelled = true;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    evaluateQueueWithTimeout(type) {\r\n        return this.timeoutPromisifier.wrap(this.evaluateQueue(type), this.getTimeoutValue(type));\r\n    }\r\n    evaluateQueue(type) {\r\n        const queueStack = this.queueStacks[type];\r\n        if (type === \"before\" || type === \"beforeEach\") {\r\n            return queueStack.traverseLevelOrder((callback) => this.asyncPromisifier.exec(callback, type));\r\n        }\r\n        else {\r\n            return queueStack.traverseInverseLevelOrder((callback) => this.asyncPromisifier.exec(callback, type));\r\n        }\r\n    }\r\n    getTimeoutValue(type) {\r\n        const timeout = this.config.timeoutMs;\r\n        return typeof timeout === \"number\" ? timeout : timeout[type];\r\n    }\r\n}\r\nexports.TestRunner = TestRunner;\r\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst TestRunner_1 = require(\"./TestRunner\");\r\nexports.TestRunner = TestRunner_1.TestRunner;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw2Q0FBd0M7QUFLaEMscUJBTEEsdUJBQVUsQ0FLQSJ9","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    else if (a instanceof Date && b instanceof Date) {\r\n        return a.getTime() === b.getTime();\r\n    }\r\n    else if (!exists(a) || !exists(b) || typeof a !== \"object\" && typeof b !== \"object\") {\r\n        return a === b;\r\n    }\r\n    else {\r\n        return deepEqualObject(a, b);\r\n    }\r\n}\r\nexports.deepEqual = deepEqual;\r\nfunction deepEqualObject(a, b) {\r\n    let i;\r\n    let key;\r\n    if (!exists(a) || !exists(b)) {\r\n        return false;\r\n    }\r\n    if (a.prototype !== b.prototype) {\r\n        return false;\r\n    }\r\n    let aKeys;\r\n    let bKeys;\r\n    try {\r\n        aKeys = Object.keys(a);\r\n        bKeys = Object.keys(b);\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n    if (aKeys.length !== bKeys.length) {\r\n        return false;\r\n    }\r\n    aKeys.sort();\r\n    bKeys.sort();\r\n    for (i = aKeys.length - 1; i >= 0; i--) {\r\n        if (aKeys[i] !== bKeys[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    for (i = aKeys.length - 1; i >= 0; i--) {\r\n        key = aKeys[i];\r\n        if (!deepEqual(a[key], b[key])) {\r\n            return false;\r\n        }\r\n    }\r\n    return typeof a === typeof b;\r\n}\r\nfunction exists(value) {\r\n    return value !== null && value !== undefined;\r\n}\r\n//# sourceMappingURL=DeepEqual.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction union(arrayA, arrayB) {\r\n    if (!arrayA) {\r\n        return arrayB ? arrayB : [];\r\n    }\r\n    if (!arrayB) {\r\n        return arrayA;\r\n    }\r\n    for (const item of arrayB) {\r\n        if (arrayA.indexOf(item) === -1) {\r\n            arrayA.push(item);\r\n        }\r\n    }\r\n    return arrayA;\r\n}\r\nexports.union = union;\r\nfunction without(array, item) {\r\n    if (!array) {\r\n        return [];\r\n    }\r\n    const indexOfItem = array.indexOf(item);\r\n    if (indexOfItem !== -1) {\r\n        array.splice(indexOfItem, 1);\r\n    }\r\n    return array;\r\n}\r\nexports.without = without;\r\n//# sourceMappingURL=ArrayUtils.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ArrayUtils_1 = require(\"./ArrayUtils\");\r\nclass SimpleEventEmitter {\r\n    constructor() {\r\n        this.onListeners = {};\r\n        this.onceListeners = {};\r\n    }\r\n    on(event, callback) {\r\n        (this.onListeners[event]) = ArrayUtils_1.union(this.onListeners[event], [callback]);\r\n    }\r\n    once(event, callback) {\r\n        this.onceListeners[event] = ArrayUtils_1.union(this.onceListeners[event], [callback]);\r\n    }\r\n    off(event, callback) {\r\n        this.onListeners[event] = ArrayUtils_1.without(this.onListeners[event], callback);\r\n        this.onceListeners[event] = ArrayUtils_1.without(this.onceListeners[event], callback);\r\n    }\r\n    emit(event, ...args) {\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n    }\r\n    emitAndWaitForCompletion(event, ...args) {\r\n        const promises = [];\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n        return Promise.all(promises).then((results) => {\r\n            return;\r\n        });\r\n    }\r\n}\r\nexports.SimpleEventEmitter = SimpleEventEmitter;\r\n//# sourceMappingURL=SimpleEventEmitter.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass SortedArray {\r\n    constructor(compare = compareDefault, initialValues = []) {\r\n        this.array = [];\r\n        this.compareFunction = compare || compareDefault;\r\n        const length = initialValues.length;\r\n        for (let i = 0; i < length; i++) {\r\n            this.insert(initialValues[i]);\r\n        }\r\n    }\r\n    getData() {\r\n        return this.array;\r\n    }\r\n    insert(element) {\r\n        let foundIndex = this.searchInternal(element) + 1;\r\n        const highestIndex = this.array.length - 1;\r\n        while ((foundIndex < highestIndex) && (this.compareFunction(element, this.array[foundIndex]) === 0)) {\r\n            foundIndex++;\r\n        }\r\n        let index = this.array.length;\r\n        this.array.push(element);\r\n        while (index > foundIndex) {\r\n            this.array[index] = this.array[--index];\r\n        }\r\n        this.array[foundIndex] = element;\r\n    }\r\n    search(element) {\r\n        const foundIndex = this.searchInternal(element);\r\n        if (this.compareFunction(this.array[foundIndex], element) !== 0) {\r\n            return -1;\r\n        }\r\n        return foundIndex;\r\n    }\r\n    remove(element) {\r\n        const index = this.search(element);\r\n        if (index >= 0) {\r\n            this.array.splice(index, 1);\r\n        }\r\n    }\r\n    searchInternal(element) {\r\n        let high = this.array.length - 1;\r\n        let low = 0;\r\n        let index;\r\n        let ordering;\r\n        while (high >= low) {\r\n            index = Math.floor((high + low) / 2);\r\n            ordering = this.compareFunction(this.array[index], element);\r\n            if (ordering < 0) {\r\n                low = index + 1;\r\n            }\r\n            else if (ordering > 0) {\r\n                high = index - 1;\r\n            }\r\n            else {\r\n                return index;\r\n            }\r\n        }\r\n        return high;\r\n    }\r\n}\r\nexports.SortedArray = SortedArray;\r\nfunction compareDefault(a, b) {\r\n    if (a < b) {\r\n        return -1;\r\n    }\r\n    else if (a > b) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n//# sourceMappingURL=SortedArray.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst INTERNAL_MOCKER_NAME = \"__internalMocker\";\r\nexports.INTERNAL_MOCKER_NAME = INTERNAL_MOCKER_NAME;\r\nfunction GetMockerDataSafe(mock) {\r\n    const internalMocker = mock[INTERNAL_MOCKER_NAME];\r\n    return internalMocker !== null && internalMocker !== void 0 ? internalMocker : null;\r\n}\r\nfunction printObject(object) {\r\n    if (object === null) {\r\n        return \"null\";\r\n    }\r\n    if (object === undefined) {\r\n        return \"undefined\";\r\n    }\r\n    if (object instanceof RegExp) {\r\n        return object.toString();\r\n    }\r\n    const mockerData = GetMockerDataSafe(object);\r\n    if (mockerData !== null) {\r\n        return mockerData.mockName;\r\n    }\r\n    return JSON.stringify(object);\r\n}\r\nexports.printObject = printObject;\r\n//# sourceMappingURL=Stringify.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst DeepEqual_1 = require(\"./DeepEqual\");\r\nconst Stringify_1 = require(\"./Stringify\");\r\nfunction any() {\r\n    const validator = {\r\n        precedence: -1,\r\n        matches: () => true,\r\n        description: () => \"any()\",\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.any = any;\r\nfunction gt(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue > value),\r\n        description: () => `gt(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.gt = gt;\r\nfunction lt(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue < value),\r\n        description: () => `lt(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.lt = lt;\r\nfunction gte(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue >= value),\r\n        description: () => `gte(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.gte = gte;\r\nfunction lte(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue <= value),\r\n        description: () => `lte(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.lte = lte;\r\nfunction eq(value) {\r\n    const validator = {\r\n        precedence: 1,\r\n        matches: ((realValue) => DeepEqual_1.deepEqual(value, realValue)),\r\n        description: () => Stringify_1.printObject(value),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.eq = eq;\r\nfunction startsWith(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue.startsWith(value)),\r\n        description: () => \"startsWith \" + value,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.startsWith = startsWith;\r\nfunction regexMatches(value) {\r\n    const validator = {\r\n        matches: ((realValue) => value.test(realValue)),\r\n        description: () => value.toString(),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.regexMatches = regexMatches;\r\nfunction matcher(func) {\r\n    const validator = {\r\n        matches: (realValue) => func(realValue),\r\n        description: () => func.toString(),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.matcher = matcher;\r\n//# sourceMappingURL=ArgumentValidator.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst DeepEqual_1 = require(\"./DeepEqual\");\r\nexports.deepEqual = DeepEqual_1.deepEqual;\r\nconst SimpleEventEmitter_1 = require(\"./SimpleEventEmitter\");\r\nexports.SimpleEventEmitter = SimpleEventEmitter_1.SimpleEventEmitter;\r\nconst SortedArray_1 = require(\"./SortedArray\");\r\nexports.SortedArray = SortedArray_1.SortedArray;\r\nconst ArgumentValidator_1 = require(\"./ArgumentValidator\");\r\nexports.any = ArgumentValidator_1.any;\r\nexports.eq = ArgumentValidator_1.eq;\r\nexports.gt = ArgumentValidator_1.gt;\r\nexports.gte = ArgumentValidator_1.gte;\r\nexports.lt = ArgumentValidator_1.lt;\r\nexports.lte = ArgumentValidator_1.lte;\r\nexports.matcher = ArgumentValidator_1.matcher;\r\nexports.regexMatches = ArgumentValidator_1.regexMatches;\r\nexports.startsWith = ArgumentValidator_1.startsWith;\r\nconst Stringify_1 = require(\"./Stringify\");\r\nexports.INTERNAL_MOCKER_NAME = Stringify_1.INTERNAL_MOCKER_NAME;\r\nexports.printObject = Stringify_1.printObject;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nclass AssertionError extends Error {\r\n    constructor(ourMessage, theirMessage) {\r\n        const message = theirMessage ? ourMessage + \"\\n\" + theirMessage : ourMessage;\r\n        super(message);\r\n    }\r\n}\r\nclass Assert {\r\n    static that(output) {\r\n    }\r\n    static equal(expected, actual, message) {\r\n        if (umbra_util_1.deepEqual(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to deeply equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static notEqual(expected, actual, message) {\r\n        if (!umbra_util_1.deepEqual(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to not deeply equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static looseEqual(actual, expected, message) {\r\n        if (expected == actual) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} == ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static notLooseEqual(actual, expected, message) {\r\n        if (expected != actual) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} != ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static strictEqual(actual, expected, message) {\r\n        if (Object.is(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to strictly equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static notStrictEqual(actual, expected, message) {\r\n        if (!Object.is(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to not strictly equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static is(actual, expected, message) {\r\n        Assert.strictEqual(actual, expected, message);\r\n    }\r\n    static has(target, keyPath, expected, message) {\r\n        Assert.exists(target, \"target\");\r\n        Assert.exists(keyPath, \"keyPath\");\r\n        Assert.exists(target, \"target\");\r\n        const pathArray = keyPath.split(\".\");\r\n        let result = target;\r\n        for (const path of pathArray) {\r\n            const newResult = result[path];\r\n            if (!newResult) {\r\n                Assert.fail(`Missing key \"${path}\" in object ${umbra_util_1.printObject(result)}\\nAvailable keys: ${umbra_util_1.printObject(Object.keys(expected))}`);\r\n            }\r\n            result = newResult;\r\n        }\r\n        Assert.strictEqual(result, expected, message);\r\n    }\r\n    static regexMatches(actual, expected, message) {\r\n        if (expected.test(actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to match the regex ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static resolvesTo(actual, expected, message) {\r\n        return actual\r\n            .then((actualValue) => {\r\n            Assert.equal(actualValue, expected);\r\n        }, (e) => {\r\n            throw new AssertionError(`Promise should not have successfully resolved.\\nException: ${e}\\n`, message);\r\n        });\r\n    }\r\n    static rejects(actual, expected, message) {\r\n        const errorMessage = expected instanceof Error ? expected.message : expected;\r\n        return actual\r\n            .then(() => {\r\n            throw new AssertionError(\"Promise should not have successfully resolved\", message);\r\n        }, (e) => {\r\n            if (errorMessage) {\r\n                Assert.equal(errorMessage, e.message);\r\n            }\r\n        });\r\n    }\r\n    static fail(message) {\r\n        throw new AssertionError(\"Test failed\", message);\r\n    }\r\n    static isTrue(value, message) {\r\n        Assert.equal(true, value, message);\r\n    }\r\n    static isFalse(value, message) {\r\n        Assert.equal(false, value, message);\r\n    }\r\n    static isTruthy(value, message) {\r\n        if (!value) {\r\n            throw new AssertionError(`Expected ${value} to be truthy`, message);\r\n        }\r\n    }\r\n    static isFalsy(value, message) {\r\n        if (value) {\r\n            throw new AssertionError(`Expected ${value} to be falsy`, message);\r\n        }\r\n    }\r\n    static exists(expected, message) {\r\n        this.notEqual(expected, null, `Expected ${umbra_util_1.printObject(expected)} to not be null. ${message}`);\r\n        this.notEqual(expected, undefined, `Expected ${umbra_util_1.printObject(expected)} to not be undefined. ${message}`);\r\n        return true;\r\n    }\r\n    static contains(target, value, message) {\r\n        this.exists(target);\r\n        if (typeof target === \"string\") {\r\n            Assert.isTrue(target.indexOf(value) !== -1, `String: ${value} was not found in ${target}`);\r\n        }\r\n        else if (Array.isArray(target)) {\r\n            Assert.isTrue(target.indexOf(value) !== -1, `${umbra_util_1.printObject(value)} was not found in target array ${umbra_util_1.printObject(target)}. ${message !== null && message !== void 0 ? message : \"\"}`);\r\n        }\r\n        else {\r\n            for (const [entryKey, entryValue] of Object.entries(value)) {\r\n                Assert.equal(target[entryKey], entryValue);\r\n            }\r\n        }\r\n    }\r\n    static containsAll(target, values, message) {\r\n        this.exists(target);\r\n        this.exists(values);\r\n        for (const value of values) {\r\n            Assert.contains(target, value, message);\r\n        }\r\n    }\r\n}\r\nexports.Assert = Assert;\r\n//# sourceMappingURL=Assert.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Assert_1 = require(\"./Assert\");\r\nclass Expect {\r\n    constructor(target) {\r\n        this.target = target;\r\n    }\r\n    toBe(value) {\r\n        Assert_1.Assert.equal(this.target, value);\r\n    }\r\n    toHaveProperty(keyPath, value) {\r\n        Assert_1.Assert.has(this.target, keyPath, value);\r\n    }\r\n    toBeTruthy() {\r\n        Assert_1.Assert.isTruthy(this.target);\r\n    }\r\n    toBeFalsy() {\r\n        Assert_1.Assert.isFalsy(this.target);\r\n    }\r\n}\r\nexports.Expect = Expect;\r\nfunction expect(target) {\r\n    return new Expect(target);\r\n}\r\nexports.expect = expect;\r\n//# sourceMappingURL=Expect.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Assert_1 = require(\"./Assert\");\r\nexports.assert = Assert_1.Assert;\r\nconst Expect_1 = require(\"./Expect\");\r\nexports.Expect = Expect_1.Expect;\r\nexports.expect = Expect_1.expect;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    else if (a instanceof Date && b instanceof Date) {\r\n        return a.getTime() === b.getTime();\r\n    }\r\n    else if (!exists(a) || !exists(b) || typeof a !== \"object\" && typeof b !== \"object\") {\r\n        return a === b;\r\n    }\r\n    else {\r\n        return deepEqualObject(a, b);\r\n    }\r\n}\r\nexports.deepEqual = deepEqual;\r\nfunction deepEqualObject(a, b) {\r\n    let i;\r\n    let key;\r\n    if (!exists(a) || !exists(b)) {\r\n        return false;\r\n    }\r\n    if (a.prototype !== b.prototype) {\r\n        return false;\r\n    }\r\n    let aKeys;\r\n    let bKeys;\r\n    try {\r\n        aKeys = Object.keys(a);\r\n        bKeys = Object.keys(b);\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n    if (aKeys.length !== bKeys.length) {\r\n        return false;\r\n    }\r\n    aKeys.sort();\r\n    bKeys.sort();\r\n    for (i = aKeys.length - 1; i >= 0; i--) {\r\n        if (aKeys[i] !== bKeys[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    for (i = aKeys.length - 1; i >= 0; i--) {\r\n        key = aKeys[i];\r\n        if (!deepEqual(a[key], b[key])) {\r\n            return false;\r\n        }\r\n    }\r\n    return typeof a === typeof b;\r\n}\r\nfunction exists(value) {\r\n    return value !== null && value !== undefined;\r\n}\r\n//# sourceMappingURL=DeepEqual.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction union(arrayA, arrayB) {\r\n    if (!arrayA) {\r\n        return arrayB ? arrayB : [];\r\n    }\r\n    if (!arrayB) {\r\n        return arrayA;\r\n    }\r\n    for (const item of arrayB) {\r\n        if (arrayA.indexOf(item) === -1) {\r\n            arrayA.push(item);\r\n        }\r\n    }\r\n    return arrayA;\r\n}\r\nexports.union = union;\r\nfunction without(array, item) {\r\n    if (!array) {\r\n        return [];\r\n    }\r\n    const indexOfItem = array.indexOf(item);\r\n    if (indexOfItem !== -1) {\r\n        array.splice(indexOfItem, 1);\r\n    }\r\n    return array;\r\n}\r\nexports.without = without;\r\n//# sourceMappingURL=ArrayUtils.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ArrayUtils_1 = require(\"./ArrayUtils\");\r\nclass SimpleEventEmitter {\r\n    constructor() {\r\n        this.onListeners = {};\r\n        this.onceListeners = {};\r\n    }\r\n    on(event, callback) {\r\n        (this.onListeners[event]) = ArrayUtils_1.union(this.onListeners[event], [callback]);\r\n    }\r\n    once(event, callback) {\r\n        this.onceListeners[event] = ArrayUtils_1.union(this.onceListeners[event], [callback]);\r\n    }\r\n    off(event, callback) {\r\n        this.onListeners[event] = ArrayUtils_1.without(this.onListeners[event], callback);\r\n        this.onceListeners[event] = ArrayUtils_1.without(this.onceListeners[event], callback);\r\n    }\r\n    emit(event, ...args) {\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n    }\r\n    emitAndWaitForCompletion(event, ...args) {\r\n        const promises = [];\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n        return Promise.all(promises).then((results) => {\r\n            return;\r\n        });\r\n    }\r\n}\r\nexports.SimpleEventEmitter = SimpleEventEmitter;\r\n//# sourceMappingURL=SimpleEventEmitter.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass SortedArray {\r\n    constructor(compare = compareDefault, initialValues = []) {\r\n        this.array = [];\r\n        this.compareFunction = compare || compareDefault;\r\n        const length = initialValues.length;\r\n        for (let i = 0; i < length; i++) {\r\n            this.insert(initialValues[i]);\r\n        }\r\n    }\r\n    getData() {\r\n        return this.array;\r\n    }\r\n    insert(element) {\r\n        let foundIndex = this.searchInternal(element) + 1;\r\n        const highestIndex = this.array.length - 1;\r\n        while ((foundIndex < highestIndex) && (this.compareFunction(element, this.array[foundIndex]) === 0)) {\r\n            foundIndex++;\r\n        }\r\n        let index = this.array.length;\r\n        this.array.push(element);\r\n        while (index > foundIndex) {\r\n            this.array[index] = this.array[--index];\r\n        }\r\n        this.array[foundIndex] = element;\r\n    }\r\n    search(element) {\r\n        const foundIndex = this.searchInternal(element);\r\n        if (this.compareFunction(this.array[foundIndex], element) !== 0) {\r\n            return -1;\r\n        }\r\n        return foundIndex;\r\n    }\r\n    remove(element) {\r\n        const index = this.search(element);\r\n        if (index >= 0) {\r\n            this.array.splice(index, 1);\r\n        }\r\n    }\r\n    searchInternal(element) {\r\n        let high = this.array.length - 1;\r\n        let low = 0;\r\n        let index;\r\n        let ordering;\r\n        while (high >= low) {\r\n            index = Math.floor((high + low) / 2);\r\n            ordering = this.compareFunction(this.array[index], element);\r\n            if (ordering < 0) {\r\n                low = index + 1;\r\n            }\r\n            else if (ordering > 0) {\r\n                high = index - 1;\r\n            }\r\n            else {\r\n                return index;\r\n            }\r\n        }\r\n        return high;\r\n    }\r\n}\r\nexports.SortedArray = SortedArray;\r\nfunction compareDefault(a, b) {\r\n    if (a < b) {\r\n        return -1;\r\n    }\r\n    else if (a > b) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n//# sourceMappingURL=SortedArray.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst INTERNAL_MOCKER_NAME = \"__internalMocker\";\r\nexports.INTERNAL_MOCKER_NAME = INTERNAL_MOCKER_NAME;\r\nfunction GetMockerDataSafe(mock) {\r\n    const internalMocker = mock[INTERNAL_MOCKER_NAME];\r\n    return internalMocker !== null && internalMocker !== void 0 ? internalMocker : null;\r\n}\r\nfunction printObject(object) {\r\n    if (object === null) {\r\n        return \"null\";\r\n    }\r\n    if (object === undefined) {\r\n        return \"undefined\";\r\n    }\r\n    if (object instanceof RegExp) {\r\n        return object.toString();\r\n    }\r\n    const mockerData = GetMockerDataSafe(object);\r\n    if (mockerData !== null) {\r\n        return mockerData.mockName;\r\n    }\r\n    return JSON.stringify(object);\r\n}\r\nexports.printObject = printObject;\r\n//# sourceMappingURL=Stringify.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst DeepEqual_1 = require(\"./DeepEqual\");\r\nconst Stringify_1 = require(\"./Stringify\");\r\nfunction any() {\r\n    const validator = {\r\n        precedence: -1,\r\n        matches: () => true,\r\n        description: () => \"any()\",\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.any = any;\r\nfunction gt(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue > value),\r\n        description: () => `gt(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.gt = gt;\r\nfunction lt(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue < value),\r\n        description: () => `lt(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.lt = lt;\r\nfunction gte(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue >= value),\r\n        description: () => `gte(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.gte = gte;\r\nfunction lte(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue <= value),\r\n        description: () => `lte(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.lte = lte;\r\nfunction eq(value) {\r\n    const validator = {\r\n        precedence: 1,\r\n        matches: ((realValue) => DeepEqual_1.deepEqual(value, realValue)),\r\n        description: () => Stringify_1.printObject(value),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.eq = eq;\r\nfunction startsWith(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue.startsWith(value)),\r\n        description: () => \"startsWith \" + value,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.startsWith = startsWith;\r\nfunction regexMatches(value) {\r\n    const validator = {\r\n        matches: ((realValue) => value.test(realValue)),\r\n        description: () => value.toString(),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.regexMatches = regexMatches;\r\nfunction matcher(func) {\r\n    const validator = {\r\n        matches: (realValue) => func(realValue),\r\n        description: () => func.toString(),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.matcher = matcher;\r\n//# sourceMappingURL=ArgumentValidator.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst DeepEqual_1 = require(\"./DeepEqual\");\r\nexports.deepEqual = DeepEqual_1.deepEqual;\r\nconst SimpleEventEmitter_1 = require(\"./SimpleEventEmitter\");\r\nexports.SimpleEventEmitter = SimpleEventEmitter_1.SimpleEventEmitter;\r\nconst SortedArray_1 = require(\"./SortedArray\");\r\nexports.SortedArray = SortedArray_1.SortedArray;\r\nconst ArgumentValidator_1 = require(\"./ArgumentValidator\");\r\nexports.any = ArgumentValidator_1.any;\r\nexports.eq = ArgumentValidator_1.eq;\r\nexports.gt = ArgumentValidator_1.gt;\r\nexports.gte = ArgumentValidator_1.gte;\r\nexports.lt = ArgumentValidator_1.lt;\r\nexports.lte = ArgumentValidator_1.lte;\r\nexports.matcher = ArgumentValidator_1.matcher;\r\nexports.regexMatches = ArgumentValidator_1.regexMatches;\r\nexports.startsWith = ArgumentValidator_1.startsWith;\r\nconst Stringify_1 = require(\"./Stringify\");\r\nexports.INTERNAL_MOCKER_NAME = Stringify_1.INTERNAL_MOCKER_NAME;\r\nexports.printObject = Stringify_1.printObject;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass CaptureInternal {\r\n    constructor() {\r\n        this.all = [];\r\n    }\r\n    get first() {\r\n        if (this.all.length === 0) {\r\n            return null;\r\n        }\r\n        return this.all[0];\r\n    }\r\n    get last() {\r\n        if (this.all.length === 0) {\r\n            return null;\r\n        }\r\n        return this.all[this.all.length - 1];\r\n    }\r\n    matches(arg) {\r\n        this.all.push(arg);\r\n        return true;\r\n    }\r\n    description() {\r\n        if (this.all.length === 0) {\r\n            return \"Argument captor. No arguments captured\";\r\n        }\r\n        return \"Argument captor. Currently captured args: \" + this.all;\r\n    }\r\n    equals(other) {\r\n        if (other instanceof CaptureInternal) {\r\n            return other.all === this.all;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nfunction newCapture() {\r\n    return new CaptureInternal();\r\n}\r\nexports.newCapture = newCapture;\r\n//# sourceMappingURL=Capture.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nexports.INTERNAL_MOCKER_NAME = umbra_util_1.INTERNAL_MOCKER_NAME;\r\nfunction GetInternalMockerSafe(mock) {\r\n    const internalMocker = mock[umbra_util_1.INTERNAL_MOCKER_NAME];\r\n    return internalMocker !== null && internalMocker !== void 0 ? internalMocker : null;\r\n}\r\nexports.GetInternalMockerSafe = GetInternalMockerSafe;\r\nfunction GetInternalMocker(mock) {\r\n    const internalMocker = GetInternalMockerSafe(mock);\r\n    if (internalMocker === null) {\r\n        throw new Error(`Passed an object that was not a mock. Object: ${mock.toString()}`);\r\n    }\r\n    return internalMocker;\r\n}\r\nexports.GetInternalMocker = GetInternalMocker;\r\nfunction CreateInternalMocker(mockedFunction, realFunction, mockName, options) {\r\n    const internalMocker = {\r\n        expectations: [],\r\n        recordedInvocations: [],\r\n        realFunction: realFunction,\r\n        options: options,\r\n        inProgressInOrder: [],\r\n        isInExpectation: false,\r\n        mockName: mockName !== null && mockName !== void 0 ? mockName : \"mock\"\r\n    };\r\n    mockedFunction[umbra_util_1.INTERNAL_MOCKER_NAME] = internalMocker;\r\n    return internalMocker;\r\n}\r\nexports.CreateInternalMocker = CreateInternalMocker;\r\n//# sourceMappingURL=InternalMocker.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass StacktraceUtils {\r\n    static getCurrentMockLocation(depth) {\r\n        const stackTrace = new Error().stack;\r\n        if (stackTrace === undefined) {\r\n            return null;\r\n        }\r\n        const stackTraceLines = stackTrace.split(\"\\n\");\r\n        if (stackTraceLines.length < depth + 2) {\r\n            return null;\r\n        }\r\n        const callingLocation = stackTraceLines[depth + 1];\r\n        const matches = /.*?\\((.*?)\\)/.exec(callingLocation);\r\n        if (matches === null) {\r\n            return null;\r\n        }\r\n        return matches[1];\r\n    }\r\n}\r\nexports.StacktraceUtils = StacktraceUtils;\r\n//# sourceMappingURL=StackTraceParser.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nconst InternalMocker_1 = require(\"./InternalMocker\");\r\nconst Mock_1 = require(\"./Mock\");\r\nconst StackTraceParser_1 = require(\"./StackTraceParser\");\r\nfunction findBestArgumentMatcher(expectations, args) {\r\n    const argumentMatcherArray = new umbra_util_1.SortedArray((a, b) => {\r\n        if (a === undefined && b === undefined) {\r\n            return 0;\r\n        }\r\n        else if (a === undefined) {\r\n            return 1;\r\n        }\r\n        else if (b === undefined) {\r\n            return -1;\r\n        }\r\n        if (a.inOrderOverride !== null && b.inOrderOverride == null) {\r\n            return -1;\r\n        }\r\n        if (a.inOrderOverride === null && b.inOrderOverride !== null) {\r\n            return 1;\r\n        }\r\n        if (a.expectedArgs === null && b.expectedArgs === null) {\r\n            return 0;\r\n        }\r\n        else if (a.expectedArgs === null) {\r\n            return 1;\r\n        }\r\n        else if (b.expectedArgs === null) {\r\n            return -1;\r\n        }\r\n        const argLengthDifference = b.expectedArgs.length - a.expectedArgs.length;\r\n        if (argLengthDifference !== 0) {\r\n            return argLengthDifference;\r\n        }\r\n        const aMatcherPrecedence = sumMatchers(a.expectedArgs);\r\n        const bMatcherPrecedence = sumMatchers(b.expectedArgs);\r\n        return bMatcherPrecedence - aMatcherPrecedence;\r\n    });\r\n    for (const expectation of expectations) {\r\n        argumentMatcherArray.insert(expectation);\r\n    }\r\n    for (const expectation of argumentMatcherArray.getData()) {\r\n        if (expectation.callCount >= expectation.expectedRange.end) {\r\n            continue;\r\n        }\r\n        const expectedArgs = expectation.expectedArgs;\r\n        const isValid = verifyArgumentMatcher(expectedArgs, args);\r\n        if (isValid) {\r\n            return expectation;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.findBestArgumentMatcher = findBestArgumentMatcher;\r\nfunction sumMatchers(expectedArgs) {\r\n    let sum = 0;\r\n    for (const arg of expectedArgs) {\r\n        sum += arg.precedence !== undefined ? arg.precedence : 0;\r\n    }\r\n    return sum;\r\n}\r\nfunction verifyArgumentMatcher(expectedArgs, args) {\r\n    if (expectedArgs === null) {\r\n        return true;\r\n    }\r\n    if (args.length < expectedArgs.length) {\r\n        return false;\r\n    }\r\n    let isValid = true;\r\n    if (expectedArgs.length === 0) {\r\n        isValid = args.length === 0;\r\n    }\r\n    for (let i = 0; i < expectedArgs.length; i++) {\r\n        const argumentValidator = expectedArgs[i];\r\n        const arg = args[i];\r\n        isValid = isValid && argumentValidator.matches(arg);\r\n    }\r\n    return isValid;\r\n}\r\nexports.verifyArgumentMatcher = verifyArgumentMatcher;\r\nconst defaultExpectationOptions = { includeLocation: true };\r\nfunction buildExpectationString(expectation, options = defaultExpectationOptions) {\r\n    const mockedFuncName = expectation.internalMocker.mockName || \"mock\";\r\n    let argsString = `\\t${mockedFuncName}`;\r\n    if (expectation.expectedArgs === null) {\r\n        argsString += `() with any arguments`;\r\n    }\r\n    else {\r\n        const argData = [];\r\n        for (const argumentValdiatorArg of expectation.expectedArgs) {\r\n            if (argumentValdiatorArg.description) {\r\n                argData.push(argumentValdiatorArg.description());\r\n            }\r\n            else {\r\n                argData.push(argumentValdiatorArg.toString());\r\n            }\r\n        }\r\n        argsString += `(${argData.join(\", \")})`;\r\n    }\r\n    argsString += `. Expected ${expectation.expectedRange.describeRange()}, so far ${expectation.callCount}.`;\r\n    if (options.includeLocation) {\r\n        argsString += `\\n\\tExpectation set at ${expectation.location}`;\r\n    }\r\n    return argsString + \"\\n\";\r\n}\r\nfunction createMockedFunction() {\r\n    const mock = (...args) => {\r\n        const internalMocker = InternalMocker_1.GetInternalMocker(mockedFunc);\r\n        const currentLocation = StackTraceParser_1.StacktraceUtils.getCurrentMockLocation(2);\r\n        internalMocker.recordedInvocations.push({\r\n            params: args,\r\n            location: currentLocation\r\n        });\r\n        const expectationData = findBestArgumentMatcher(internalMocker.expectations, args);\r\n        if (expectationData !== null) {\r\n            if (expectationData.inOrderOverride) {\r\n                const inOrderOverride = expectationData.inOrderOverride;\r\n                const expectedInvocation = inOrderOverride.expectations[inOrderOverride.currentIndex];\r\n                if (expectedInvocation !== expectationData) {\r\n                    const expectedInvocationString = buildExpectationString(expectedInvocation);\r\n                    throw new Error(`Out of order method call.\\nExpected:\\n${expectedInvocationString}\\n` +\r\n                        `Actual:\\n${buildExpectationString(expectationData, { includeLocation: false })}` +\r\n                        `\\tCalled at ${currentLocation}`);\r\n                }\r\n                else {\r\n                    if (inOrderOverride.currentIndex === 0) {\r\n                        internalMocker.inProgressInOrder.push(inOrderOverride);\r\n                    }\r\n                    inOrderOverride.currentIndex++;\r\n                    if (inOrderOverride.currentIndex > inOrderOverride.expectations.length) {\r\n                        const inProgressIndex = internalMocker.inProgressInOrder.indexOf(inOrderOverride);\r\n                        if (inProgressIndex === -1) {\r\n                            throw new Error(\"Could not find in progress index\");\r\n                        }\r\n                        internalMocker.inProgressInOrder.splice(inProgressIndex, 1);\r\n                    }\r\n                }\r\n            }\r\n            else if (internalMocker.inProgressInOrder.length > 0) {\r\n                throw new Error(`Out of order method call.`);\r\n            }\r\n            expectationData.callCount++;\r\n            if (!expectationData.answer) {\r\n                return undefined;\r\n            }\r\n            const result = expectationData.answer(...args);\r\n            return result;\r\n        }\r\n        if (internalMocker.options.strictMode === Mock_1.StrictnessMode.Strict) {\r\n            let expectations = \"\";\r\n            for (const expectation of internalMocker.expectations) {\r\n                expectations += buildExpectationString(expectation) + \"\\n\";\r\n            }\r\n            expectations = expectations ? `\\nExpectations:\\n${expectations}\\u00A0` : \"\";\r\n            const wording = internalMocker.expectations.length > 0 ? \"matched\" : \"was set\";\r\n            const argsStringified = [];\r\n            for (const arg of args) {\r\n                argsStringified.push(umbra_util_1.printObject(arg));\r\n            }\r\n            const argsText = argsStringified.join(\", \");\r\n            throw new Error(`${mockedFunc.name}(${argsText}) was called but no expectation ${wording}.${expectations}`);\r\n        }\r\n        return null;\r\n    };\r\n    const mockedFunc = mock;\r\n    return mockedFunc;\r\n}\r\nexports.createMockedFunction = createMockedFunction;\r\n//# sourceMappingURL=MockedFunction.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nclass AssertionError extends Error {\r\n    constructor(ourMessage, theirMessage) {\r\n        const message = theirMessage ? ourMessage + \"\\n\" + theirMessage : ourMessage;\r\n        super(message);\r\n    }\r\n}\r\nclass Assert {\r\n    static that(output) {\r\n    }\r\n    static equal(expected, actual, message) {\r\n        if (umbra_util_1.deepEqual(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to deeply equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static notEqual(expected, actual, message) {\r\n        if (!umbra_util_1.deepEqual(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to not deeply equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static looseEqual(actual, expected, message) {\r\n        if (expected == actual) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} == ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static notLooseEqual(actual, expected, message) {\r\n        if (expected != actual) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} != ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static strictEqual(actual, expected, message) {\r\n        if (Object.is(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to strictly equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static notStrictEqual(actual, expected, message) {\r\n        if (!Object.is(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to not strictly equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static is(actual, expected, message) {\r\n        Assert.strictEqual(actual, expected, message);\r\n    }\r\n    static has(target, keyPath, expected, message) {\r\n        Assert.exists(target, \"target\");\r\n        Assert.exists(keyPath, \"keyPath\");\r\n        Assert.exists(target, \"target\");\r\n        const pathArray = keyPath.split(\".\");\r\n        let result = target;\r\n        for (const path of pathArray) {\r\n            const newResult = result[path];\r\n            if (!newResult) {\r\n                Assert.fail(`Missing key \"${path}\" in object ${umbra_util_1.printObject(result)}\\nAvailable keys: ${umbra_util_1.printObject(Object.keys(expected))}`);\r\n            }\r\n            result = newResult;\r\n        }\r\n        Assert.strictEqual(result, expected, message);\r\n    }\r\n    static regexMatches(actual, expected, message) {\r\n        if (expected.test(actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to match the regex ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static resolvesTo(actual, expected, message) {\r\n        return actual\r\n            .then((actualValue) => {\r\n            Assert.equal(actualValue, expected);\r\n        }, (e) => {\r\n            throw new AssertionError(`Promise should not have successfully resolved.\\nException: ${e}\\n`, message);\r\n        });\r\n    }\r\n    static rejects(actual, expected, message) {\r\n        const errorMessage = expected instanceof Error ? expected.message : expected;\r\n        return actual\r\n            .then(() => {\r\n            throw new AssertionError(\"Promise should not have successfully resolved\", message);\r\n        }, (e) => {\r\n            if (errorMessage) {\r\n                Assert.equal(errorMessage, e.message);\r\n            }\r\n        });\r\n    }\r\n    static fail(message) {\r\n        throw new AssertionError(\"Test failed\", message);\r\n    }\r\n    static isTrue(value, message) {\r\n        Assert.equal(true, value, message);\r\n    }\r\n    static isFalse(value, message) {\r\n        Assert.equal(false, value, message);\r\n    }\r\n    static isTruthy(value, message) {\r\n        if (!value) {\r\n            throw new AssertionError(`Expected ${value} to be truthy`, message);\r\n        }\r\n    }\r\n    static isFalsy(value, message) {\r\n        if (value) {\r\n            throw new AssertionError(`Expected ${value} to be falsy`, message);\r\n        }\r\n    }\r\n    static exists(expected, message) {\r\n        this.notEqual(expected, null, `Expected ${umbra_util_1.printObject(expected)} to not be null. ${message}`);\r\n        this.notEqual(expected, undefined, `Expected ${umbra_util_1.printObject(expected)} to not be undefined. ${message}`);\r\n        return true;\r\n    }\r\n    static contains(target, value, message) {\r\n        this.exists(target);\r\n        if (typeof target === \"string\") {\r\n            Assert.isTrue(target.indexOf(value) !== -1, `String: ${value} was not found in ${target}`);\r\n        }\r\n        else if (Array.isArray(target)) {\r\n            Assert.isTrue(target.indexOf(value) !== -1, `${umbra_util_1.printObject(value)} was not found in target array ${umbra_util_1.printObject(target)}. ${message !== null && message !== void 0 ? message : \"\"}`);\r\n        }\r\n        else {\r\n            for (const [entryKey, entryValue] of Object.entries(value)) {\r\n                Assert.equal(target[entryKey], entryValue);\r\n            }\r\n        }\r\n    }\r\n    static containsAll(target, values, message) {\r\n        this.exists(target);\r\n        this.exists(values);\r\n        for (const value of values) {\r\n            Assert.contains(target, value, message);\r\n        }\r\n    }\r\n}\r\nexports.Assert = Assert;\r\n//# sourceMappingURL=Assert.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Assert_1 = require(\"./Assert\");\r\nclass Expect {\r\n    constructor(target) {\r\n        this.target = target;\r\n    }\r\n    toBe(value) {\r\n        Assert_1.Assert.equal(this.target, value);\r\n    }\r\n    toHaveProperty(keyPath, value) {\r\n        Assert_1.Assert.has(this.target, keyPath, value);\r\n    }\r\n    toBeTruthy() {\r\n        Assert_1.Assert.isTruthy(this.target);\r\n    }\r\n    toBeFalsy() {\r\n        Assert_1.Assert.isFalsy(this.target);\r\n    }\r\n}\r\nexports.Expect = Expect;\r\nfunction expect(target) {\r\n    return new Expect(target);\r\n}\r\nexports.expect = expect;\r\n//# sourceMappingURL=Expect.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Assert_1 = require(\"./Assert\");\r\nexports.assert = Assert_1.Assert;\r\nconst Expect_1 = require(\"./Expect\");\r\nexports.Expect = Expect_1.Expect;\r\nexports.expect = Expect_1.expect;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Range {\r\n    constructor(start, end = start) {\r\n        if (start < 0) {\r\n            throw new Error(`Start value must be >= 0. Received ${start}`);\r\n        }\r\n        if (end < 1) {\r\n            throw Error(`End value must be >= 1. Received ${end}`);\r\n        }\r\n        if (start > end) {\r\n            throw new Error(`Start must be <= end. Start: ${start} End: ${end}`);\r\n        }\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    isFixedRange() {\r\n        return this.start === this.end;\r\n    }\r\n    isInRange(count) {\r\n        return count >= this.start && count <= this.end;\r\n    }\r\n    hasNoUpperBound() {\r\n        return this.end === Number.MAX_SAFE_INTEGER;\r\n    }\r\n    describeRange() {\r\n        if (this.isFixedRange()) {\r\n            return `${this.start} invocations`;\r\n        }\r\n        if (this.hasNoUpperBound()) {\r\n            return `at least ${this.start} invocations`;\r\n        }\r\n        return `between ${this.start} and ${this.end} invocations`;\r\n    }\r\n}\r\nexports.Range = Range;\r\n//# sourceMappingURL=Range.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nconst umbra_assert_1 = require(\"umbra-assert\");\r\nconst InternalMocker_1 = require(\"./InternalMocker\");\r\nconst Range_1 = require(\"./Range\");\r\nconst StackTraceParser_1 = require(\"./StackTraceParser\");\r\nfunction createDirectReturnAnswer(value) {\r\n    return function directReturnAnswer() {\r\n        return value;\r\n    };\r\n}\r\nfunction createDirectThrowAnswer(error) {\r\n    return function directThrowAnswer() {\r\n        throw error;\r\n    };\r\n}\r\nfunction createCallRealMethodAnwser(realFunction) {\r\n    return function realMethodAnswer(...args) {\r\n        return realFunction(args);\r\n    };\r\n}\r\nfunction createPromiseResolveAnswer(value) {\r\n    return function directReturnAnswer() {\r\n        return Promise.resolve(value);\r\n    };\r\n}\r\nfunction createPromiseRejectAnswer(error) {\r\n    return function directReturnAnswer() {\r\n        return Promise.reject(error);\r\n    };\r\n}\r\nfunction normalizeMatcherArgs(args) {\r\n    const normalizedArgs = [];\r\n    for (const arg of args) {\r\n        const argMatcher = InternalMocker_1.GetInternalMockerSafe(arg) === null && typeof arg.matches === \"function\" ? arg : umbra_util_1.eq(arg);\r\n        normalizedArgs.push(argMatcher);\r\n    }\r\n    return normalizedArgs;\r\n}\r\nexports.normalizeMatcherArgs = normalizeMatcherArgs;\r\nconst NOT_SET = -1;\r\nclass OnGoingStubs extends umbra_assert_1.Expect {\r\n    constructor(mockedFunction) {\r\n        super(mockedFunction);\r\n        this.atMostCount = NOT_SET;\r\n        this.atLeastCount = NOT_SET;\r\n        this.timesCount = NOT_SET;\r\n        this.internalMocker = InternalMocker_1.GetInternalMocker(mockedFunction);\r\n        this.currentArgumentExpectations = null;\r\n        this.internalMocker.isInExpectation = true;\r\n        const expectation = {\r\n            internalMocker: this.internalMocker,\r\n            expectedRange: new Range_1.Range(1),\r\n            location: StackTraceParser_1.StacktraceUtils.getCurrentMockLocation(3),\r\n            answer: null,\r\n            expectedArgs: this.currentArgumentExpectations,\r\n            callCount: 0,\r\n            inOrderOverride: null,\r\n        };\r\n        this.internalMocker.expectations.push(expectation);\r\n        this.expectation = expectation;\r\n    }\r\n    getExpectation() {\r\n        return this.expectation;\r\n    }\r\n    withArgs(...args) {\r\n        this.currentArgumentExpectations = normalizeMatcherArgs(args);\r\n        this.expectation.expectedArgs = this.currentArgumentExpectations;\r\n        return this;\r\n    }\r\n    andReturn(value) {\r\n        this.expectation.answer = createDirectReturnAnswer(value);\r\n        return this;\r\n    }\r\n    andStubReturn(value) {\r\n        this.expectation.answer = createDirectReturnAnswer(value);\r\n        this.atLeast(0);\r\n    }\r\n    andThrow(error) {\r\n        this.expectation.answer = createDirectThrowAnswer(error);\r\n        return this;\r\n    }\r\n    andCallRealMethod() {\r\n        const realFunction = this.internalMocker.realFunction;\r\n        if (!realFunction) {\r\n            throw new Error(\"No function was available. Ensure a real object was passed to the spy\");\r\n        }\r\n        this.expectation.answer = createCallRealMethodAnwser(realFunction);\r\n        return this;\r\n    }\r\n    andAnswer(answer) {\r\n        this.expectation.answer = answer;\r\n        return this;\r\n    }\r\n    andResolve(value) {\r\n        this.expectation.answer = createPromiseResolveAnswer(value);\r\n        return this;\r\n    }\r\n    andReject(error) {\r\n        this.expectation.answer = createPromiseRejectAnswer(error);\r\n        return this;\r\n    }\r\n    times(count) {\r\n        if (this.timesCount !== NOT_SET || this.atLeastCount !== NOT_SET || this.atMostCount !== NOT_SET) {\r\n            throw new Error(\"Previously set expectation count, value must only be set once\");\r\n        }\r\n        this.timesCount = count;\r\n        this.setExpectedRange(new Range_1.Range(count));\r\n        return this;\r\n    }\r\n    once() {\r\n        return this.times(1);\r\n    }\r\n    twice() {\r\n        return this.times(2);\r\n    }\r\n    atMost(atMostInvocations) {\r\n        if (this.timesCount !== NOT_SET || (this.atMostCount !== NOT_SET && this.atMostCount !== Number.MAX_SAFE_INTEGER)) {\r\n            throw new Error(\"Previously set expectation count, value must only be set once\");\r\n        }\r\n        this.atMostCount = atMostInvocations;\r\n        this.atLeastCount = this.atLeastCount !== NOT_SET ? this.atLeastCount : 0;\r\n        this.setExpectedRange(new Range_1.Range(this.atLeastCount, this.atMostCount));\r\n        return this;\r\n    }\r\n    atLeast(atLeastInvocations) {\r\n        if (this.timesCount !== NOT_SET || (this.atLeastCount !== NOT_SET && this.atLeastCount !== 0)) {\r\n            throw new Error(\"Previously set expectation count, value must only be set once\");\r\n        }\r\n        this.atLeastCount = atLeastInvocations;\r\n        this.atMostCount = this.atMostCount !== NOT_SET ? this.atMostCount : Number.MAX_SAFE_INTEGER;\r\n        this.setExpectedRange(new Range_1.Range(this.atLeastCount, this.atMostCount));\r\n        return this;\r\n    }\r\n    setExpectedRange(range) {\r\n        const expectations = this.internalMocker.expectations;\r\n        if (expectations.length > 1 && range.isFixedRange()) {\r\n            const newExpectations = expectations[expectations.length - 1];\r\n            const lastExpectations = expectations[expectations.length - 2];\r\n            if (!lastExpectations.expectedRange.isFixedRange()) {\r\n                if (this.doArgumentsMatch(lastExpectations, newExpectations)) {\r\n                    throw new Error(\"Previous expectation had a non fixed range.\");\r\n                }\r\n            }\r\n        }\r\n        this.expectation.expectedRange = range;\r\n    }\r\n    doArgumentsMatch(lastExpectations, newExpectations) {\r\n        if (newExpectations.expectedArgs === null || lastExpectations.expectedArgs === null) {\r\n            return lastExpectations.expectedArgs === null && newExpectations.expectedArgs === null;\r\n        }\r\n        if (newExpectations.expectedArgs.length !== lastExpectations.expectedArgs.length) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < newExpectations.expectedArgs.length; i++) {\r\n            const lastArg = lastExpectations.expectedArgs[i];\r\n            const newArg = newExpectations.expectedArgs[i];\r\n            if (!newArg.equals(lastArg)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexports.OnGoingStubs = OnGoingStubs;\r\n//# sourceMappingURL=OnGoingStubs.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst InternalMocker_1 = require(\"./InternalMocker\");\r\nconst MockedFunction_1 = require(\"./MockedFunction\");\r\nconst OnGoingStubs_1 = require(\"./OnGoingStubs\");\r\nvar StrictnessMode;\r\n(function (StrictnessMode) {\r\n    StrictnessMode[StrictnessMode[\"Strict\"] = 0] = \"Strict\";\r\n    StrictnessMode[StrictnessMode[\"Loose\"] = 1] = \"Loose\";\r\n})(StrictnessMode || (StrictnessMode = {}));\r\nexports.StrictnessMode = StrictnessMode;\r\nclass InvocationHandler {\r\n    constructor(clazz, realObject, mockName, options) {\r\n        this.cachedStubs = {};\r\n        this.cachedFunctionStub = null;\r\n        this.clazz = clazz;\r\n        this.realObject = realObject;\r\n        this.mockName = mockName;\r\n        this.options = options;\r\n    }\r\n    apply(target, thisArg, argArray) {\r\n        if (target === this.realObject) {\r\n            this.mockSingleFunctionIfNecessary(this.realObject);\r\n            return this.cachedFunctionStub(...argArray);\r\n        }\r\n        target(argArray);\r\n    }\r\n    get(target, p, receiver) {\r\n        if (p === InternalMocker_1.INTERNAL_MOCKER_NAME || Object.getPrototypeOf(Function)[p] !== undefined) {\r\n            this.mockSingleFunctionIfNecessary(target[p]);\r\n            return this.cachedFunctionStub[p];\r\n        }\r\n        if (this.clazz) {\r\n            const realMethod = this.clazz[p];\r\n            if (realMethod === null || realMethod === undefined) {\r\n                const validMethods = Object.getOwnPropertyNames(this.clazz).join(\", \");\r\n                throw new Error(`Method \"${p.toString()}\" was called on class \"${this.clazz.constructor.name}\". ` +\r\n                    `Ensure method exists on prototype. Valid methods: [${validMethods}]`);\r\n            }\r\n        }\r\n        if (!this.cachedStubs[p]) {\r\n            const mockedFunction = MockedFunction_1.createMockedFunction();\r\n            const mockName = this.mockName !== null ? `${this.mockName}.${p.toString()}` : p.toString();\r\n            Object.defineProperty(mockedFunction, \"name\", { value: mockName });\r\n            const internalMocker = InternalMocker_1.CreateInternalMocker(mockedFunction, target[p], mockName, this.options);\r\n            if (internalMocker.isInExpectation) {\r\n                internalMocker.isInExpectation = false;\r\n            }\r\n            this.cachedStubs[p] = mockedFunction;\r\n        }\r\n        return this.cachedStubs[p];\r\n    }\r\n    enumerate(target) {\r\n        return this.ownKeys(target);\r\n    }\r\n    ownKeys(target) {\r\n        const test2 = Object.keys(this.cachedStubs);\r\n        return test2;\r\n    }\r\n    getOwnPropertyDescriptor(target, p) {\r\n        return Object.getOwnPropertyDescriptor(this.cachedStubs, p);\r\n    }\r\n    isExtensible(target) {\r\n        return false;\r\n    }\r\n    mockSingleFunctionIfNecessary(realFunction) {\r\n        if (!this.cachedFunctionStub) {\r\n            const mockedFunction = MockedFunction_1.createMockedFunction();\r\n            if (this.mockName !== null) {\r\n                Object.defineProperty(mockedFunction, \"name\", { value: this.mockName });\r\n            }\r\n            const internalMocker = InternalMocker_1.CreateInternalMocker(mockedFunction, realFunction, this.mockName, this.options);\r\n            if (internalMocker.isInExpectation) {\r\n                internalMocker.isInExpectation = false;\r\n            }\r\n            this.cachedFunctionStub = mockedFunction;\r\n        }\r\n    }\r\n}\r\nlet defaultOptions = {\r\n    strictMode: StrictnessMode.Strict,\r\n    inOrder: false\r\n};\r\nfunction setDefaultOptions(options) {\r\n    defaultOptions = Object.assign(defaultOptions, options);\r\n}\r\nexports.setDefaultOptions = setDefaultOptions;\r\nfunction mock(clazz, mockName, options = defaultOptions) {\r\n    const stubFunction = (() => { });\r\n    if (typeof clazz === \"string\") {\r\n        mockName = clazz;\r\n        clazz = undefined;\r\n    }\r\n    if (!mockName) {\r\n        mockName = null;\r\n    }\r\n    return new Proxy(stubFunction, new InvocationHandler(clazz ? clazz.prototype : null, stubFunction, mockName, options));\r\n}\r\nexports.mock = mock;\r\nfunction spy(realObject, options = defaultOptions) {\r\n    return new Proxy(realObject, new InvocationHandler(Object.getPrototypeOf(realObject), realObject, null, options));\r\n}\r\nexports.spy = spy;\r\nfunction expect(mockedFunction) {\r\n    return new OnGoingStubs_1.OnGoingStubs(mockedFunction);\r\n}\r\nexports.expect = expect;\r\nfunction inOrder(...stubs) {\r\n    const inOrderExpectation = {\r\n        expectations: [],\r\n        currentIndex: 0\r\n    };\r\n    const castStubs = stubs;\r\n    for (const stub of castStubs) {\r\n        const expectation = stub.getExpectation();\r\n        inOrderExpectation.expectations.push(expectation);\r\n        expectation.inOrderOverride = inOrderExpectation;\r\n    }\r\n}\r\nexports.inOrder = inOrder;\r\n//# sourceMappingURL=Mock.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst InternalMocker_1 = require(\"./InternalMocker\");\r\nfunction verify(...mocks) {\r\n    for (const mock of mocks) {\r\n        verifyMock(mock);\r\n    }\r\n}\r\nexports.verify = verify;\r\nfunction verifyMock(mock) {\r\n    const internalMocker = InternalMocker_1.GetInternalMocker(mock);\r\n    const test = Object.keys(mock);\r\n    for (const key of test) {\r\n        if (key === InternalMocker_1.INTERNAL_MOCKER_NAME) {\r\n            continue;\r\n        }\r\n        const value = mock[key];\r\n        if (value) {\r\n            const internalFunctionMocker = InternalMocker_1.GetInternalMocker(value);\r\n            if (internalFunctionMocker) {\r\n                verifyMock(value);\r\n            }\r\n        }\r\n    }\r\n    for (const expectation of internalMocker.expectations) {\r\n        if (!expectation.expectedRange.isInRange(expectation.callCount)) {\r\n            throw new Error(buildErrorMessage(internalMocker.recordedInvocations, expectation));\r\n        }\r\n    }\r\n}\r\nfunction buildErrorMessage(args, expectationData) {\r\n    const calledLocations = buildCallLocations(expectationData.expectedArgs, args);\r\n    const specificMessage = buildRangeMessage(expectationData.expectedRange, expectationData.callCount);\r\n    const callLocation = calledLocations.length > 0 ? \"Called at:\\n\" + calledLocations.join(\"\\n\") : \"\";\r\n    return `${specificMessage}\\nExpected at: ${expectationData.location}\\n${callLocation}\\n\\u00A0`;\r\n}\r\nfunction buildRangeMessage(range, callCount) {\r\n    return `Expected ${range.describeRange()}, got ${callCount}.`;\r\n}\r\nfunction buildCallLocations(expectedArgs, args) {\r\n    const callLocations = [];\r\n    for (const invocation of args) {\r\n        if (expectedArgs === null) {\r\n            if (invocation.location !== null) {\r\n                callLocations.push(invocation.location);\r\n            }\r\n        }\r\n    }\r\n    return callLocations;\r\n}\r\n//# sourceMappingURL=Verify.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nexports.any = umbra_util_1.any;\r\nexports.eq = umbra_util_1.eq;\r\nexports.gt = umbra_util_1.gt;\r\nexports.gte = umbra_util_1.gte;\r\nexports.lt = umbra_util_1.lt;\r\nexports.lte = umbra_util_1.lte;\r\nexports.matcher = umbra_util_1.matcher;\r\nexports.regexMatches = umbra_util_1.regexMatches;\r\nexports.startsWith = umbra_util_1.startsWith;\r\nconst Capture_1 = require(\"./Capture\");\r\nexports.newCapture = Capture_1.newCapture;\r\nconst Mock_1 = require(\"./Mock\");\r\nexports.expect = Mock_1.expect;\r\nexports.inOrder = Mock_1.inOrder;\r\nexports.mock = Mock_1.mock;\r\nexports.setDefaultOptions = Mock_1.setDefaultOptions;\r\nexports.spy = Mock_1.spy;\r\nconst Verify_1 = require(\"./Verify\");\r\nexports.verify = Verify_1.verify;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst umbra_test_runner_1 = require(\"@umbra-test/umbra-test-runner\");\r\nexports.TestRunner = umbra_test_runner_1.TestRunner;\r\nconst umbra_assert_1 = require(\"umbra-assert\");\r\nexports.assert = umbra_assert_1.assert;\r\nconst umbra_test_mock_1 = require(\"umbra-test-mock\");\r\nexports.any = umbra_test_mock_1.any;\r\nexports.eq = umbra_test_mock_1.eq;\r\nexports.expect = umbra_test_mock_1.expect;\r\nexports.gt = umbra_test_mock_1.gt;\r\nexports.gte = umbra_test_mock_1.gte;\r\nexports.inOrder = umbra_test_mock_1.inOrder;\r\nexports.lt = umbra_test_mock_1.lt;\r\nexports.lte = umbra_test_mock_1.lte;\r\nexports.matcher = umbra_test_mock_1.matcher;\r\nexports.mock = umbra_test_mock_1.mock;\r\nexports.newCapture = umbra_test_mock_1.newCapture;\r\nexports.regexMatches = umbra_test_mock_1.regexMatches;\r\nexports.setMockOptions = umbra_test_mock_1.setDefaultOptions;\r\nexports.spy = umbra_test_mock_1.spy;\r\nexports.startsWith = umbra_test_mock_1.startsWith;\r\nexports.verify = umbra_test_mock_1.verify;\r\n//# sourceMappingURL=index.js.map"],"names":["Object","defineProperty","exports","value","[object Object]","fn","name","writable","length","Promise","resolve","reject","result","Error","e","TimeoutError","message","elapsedMs","timeoutMs","super","this","promise","startTime","Date","now","timerId","timeoutPromise","setTimeout","catch","clearTimeout","race","then","to","from","entryType","stopOnFirstFail","union","arrayA","arrayB","item","indexOf","push","without","array","indexOfItem","splice","onListeners","onceListeners","event","callback","args","call","promises","all","results","queue","element","stack","pop","shift","i","j","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","done","apply","QueueStackTypes","config","eventEmitter","SimpleEventEmitter_1","SimpleEventEmitter","asyncPromisifier","AsyncPromisifier_1","AsyncPromisifier","timeoutPromisifier","TimeoutPromisifier_1","TimeoutPromisifier","testQueueStack","queueStacks","before","QueueStack_1","QueueStack","beforeEach","after","afterEach","currentTest","testRunCancelled","describe","title","execBlock","throwIfTestInProgress","pushToCurrentTestQueue","describeOnly","it","options","undefined","itOnly","runNextTestQueue","evaluatedTest","firstOnlyIndex","executeTest","tests","evaluateQueueWithTimeout","resetRunResults","runResults","elapsedTimeMs","totalTests","totalSuccesses","totalFailures","totalTimeouts","failureInfo","timeoutInfo","TestRunnerConfig_1","mergeConfig","DefaultTestRunnerConfig_1","DefaultTestRunnerConfig","only","absolutePath","lastFilePathSet","on","once","off","pushOnTop","currentRun","type","reset","testQueue","titleChain","evaluatedBefores","currentEntry","testEntry","absoluteFilePath","entry","currentlyExecutingFilePath","emit","evaluateDescribe","evaluateTest","concat","pushStack","exec","popStack","shiftStack","describeDurationMs","executeTestCallback","timeoutValue","getTimeoutValue","wrap","emitAndWaitForCompletion","testDurationMs","error","describeChain","evaluateQueue","queueStack","traverseLevelOrder","traverseInverseLevelOrder","timeout","TestRunner_1","TestRunner","deepEqual","a","b","getTime","exists","key","aKeys","bKeys","prototype","keys","sort","deepEqualObject","ArrayUtils_1","compareDefault","compare","initialValues","compareFunction","insert","foundIndex","searchInternal","highestIndex","index","search","ordering","high","low","Math","floor","object","RegExp","toString","mockerData","mock","internalMocker","GetMockerDataSafe","mockName","JSON","stringify","validator","precedence","matches","description","equals","other","realValue","Stringify_1","printObject","DeepEqual_1","startsWith","test","func","SortedArray_1","SortedArray","ArgumentValidator_1","any","eq","gt","gte","lt","lte","matcher","regexMatches","INTERNAL_MOCKER_NAME","AssertionError","ourMessage","theirMessage","Assert","output","expected","actual","umbra_util_1","is","strictEqual","target","keyPath","pathArray","split","path","newResult","fail","actualValue","equal","errorMessage","notEqual","isTrue","Array","isArray","entryKey","entryValue","entries","values","contains","Expect","Assert_1","has","isTruthy","isFalsy","Expect_1","expect","CaptureInternal","first","last","arg","GetInternalMockerSafe","mockedFunction","realFunction","expectations","recordedInvocations","inProgressInOrder","isInExpectation","depth","stackTrace","stackTraceLines","callingLocation","findBestArgumentMatcher","argumentMatcherArray","inOrderOverride","expectedArgs","argLengthDifference","aMatcherPrecedence","sumMatchers","expectation","getData","callCount","expectedRange","end","verifyArgumentMatcher","sum","isValid","argumentValidator","defaultExpectationOptions","includeLocation","buildExpectationString","argsString","argData","argumentValdiatorArg","join","describeRange","location","mockedFunc","InternalMocker_1","GetInternalMocker","currentLocation","StackTraceParser_1","StacktraceUtils","getCurrentMockLocation","params","expectationData","expectedInvocation","currentIndex","expectedInvocationString","inProgressIndex","answer","strictMode","Mock_1","StrictnessMode","Strict","wording","argsStringified","argsText","start","count","Number","MAX_SAFE_INTEGER","isFixedRange","hasNoUpperBound","createDirectReturnAnswer","normalizeMatcherArgs","normalizedArgs","argMatcher","OnGoingStubs","umbra_assert_1","atMostCount","atLeastCount","timesCount","currentArgumentExpectations","Range_1","Range","atLeast","createDirectThrowAnswer","createCallRealMethodAnwser","createPromiseResolveAnswer","createPromiseRejectAnswer","setExpectedRange","times","atMostInvocations","atLeastInvocations","range","newExpectations","lastExpectations","doArgumentsMatch","lastArg","InvocationHandler","clazz","realObject","cachedStubs","cachedFunctionStub","argArray","mockSingleFunctionIfNecessary","p","receiver","getPrototypeOf","Function","realMethod","validMethods","getOwnPropertyNames","constructor","MockedFunction_1","createMockedFunction","CreateInternalMocker","ownKeys","getOwnPropertyDescriptor","defaultOptions","inOrder","assign","stubFunction","Proxy","OnGoingStubs_1","stubs","inOrderExpectation","castStubs","stub","getExpectation","verifyMock","isInRange","buildErrorMessage","calledLocations","callLocations","invocation","buildCallLocations","specificMessage","callLocation","mocks","Capture_1","newCapture","setDefaultOptions","spy","Verify_1","verify","umbra_test_runner_1","assert","umbra_test_mock_1"],"mappings":"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"}