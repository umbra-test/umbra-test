{"version":3,"file":"umbra.js","sources":["../../umbra-test-runner/lib/Async/AsyncPromisifier.js","../../umbra-test-runner/lib/Async/TimeoutPromisifier.js","../../umbra-test-runner/lib/Config/TestRunnerConfig.js","../../umbra-test-runner/lib/Config/DefaultTestRunnerConfig.js","../../umbra-test-runner/lib/EventEmitter/SimpleEventEmitter.js","../../umbra-test-runner/lib/QueueStack.js","../../umbra-test-runner/lib/TestRunner.js","../../umbra-test-runner/lib/index.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/DeepEqual.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/ArrayUtils.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/SimpleEventEmitter.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/SortedArray.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/Stringify.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/ArgumentValidator.js","../../umbra-assert/node_modules/@umbra-test/umbra-util/lib/index.js","../../umbra-assert/lib/Assert.js","../../umbra-assert/lib/Expect.js","../../umbra-assert/lib/index.js","../../umbra-util/lib/DeepEqual.js","../../umbra-util/lib/ArrayUtils.js","../../umbra-util/lib/SimpleEventEmitter.js","../../umbra-util/lib/SortedArray.js","../../umbra-util/lib/Stringify.js","../../umbra-util/lib/ArgumentValidator.js","../../umbra-util/lib/index.js","../../umbra-mock/lib/Capture.js","../../umbra-mock/lib/InternalMocker.js","../../umbra-mock/lib/StackTraceParser.js","../../umbra-mock/lib/MockedFunction.js","../../umbra-mock/lib/Range.js","../../umbra-mock/lib/OnGoingStubs.js","../../umbra-mock/lib/Verify.js","../../umbra-mock/lib/UmbraTestRunnerIntegration.js","../../umbra-mock/lib/Mock.js","../../umbra-mock/lib/index.js","index.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AsyncPromisifier = void 0;\r\n/**\r\n * A class that massages synchronous and some async functions into promises. Expects very specific function signatures.\r\n */\r\nclass AsyncPromisifier {\r\n    /**\r\n     * Takes a function and executes it as a Promise.\r\n     *\r\n     * Supports:\r\n     *  - Promises\r\n     *  - \"done\" callback\r\n     *  - sync returns\r\n     *\r\n     * @param {(done) => any} fn\r\n     * @returns {Promise<T>}\r\n     */\r\n    exec(fn, name) {\r\n        Object.defineProperty(fn, \"name\", { value: name, writable: false });\r\n        /*\r\n         * 2nd param is \"done\" -- if the user fn has exactly two params then it is expected that they are using a\r\n         * classic asynchronous function and will call \"done\" when complete.\r\n         */\r\n        if (fn.length === 1) {\r\n            return new Promise((resolve, reject) => {\r\n                fn((result) => {\r\n                    if (result instanceof Error) {\r\n                        reject(result);\r\n                    }\r\n                    else {\r\n                        resolve(result);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            try {\r\n                return Promise.resolve(fn());\r\n            }\r\n            catch (e) {\r\n                return Promise.reject(e);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.AsyncPromisifier = AsyncPromisifier;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXN5bmNQcm9taXNpZmllci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Bc3luYy9Bc3luY1Byb21pc2lmaWVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQVlBOztHQUVHO0FBQ0gsTUFBTSxnQkFBZ0I7SUFFbEI7Ozs7Ozs7Ozs7T0FVRztJQUNILElBQUksQ0FBSSxFQUEyRCxFQUFFLElBQVk7UUFFN0UsTUFBTSxDQUFDLGNBQWMsQ0FBQyxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztRQUNwRTs7O1dBR0c7UUFDSCxJQUFJLEVBQUUsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ2pCLE9BQU8sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQUU7Z0JBQ2YsRUFBRyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7b0JBQy9CLElBQUksTUFBTSxZQUFZLEtBQUssRUFBRTt3QkFDekIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO3FCQUNsQjt5QkFBTTt3QkFDSCxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7cUJBQ25CO2dCQUNMLENBQUMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQyxDQUFDLENBQUM7U0FDTjthQUFNO1lBQ0gsSUFBSTtnQkFDQSxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQW9CLEVBQUcsRUFBRSxDQUFDLENBQUM7YUFDcEQ7WUFBQyxPQUFPLENBQUMsRUFBRTtnQkFDUixPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDNUI7U0FDSjtJQUNMLENBQUM7Q0FDSjtBQUVRLDRDQUFnQiJ9","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TimeoutPromisifier = exports.TimeoutError = void 0;\r\n/**\r\n * Internal error type for differentiating timeouts from other promise failures.\r\n */\r\nclass TimeoutError extends Error {\r\n    constructor(message, elapsedMs, timeoutMs) {\r\n        super(message);\r\n        this.timeoutMs = timeoutMs;\r\n    }\r\n}\r\nexports.TimeoutError = TimeoutError;\r\n/**\r\n * A simple promise wrapper, which enables promises to \"timeout\". It does *NOT* actually manipulate or otherwise\r\n * interrupt long-running tasks, but rather simply ignores their result if they eventually do complete.\r\n */\r\nclass TimeoutPromisifier {\r\n    /**\r\n     * Wraps the Promise in another Promise, which will resolve/reject based on the former, or if a given amount of time\r\n     * has passed.\r\n     *\r\n     * @param promise\r\n     * @param timeoutMs\r\n     * @return A new promise, which will resolve if the given promise resolves, or reject if the timeout occurs first.\r\n     */\r\n    wrap(promise, timeoutMs) {\r\n        if (timeoutMs <= 0) {\r\n            return promise;\r\n        }\r\n        const startTime = Date.now();\r\n        let timerId = null;\r\n        const timeoutPromise = new Promise((resolve, reject) => {\r\n            timerId = setTimeout(() => {\r\n                const elapsedMs = Date.now() - startTime;\r\n                reject(new TimeoutError(`Async task timeout exceeded! Elapsed: ${elapsedMs}, timeout: ${timeoutMs}ms.`, elapsedMs, timeoutMs));\r\n            }, timeoutMs);\r\n        });\r\n        promise.catch(() => {\r\n            clearTimeout(timerId);\r\n        });\r\n        // timeoutPromise will never resolve, thus we can safely assume that the result is the original one.\r\n        return Promise.race([promise, timeoutPromise]).then((result) => {\r\n            clearTimeout(timerId);\r\n            return result;\r\n        });\r\n    }\r\n}\r\nexports.TimeoutPromisifier = TimeoutPromisifier;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGltZW91dFByb21pc2lmaWVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0FzeW5jL1RpbWVvdXRQcm9taXNpZmllci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7R0FFRztBQUNILE1BQU0sWUFBYSxTQUFRLEtBQUs7SUFJNUIsWUFBWSxPQUFlLEVBQUUsU0FBaUIsRUFBRSxTQUFpQjtRQUM3RCxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDZixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztJQUMvQixDQUFDO0NBQ0o7QUEyQ08sb0NBQVk7QUF6Q3BCOzs7R0FHRztBQUNILE1BQU0sa0JBQWtCO0lBRXBCOzs7Ozs7O09BT0c7SUFDSCxJQUFJLENBQUksT0FBbUIsRUFBRSxTQUFpQjtRQUMxQyxJQUFJLFNBQVMsSUFBSSxDQUFDLEVBQUU7WUFDaEIsT0FBTyxPQUFPLENBQUM7U0FDbEI7UUFFRCxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDN0IsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ25CLE1BQU0sY0FBYyxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1lBQ25ELE9BQU8sR0FBRyxVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUN0QixNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsU0FBUyxDQUFDO2dCQUN6QyxNQUFNLENBQUMsSUFBSSxZQUFZLENBQUMseUNBQXlDLFNBQVMsY0FBYyxTQUFTLEtBQUssRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQztZQUNuSSxDQUFDLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDbEIsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRTtZQUNmLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMxQixDQUFDLENBQUMsQ0FBQztRQUVILG9HQUFvRztRQUNwRyxPQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLEVBQUUsY0FBYyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFlLEVBQUUsRUFBRTtZQUNwRSxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDdEIsT0FBTyxNQUFXLENBQUM7UUFDdkIsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0NBRUo7QUFFcUIsZ0RBQWtCIn0=","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.mergeConfig = void 0;\r\n/**\r\n * A helper method to merge multiple sources of configuration.\r\n *\r\n * @param to - The base configuration object to be merged into.\r\n * @param from - The configuration object to merge from.\r\n */\r\nfunction mergeConfig(to, from) {\r\n    if (!from || typeof from !== \"object\") {\r\n        return to;\r\n    }\r\n    if (typeof to.timeoutMs === \"object\" && typeof from.timeoutMs === \"object\") {\r\n        for (const entryType of [\"it\", \"before\", \"beforeEach\", \"after\", \"afterEach\"]) {\r\n            if (typeof from.timeoutMs[entryType] === \"number\") {\r\n                to.timeoutMs[entryType] = from.timeoutMs[entryType];\r\n            }\r\n        }\r\n    }\r\n    else if (typeof from.timeoutMs !== \"undefined\") {\r\n        to.timeoutMs = from.timeoutMs;\r\n    }\r\n    if (to.stopOnFirstFail !== from.stopOnFirstFail) {\r\n        to.stopOnFirstFail = from.stopOnFirstFail;\r\n    }\r\n    return to;\r\n}\r\nexports.mergeConfig = mergeConfig;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGVzdFJ1bm5lckNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Db25maWcvVGVzdFJ1bm5lckNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUE4QkE7Ozs7O0dBS0c7QUFDSCxTQUFTLFdBQVcsQ0FBQyxFQUFvQixFQUFFLElBQWdDO0lBQ3ZFLElBQUksQ0FBQyxJQUFJLElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxFQUFFO1FBQ25DLE9BQU8sRUFBRSxDQUFDO0tBQ2I7SUFFRCxJQUFJLE9BQU8sRUFBRSxDQUFDLFNBQVMsS0FBSyxRQUFRLElBQUksT0FBTyxJQUFJLENBQUMsU0FBUyxLQUFLLFFBQVEsRUFBRTtRQUN4RSxLQUFLLE1BQU0sU0FBUyxJQUFJLENBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRSxZQUFZLEVBQUUsT0FBTyxFQUFFLFdBQVcsQ0FBQyxFQUFFO1lBQzFFLElBQUksT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxLQUFLLFFBQVEsRUFBRTtnQkFDL0MsRUFBRSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO2FBQ3ZEO1NBQ0o7S0FDSjtTQUFNLElBQUksT0FBTyxJQUFJLENBQUMsU0FBUyxLQUFLLFdBQVcsRUFBRTtRQUM5QyxFQUFFLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7S0FDakM7SUFFRCxJQUFJLEVBQUUsQ0FBQyxlQUFlLEtBQUssSUFBSSxDQUFDLGVBQWUsRUFBRTtRQUM3QyxFQUFFLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUM7S0FDN0M7SUFFRCxPQUFPLEVBQUUsQ0FBQztBQUNkLENBQUM7QUFFd0Msa0NBQVcifQ==","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DefaultTestRunnerConfig = void 0;\r\n/**\r\n * Default configuration to be used if the user does not explicitly set configuration.\r\n */\r\nconst DefaultTestRunnerConfig = {\r\n    timeoutMs: 100,\r\n    stopOnFirstFail: false\r\n};\r\nexports.DefaultTestRunnerConfig = DefaultTestRunnerConfig;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVmYXVsdFRlc3RSdW5uZXJDb25maWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvQ29uZmlnL0RlZmF1bHRUZXN0UnVubmVyQ29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBOztHQUVHO0FBQ0gsTUFBTSx1QkFBdUIsR0FBcUI7SUFDOUMsU0FBUyxFQUFFLEdBQUc7SUFDZCxlQUFlLEVBQUUsS0FBSztDQUN6QixDQUFDO0FBRU0sMERBQXVCIn0=","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.without = exports.union = exports.SimpleEventEmitter = void 0;\r\n/**\r\n * Simple array union with automatic creation if the arrays don't exist. This is a nice optimization which\r\n * enables the event emitter to lazy-instantiate event callback arrays.\r\n *\r\n * @param arrayA\r\n * @param arrayB\r\n * @return arrayA, modified to include all items from arrayB that weren't already in arrayA. If arrayA doesn't exist,\r\n *         an empty array is returned.\r\n */\r\nfunction union(arrayA, arrayB) {\r\n    if (!arrayA) {\r\n        return arrayB ? arrayB : [];\r\n    }\r\n    if (!arrayB) {\r\n        return arrayA;\r\n    }\r\n    for (const item of arrayB) {\r\n        if (arrayA.indexOf(item) === -1) {\r\n            arrayA.push(item);\r\n        }\r\n    }\r\n    return arrayA;\r\n}\r\nexports.union = union;\r\n/**\r\n * Simple array item removal with automatic creation if the array doesn't exist. This is a nice optimization which\r\n * enables the event emitter to lazy-instantiate event callback arrays.\r\n *\r\n * DOES NOT REMOVE DUPLICATE VALUES!\r\n *\r\n * @param array - The array from which to remove an item.\r\n * @param item - The item to remove from the given array.\r\n * @return The original array, modified to remove the item if it existed. If the array doesn't exist, an empty array\r\n *         is returned.\r\n */\r\nfunction without(array, item) {\r\n    if (!array) {\r\n        return [];\r\n    }\r\n    const indexOfItem = array.indexOf(item);\r\n    if (indexOfItem !== -1) {\r\n        array.splice(indexOfItem, 1);\r\n    }\r\n    return array;\r\n}\r\nexports.without = without;\r\n/**\r\n * A ridiculously simple event emitter with typesafety.\r\n *\r\n * TODO: Maybe opensource this under its own package in the future.\r\n */\r\nclass SimpleEventEmitter {\r\n    constructor() {\r\n        // All event arrays are dynamically filled when calling on/onc.\r\n        this.onListeners = {};\r\n        this.onceListeners = {};\r\n    }\r\n    on(event, callback) {\r\n        (this.onListeners[event]) = union(this.onListeners[event], [callback]);\r\n    }\r\n    once(event, callback) {\r\n        this.onceListeners[event] = union(this.onceListeners[event], [callback]);\r\n    }\r\n    off(event, callback) {\r\n        this.onListeners[event] = without(this.onListeners[event], callback);\r\n        this.onceListeners[event] = without(this.onceListeners[event], callback);\r\n    }\r\n    emit(event, ...args) {\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n    }\r\n    /**\r\n     * Evaluates each function synchronously, but waits for all to asynchronously complete before returning.\r\n     *\r\n     * TODO: Find a better name for this.\r\n     *\r\n     * @param event - The event to emit.\r\n     * @param args - All args to be emitted for the event.\r\n     */\r\n    emitAndWaitForCompletion(event, ...args) {\r\n        const promises = [];\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n        return Promise.all(promises).then((results) => {\r\n            // Intentionally blank, as we want to swallow all actual \"valid\" values.\r\n            return;\r\n        });\r\n    }\r\n}\r\nexports.SimpleEventEmitter = SimpleEventEmitter;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2ltcGxlRXZlbnRFbWl0dGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0V2ZW50RW1pdHRlci9TaW1wbGVFdmVudEVtaXR0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBR0E7Ozs7Ozs7O0dBUUc7QUFDSCxTQUFTLEtBQUssQ0FBSSxNQUFXLEVBQUUsTUFBVztJQUN0QyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1QsT0FBTyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0tBQy9CO0lBRUQsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNULE9BQU8sTUFBTSxDQUFDO0tBQ2pCO0lBRUQsS0FBSyxNQUFNLElBQUksSUFBSSxNQUFNLEVBQUU7UUFDdkIsSUFBSSxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO1lBQzdCLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDckI7S0FDSjtJQUVELE9BQU8sTUFBTSxDQUFDO0FBQ2xCLENBQUM7QUF5R3FELHNCQUFLO0FBdkczRDs7Ozs7Ozs7OztHQVVHO0FBQ0gsU0FBUyxPQUFPLENBQUksS0FBVSxFQUFFLElBQU87SUFDbkMsSUFBSSxDQUFDLEtBQUssRUFBRTtRQUNSLE9BQU8sRUFBRSxDQUFDO0tBQ2I7SUFFRCxNQUFNLFdBQVcsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3hDLElBQUksV0FBVyxLQUFLLENBQUMsQ0FBQyxFQUFFO1FBQ3BCLEtBQUssQ0FBQyxNQUFNLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQyxDQUFDO0tBQ2hDO0lBRUQsT0FBTyxLQUFLLENBQUM7QUFDakIsQ0FBQztBQWlGNEQsMEJBQU87QUEvRXBFOzs7O0dBSUc7QUFDSCxNQUFNLGtCQUFrQjtJQUF4QjtRQUVJLCtEQUErRDtRQUM5QyxnQkFBVyxHQUFxRSxF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","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.QueueStack = void 0;\r\n/**\r\n * A very creatively named Queue of Stacks, with some simple helper methods for operating on them.\r\n */\r\nclass QueueStack {\r\n    constructor() {\r\n        this.queue = [];\r\n    }\r\n    /**\r\n     * Pushes the given element onto the end of the top stack, on the top queue.\r\n     * @param element\r\n     */\r\n    pushOnTop(element) {\r\n        if (this.queue.length === 0) {\r\n            this.queue.push([element]);\r\n        }\r\n        else {\r\n            this.queue[0].push(element);\r\n        }\r\n    }\r\n    /**\r\n     * Pushes a new stack onto the end of the queue.\r\n     *\r\n     * @param stack\r\n     */\r\n    pushStack(stack) {\r\n        this.queue.push(stack);\r\n    }\r\n    /**\r\n     * Removes the last stack from the queue and returns it.\r\n     */\r\n    popStack() {\r\n        return this.queue.pop();\r\n    }\r\n    /**\r\n     * Removes the first stack from the queue and returns it.\r\n     */\r\n    shiftStack() {\r\n        return this.queue.shift();\r\n    }\r\n    /**\r\n     * Traverses the queue stack, starting at the top, first element and proceeding down level by level.\r\n     *\r\n     * @param callback\r\n     */\r\n    traverseLevelOrder(callback) {\r\n        let promise = Promise.resolve();\r\n        for (let i = 0; i < this.queue.length; i++) {\r\n            const queue = this.queue[i];\r\n            for (let j = 0; j < queue.length; j++) {\r\n                promise = promise.then(() => callback(queue[j]));\r\n            }\r\n        }\r\n        return promise;\r\n    }\r\n    /**\r\n     * Traverses the queue stack, starting at the bottom, last element and proceeding up level by level.\r\n     *\r\n     * @param callback\r\n     */\r\n    traverseInverseLevelOrder(callback) {\r\n        let promise = Promise.resolve();\r\n        for (let i = this.queue.length - 1; i >= 0; i--) {\r\n            const queue = this.queue[i];\r\n            for (let j = queue.length - 1; j >= 0; j--) {\r\n                promise = promise.then(() => callback(queue[j]));\r\n            }\r\n        }\r\n        return promise;\r\n    }\r\n    /**\r\n     * Resets the stack, removing all previously pushed queues and elements.\r\n     */\r\n    reset() {\r\n        this.queue = [];\r\n    }\r\n}\r\nexports.QueueStack = QueueStack;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUXVldWVTdGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9RdWV1ZVN0YWNrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBOztHQUVHO0FBQ0gsTUFBTSxVQUFVO0lBQWhCO1FBRVksVUFBSyxHQUFVLEVBQUUsQ0FBQztJQTZFOUIsQ0FBQztJQTNFRzs7O09BR0c7SUFDSCxTQUFTLENBQUMsT0FBVTtRQUNoQixJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUN6QixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7U0FDOUI7YUFBTTtZQUNILElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQy9CO0lBQ0wsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxTQUFTLENBQUMsS0FBVTtRQUNoQixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRUQ7O09BRUc7SUFDSCxRQUFRO1FBQ0osT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQzVCLENBQUM7SUFFRDs7T0FFRztJQUNILFVBQVU7UUFDTixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxrQkFBa0IsQ0FBQyxRQUF1QztRQUN0RCxJQUFJLE9BQU8sR0FBRyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDaEMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3hDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDNUIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQ25DLE9BQU8sR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3BEO1NBQ0o7UUFFRCxPQUFPLE9BQU8sQ0FBQztJQUNuQixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILHlCQUF5QixDQUFDLFFBQThCO1FBQ3BELElBQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNoQyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzdDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDNUIsS0FBSyxJQUFJLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUN4QyxPQUFPLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNwRDtTQUNKO1FBRUQsT0FBTyxPQUFPLENBQUM7SUFDbkIsQ0FBQztJQUVEOztPQUVHO0lBQ0gsS0FBSztRQUNELElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQ3BCLENBQUM7Q0FDSjtBQUVPLGdDQUFVIn0=","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TestRunner = void 0;\r\nconst AsyncPromisifier_1 = require(\"./Async/AsyncPromisifier\");\r\nconst TimeoutPromisifier_1 = require(\"./Async/TimeoutPromisifier\");\r\nconst TestRunnerConfig_1 = require(\"./Config/TestRunnerConfig\");\r\nconst DefaultTestRunnerConfig_1 = require(\"./Config/DefaultTestRunnerConfig\");\r\nconst SimpleEventEmitter_1 = require(\"./EventEmitter/SimpleEventEmitter\");\r\nconst QueueStack_1 = require(\"./QueueStack\");\r\nconst QueueStackTypes = [\"before\", \"beforeEach\", \"after\", \"afterEach\"];\r\n/**\r\n * before -> beforeEach -> beforeHook -> it -> afterHook -> afterEach -> after\r\n */\r\nclass TestRunner {\r\n    constructor(config, eventEmitter = new SimpleEventEmitter_1.SimpleEventEmitter()) {\r\n        this.asyncPromisifier = new AsyncPromisifier_1.AsyncPromisifier();\r\n        this.timeoutPromisifier = new TimeoutPromisifier_1.TimeoutPromisifier();\r\n        this.testQueueStack = [];\r\n        this.queueStacks = {\r\n            \"before\": new QueueStack_1.QueueStack(),\r\n            \"beforeEach\": new QueueStack_1.QueueStack(),\r\n            \"after\": new QueueStack_1.QueueStack(),\r\n            \"afterEach\": new QueueStack_1.QueueStack()\r\n        };\r\n        this.currentTest = null;\r\n        this.testRunCancelled = false;\r\n        // This madness is needed to support function/object hybrids, which is remarkably useful but obnoxious in TS.\r\n        this.describe = ((title, execBlock) => {\r\n            this.throwIfTestInProgress(\"describe\");\r\n            this.pushToCurrentTestQueue(\"describe\", title, execBlock);\r\n        });\r\n        this.describeOnly = (title, execBlock) => {\r\n            this.throwIfTestInProgress(\"describe.only\");\r\n            this.pushToCurrentTestQueue(\"describe\", title, execBlock, true);\r\n        };\r\n        this.describeSkip = (title, execBlock, options) => {\r\n            this.throwIfTestInProgress(\"describe.skip\");\r\n            this.pushToCurrentTestQueue(\"describe\", title, execBlock, false, undefined, true);\r\n        };\r\n        this.it = ((title, execBlock, options) => {\r\n            this.throwIfTestInProgress(\"it\");\r\n            this.pushToCurrentTestQueue(\"it\", title, execBlock, false, options ? options.timeoutMs : undefined);\r\n        });\r\n        this.itOnly = (title, execBlock, options) => {\r\n            this.throwIfTestInProgress(\"it.only\");\r\n            this.pushToCurrentTestQueue(\"it\", title, execBlock, true, options ? options.timeoutMs : undefined);\r\n        };\r\n        this.itSkip = (title, execBlock, options) => {\r\n            this.throwIfTestInProgress(\"it.skip\");\r\n            this.pushToCurrentTestQueue(\"it\", title, execBlock, false, undefined, true);\r\n        };\r\n        this.runNextTestQueue = () => __awaiter(this, void 0, void 0, function* () {\r\n            if (this.testQueueStack.length === 0) {\r\n                return;\r\n            }\r\n            let evaluatedTest = false;\r\n            const queue = this.testQueueStack.shift();\r\n            if (queue.firstOnlyIndex !== null) {\r\n                evaluatedTest = yield this.executeTest(queue, queue.tests[queue.firstOnlyIndex]);\r\n            }\r\n            else {\r\n                for (let i = 0; i < queue.tests.length; i++) {\r\n                    evaluatedTest = (yield this.executeTest(queue, queue.tests[i])) || evaluatedTest;\r\n                }\r\n            }\r\n            if (evaluatedTest) {\r\n                yield this.evaluateQueueWithTimeout(\"after\");\r\n            }\r\n        });\r\n        this.throwIfTestInProgress = (name) => {\r\n            if (this.currentTest) {\r\n                throw new Error(`Cannot add an ${name} block while executing a test!`);\r\n            }\r\n        };\r\n        this.resetRunResults = () => {\r\n            this.runResults = {\r\n                elapsedTimeMs: 0,\r\n                totalTests: 0,\r\n                totalSuccesses: 0,\r\n                totalFailures: 0,\r\n                totalTimeouts: 0,\r\n                failureInfo: [],\r\n                timeoutInfo: []\r\n            };\r\n        };\r\n        this.config = TestRunnerConfig_1.mergeConfig(DefaultTestRunnerConfig_1.DefaultTestRunnerConfig, config);\r\n        this.eventEmitter = eventEmitter;\r\n        this.it.only = this.itOnly;\r\n        this.describe.only = this.describeOnly;\r\n        this.it.skip = this.itSkip;\r\n        this.describe.skip = this.describeSkip;\r\n        this.resetRunResults();\r\n    }\r\n    /**\r\n     * Sets the current file name for all subsequent calls to describe/it/etc. This is used for logging where tests\r\n     * are sourced from.\r\n     */\r\n    setCurrentFile(absolutePath) {\r\n        this.lastFilePathSet = absolutePath;\r\n    }\r\n    on(event, callback) {\r\n        this.eventEmitter.on(event, callback);\r\n    }\r\n    once(event, callback) {\r\n        this.eventEmitter.once(event, callback);\r\n    }\r\n    off(event, callback) {\r\n        this.eventEmitter.off(event, callback);\r\n    }\r\n    before(execBlock) {\r\n        this.throwIfTestInProgress(\"before\");\r\n        this.queueStacks[\"before\"].pushOnTop(execBlock);\r\n    }\r\n    beforeEach(execBlock) {\r\n        this.throwIfTestInProgress(\"beforeEach\");\r\n        this.queueStacks[\"beforeEach\"].pushOnTop(execBlock);\r\n    }\r\n    after(execBlock) {\r\n        this.throwIfTestInProgress(\"after\");\r\n        this.queueStacks[\"after\"].pushOnTop(execBlock);\r\n    }\r\n    afterEach(execBlock) {\r\n        this.throwIfTestInProgress(\"afterEach\");\r\n        this.queueStacks[\"afterEach\"].pushOnTop(execBlock);\r\n    }\r\n    /**\r\n     * Triggers a test run based on the describes and its added previously.\r\n     *\r\n     * If a test is already in progress, an error will be returned.\r\n     */\r\n    run() {\r\n        if (this.currentRun) {\r\n            throw new Error(\"Can't start a test run if one is already in progress!\");\r\n        }\r\n        const startTime = Date.now();\r\n        this.currentRun = this.runNextTestQueue().then(() => {\r\n            const results = this.runResults;\r\n            results.elapsedTimeMs = Date.now() - startTime;\r\n            this.currentRun = null;\r\n            this.resetRunResults();\r\n            return results;\r\n        }).catch((e) => {\r\n            this.currentRun = null;\r\n            throw e;\r\n        });\r\n        return this.currentRun;\r\n    }\r\n    /**\r\n     * If a test is in progress, the current information for the test will be returned.\r\n     *\r\n     * If not, an error will be thrown.\r\n     */\r\n    getCurrentTestInfo() {\r\n        if (!this.currentTest) {\r\n            throw new Error(\"Can't obtain TestInfo if not actively in a test!\");\r\n        }\r\n        return this.currentTest;\r\n    }\r\n    /**\r\n     * Resets all pending state, including all attached before, beforeEach, after, afterEach, tests, describes, etc.\r\n     *\r\n     * If a test run is already in progress, an error will be thrown.\r\n     */\r\n    reset() {\r\n        if (this.currentRun) {\r\n            throw new Error(\"Can't reset if a test run is already in progress!\");\r\n        }\r\n        this.resetRunResults();\r\n        this.testRunCancelled = false;\r\n        this.testQueueStack = [];\r\n        for (const type of QueueStackTypes) {\r\n            this.queueStacks[type].reset();\r\n        }\r\n    }\r\n    cancel() {\r\n        if (!this.currentRun) {\r\n            return Promise.reject(new Error(\"Not currently executing a test run! Unable to cancel accordingly.\"));\r\n        }\r\n        this.testRunCancelled = true;\r\n        return this.currentRun.then((results) => {\r\n            this.reset();\r\n            return results;\r\n        });\r\n    }\r\n    pushToCurrentTestQueue(type, title, execBlock, only, timeoutMs, skip) {\r\n        if (this.testQueueStack.length === 0) {\r\n            const testQueue = {\r\n                titleChain: [],\r\n                tests: [],\r\n                evaluatedBefores: false,\r\n                skipAllTests: type === \"describe\" && skip,\r\n                firstOnlyIndex: only ? 0 : null\r\n            };\r\n            this.testQueueStack.push(testQueue);\r\n        }\r\n        const currentEntry = this.testQueueStack[this.testQueueStack.length - 1];\r\n        const testEntry = {\r\n            title: title,\r\n            type: type,\r\n            callback: execBlock,\r\n            absoluteFilePath: this.lastFilePathSet,\r\n            skip: skip || currentEntry.skipAllTests\r\n        };\r\n        if (only && currentEntry.firstOnlyIndex === null) {\r\n            currentEntry.firstOnlyIndex = currentEntry.tests.length;\r\n        }\r\n        if (timeoutMs > 0) {\r\n            testEntry.timeoutMs = timeoutMs;\r\n        }\r\n        currentEntry.tests.push(testEntry);\r\n    }\r\n    executeTest(queue, entry) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (entry.absoluteFilePath !== this.currentlyExecutingFilePath) {\r\n                this.currentlyExecutingFilePath = entry.absoluteFilePath;\r\n                this.eventEmitter.emit(\"activeFileChanged\", this.currentlyExecutingFilePath);\r\n            }\r\n            if (this.testRunCancelled) {\r\n                return false;\r\n            }\r\n            else if (entry.type === \"describe\") {\r\n                return this.evaluateDescribe(queue, entry);\r\n            }\r\n            else {\r\n                return this.evaluateTest(queue, entry);\r\n            }\r\n        });\r\n    }\r\n    evaluateDescribe(queue, entry) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.testQueueStack.push({\r\n                titleChain: [].concat(queue.titleChain, entry.title),\r\n                tests: [],\r\n                evaluatedBefores: false,\r\n                skipAllTests: entry.skip,\r\n                firstOnlyIndex: null\r\n            });\r\n            for (const type of QueueStackTypes) {\r\n                this.queueStacks[type].pushStack([]);\r\n            }\r\n            this.eventEmitter.emit(\"beforeDescribe\", entry.title);\r\n            const startTime = Date.now();\r\n            yield this.asyncPromisifier.exec(entry.callback, \"describe\");\r\n            yield this.runNextTestQueue();\r\n            for (const type of QueueStackTypes) {\r\n                // Befores operate outside-in, first-last.\r\n                if (type === \"before\" || type === \"beforeEach\") {\r\n                    this.queueStacks[type].popStack();\r\n                }\r\n                else {\r\n                    this.queueStacks[type].shiftStack();\r\n                }\r\n            }\r\n            const describeDurationMs = Date.now() - startTime;\r\n            this.eventEmitter.emit(\"afterDescribe\", entry.title, describeDurationMs);\r\n            return false;\r\n        });\r\n    }\r\n    evaluateTest(queue, entry) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (entry.skip) {\r\n                this.eventEmitter.emit(\"testSkipped\", entry.title);\r\n                return false;\r\n            }\r\n            if (!queue.evaluatedBefores) {\r\n                queue.evaluatedBefores = true;\r\n                yield this.evaluateQueueWithTimeout(\"before\");\r\n            }\r\n            yield this.evaluateQueueWithTimeout(\"beforeEach\");\r\n            this.eventEmitter.emit(\"beforeTest\", entry.title);\r\n            this.currentTest = entry;\r\n            try {\r\n                yield this.executeTestCallback(entry, queue.titleChain);\r\n                yield this.evaluateQueueWithTimeout(\"afterEach\");\r\n            }\r\n            finally {\r\n                this.runResults.totalTests++;\r\n                this.currentTest = null;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    executeTestCallback(entry, titleChain) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const startTime = Date.now();\r\n            const timeoutValue = entry.timeoutMs >= 0 ? entry.timeoutMs : this.getTimeoutValue(\"it\");\r\n            try {\r\n                yield this.timeoutPromisifier.wrap(this.asyncPromisifier.exec(entry.callback, \"Test: \" + entry.title), timeoutValue);\r\n                yield this.eventEmitter.emitAndWaitForCompletion(\"beforeTestSuccess\", entry.title);\r\n                this.runResults.totalSuccesses++;\r\n                const testDurationMs = Date.now() - startTime;\r\n                this.eventEmitter.emit(\"testSuccess\", entry.title, testDurationMs);\r\n            }\r\n            catch (error) {\r\n                if (error instanceof TimeoutPromisifier_1.TimeoutError) {\r\n                    this.runResults.totalTimeouts++;\r\n                    this.runResults.timeoutInfo.push({\r\n                        describeChain: titleChain,\r\n                        title: entry.title,\r\n                        elapsedMs: error.elapsedMs,\r\n                        timeoutMs: error.timeoutMs\r\n                    });\r\n                    this.eventEmitter.emit(\"testTimeout\", entry.title, error.elapsedMs, error.timeoutMs);\r\n                }\r\n                else {\r\n                    this.runResults.totalFailures++;\r\n                    this.runResults.failureInfo.push({\r\n                        describeChain: titleChain,\r\n                        title: entry.title,\r\n                        error: error\r\n                    });\r\n                    this.eventEmitter.emit(\"testFail\", entry.title, error, Date.now() - startTime);\r\n                }\r\n                // If we want to stop additional execution on the first fail, just cancel the rest of the run.\r\n                if (this.config.stopOnFirstFail) {\r\n                    this.testRunCancelled = true;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    evaluateQueueWithTimeout(type) {\r\n        return this.timeoutPromisifier.wrap(this.evaluateQueue(type), this.getTimeoutValue(type));\r\n    }\r\n    evaluateQueue(type) {\r\n        const queueStack = this.queueStacks[type];\r\n        if (type === \"before\" || type === \"beforeEach\") {\r\n            return queueStack.traverseLevelOrder((callback) => this.asyncPromisifier.exec(callback, type));\r\n        }\r\n        else {\r\n            return queueStack.traverseInverseLevelOrder((callback) => this.asyncPromisifier.exec(callback, type));\r\n        }\r\n    }\r\n    getTimeoutValue(type) {\r\n        const timeout = this.config.timeoutMs;\r\n        return typeof timeout === \"number\" ? timeout : timeout[type];\r\n    }\r\n}\r\nexports.TestRunner = TestRunner;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGVzdFJ1bm5lci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9UZXN0UnVubmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUdBLCtEQUEwRDtBQUMxRCxtRUFBNEU7QUFDNUUsZ0VBQXVGO0FBQ3ZGLDhFQUF5RTtBQUV6RSwwRUFBb0Y7QUFDcEYsNkNBQXdDO0FBaUJ4QyxNQUFNLGVBQWUsR0FBRyxDQUFDLFFBQVEsRUFBRSxZQUFZLEVBQUUsT0FBTyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBa0J2RTs7R0FFRztBQUNILE1BQU0sVUFBVTtJQXlCWixZQUFZLE1BQXlCLEVBQUUsZUFBZSxJQUFJLHVDQUFrQixFQUFZO1FBdkJ2RSxxQkFBZ0IsR0FBRyxJQUFJLG1DQUFnQixFQUFFLENBQUM7UUFDMUMsdUJBQWtCLEdBQUcsSUFBSSx1Q0FBa0IsRUFBRSxDQUFDO1FBS3ZELG1CQUFjLEdBQWdCLEVBQUUsQ0FBQztRQUNqQyxnQkFBVyxHQUFrRTtZQUNqRixRQUFRLEVBQUUsSUFBSSx1QkFBVSxFQUFFO1lBQzFCLFlBQVksRUFBRSxJQUFJLHVCQUFVLEVBQUU7WUFDOUIsT0FBTyxFQUFFLElBQUksdUJBQVUsRUFBRTtZQUN6QixXQUFXLEVBQUUsSUFBSSx1QkFBVSxFQUFFO1NBQ2hDLENBQUM7UUFFTSxnQkFBVyxHQUFxQixJQUFJLENBQUM7UUFDckMscUJBQWdCLEdBQVksS0FBSyxDQUFDO1FBeUMxQyw2R0FBNkc7UUFDcEcsYUFBUSxHQUEyQixDQUFDLENBQUMsS0FBYSxFQUFFLFNBQXFCLEVBQUUsRUFBRTtZQUNsRixJQUFJLENBQUMscUJBQXFCLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDdkMsSUFBSSxDQUFDLHNCQUFzQixDQUFDLFVBQVUsRUFBRSxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDOUQsQ0FBQyxDQUEyQixDQUFDO1FBRXJCLGlCQUFZLEdBQUcsQ0FBQyxLQUFhLEVBQUUsU0FBZ0YsRUFB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","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TestRunner = void 0;\r\nconst TestRunner_1 = require(\"./TestRunner\");\r\nObject.defineProperty(exports, \"TestRunner\", { enumerable: true, get: function () { return TestRunner_1.TestRunner; } });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsNkNBQXdDO0FBS2hDLDJGQUxBLHVCQUFVLE9BS0EifQ==","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    else if (a instanceof Date && b instanceof Date) {\r\n        return a.getTime() === b.getTime();\r\n    }\r\n    else if (!exists(a) || !exists(b) || typeof a !== \"object\" && typeof b !== \"object\") {\r\n        return a === b;\r\n    }\r\n    else {\r\n        return deepEqualObject(a, b);\r\n    }\r\n}\r\nexports.deepEqual = deepEqual;\r\nfunction deepEqualObject(a, b) {\r\n    let i;\r\n    let key;\r\n    if (!exists(a) || !exists(b)) {\r\n        return false;\r\n    }\r\n    if (a.prototype !== b.prototype) {\r\n        return false;\r\n    }\r\n    let aKeys;\r\n    let bKeys;\r\n    try {\r\n        aKeys = Object.keys(a);\r\n        bKeys = Object.keys(b);\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n    if (aKeys.length !== bKeys.length) {\r\n        return false;\r\n    }\r\n    aKeys.sort();\r\n    bKeys.sort();\r\n    for (i = aKeys.length - 1; i >= 0; i--) {\r\n        if (aKeys[i] !== bKeys[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    for (i = aKeys.length - 1; i >= 0; i--) {\r\n        key = aKeys[i];\r\n        if (!deepEqual(a[key], b[key])) {\r\n            return false;\r\n        }\r\n    }\r\n    return typeof a === typeof b;\r\n}\r\nfunction exists(value) {\r\n    return value !== null && value !== undefined;\r\n}\r\n//# sourceMappingURL=DeepEqual.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction union(arrayA, arrayB) {\r\n    if (!arrayA) {\r\n        return arrayB ? arrayB : [];\r\n    }\r\n    if (!arrayB) {\r\n        return arrayA;\r\n    }\r\n    for (const item of arrayB) {\r\n        if (arrayA.indexOf(item) === -1) {\r\n            arrayA.push(item);\r\n        }\r\n    }\r\n    return arrayA;\r\n}\r\nexports.union = union;\r\nfunction without(array, item) {\r\n    if (!array) {\r\n        return [];\r\n    }\r\n    const indexOfItem = array.indexOf(item);\r\n    if (indexOfItem !== -1) {\r\n        array.splice(indexOfItem, 1);\r\n    }\r\n    return array;\r\n}\r\nexports.without = without;\r\n//# sourceMappingURL=ArrayUtils.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ArrayUtils_1 = require(\"./ArrayUtils\");\r\nclass SimpleEventEmitter {\r\n    constructor() {\r\n        this.onListeners = {};\r\n        this.onceListeners = {};\r\n    }\r\n    on(event, callback) {\r\n        (this.onListeners[event]) = ArrayUtils_1.union(this.onListeners[event], [callback]);\r\n    }\r\n    once(event, callback) {\r\n        this.onceListeners[event] = ArrayUtils_1.union(this.onceListeners[event], [callback]);\r\n    }\r\n    off(event, callback) {\r\n        this.onListeners[event] = ArrayUtils_1.without(this.onListeners[event], callback);\r\n        this.onceListeners[event] = ArrayUtils_1.without(this.onceListeners[event], callback);\r\n    }\r\n    emit(event, ...args) {\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n    }\r\n    emitAndWaitForCompletion(event, ...args) {\r\n        const promises = [];\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n        return Promise.all(promises).then((results) => {\r\n            return;\r\n        });\r\n    }\r\n}\r\nexports.SimpleEventEmitter = SimpleEventEmitter;\r\n//# sourceMappingURL=SimpleEventEmitter.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass SortedArray {\r\n    constructor(compare = compareDefault, initialValues = []) {\r\n        this.array = [];\r\n        this.compareFunction = compare || compareDefault;\r\n        const length = initialValues.length;\r\n        for (let i = 0; i < length; i++) {\r\n            this.insert(initialValues[i]);\r\n        }\r\n    }\r\n    getData() {\r\n        return this.array;\r\n    }\r\n    insert(element) {\r\n        let foundIndex = this.searchInternal(element) + 1;\r\n        const highestIndex = this.array.length - 1;\r\n        while ((foundIndex < highestIndex) && (this.compareFunction(element, this.array[foundIndex]) === 0)) {\r\n            foundIndex++;\r\n        }\r\n        let index = this.array.length;\r\n        this.array.push(element);\r\n        while (index > foundIndex) {\r\n            this.array[index] = this.array[--index];\r\n        }\r\n        this.array[foundIndex] = element;\r\n    }\r\n    search(element) {\r\n        const foundIndex = this.searchInternal(element);\r\n        if (this.compareFunction(this.array[foundIndex], element) !== 0) {\r\n            return -1;\r\n        }\r\n        return foundIndex;\r\n    }\r\n    remove(element) {\r\n        const index = this.search(element);\r\n        if (index >= 0) {\r\n            this.array.splice(index, 1);\r\n        }\r\n    }\r\n    searchInternal(element) {\r\n        let high = this.array.length - 1;\r\n        let low = 0;\r\n        let index;\r\n        let ordering;\r\n        while (high >= low) {\r\n            index = Math.floor((high + low) / 2);\r\n            ordering = this.compareFunction(this.array[index], element);\r\n            if (ordering < 0) {\r\n                low = index + 1;\r\n            }\r\n            else if (ordering > 0) {\r\n                high = index - 1;\r\n            }\r\n            else {\r\n                return index;\r\n            }\r\n        }\r\n        return high;\r\n    }\r\n}\r\nexports.SortedArray = SortedArray;\r\nfunction compareDefault(a, b) {\r\n    if (a < b) {\r\n        return -1;\r\n    }\r\n    else if (a > b) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n//# sourceMappingURL=SortedArray.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst INTERNAL_MOCKER_NAME = \"__internalMocker\";\r\nexports.INTERNAL_MOCKER_NAME = INTERNAL_MOCKER_NAME;\r\nfunction GetMockerDataSafe(mock) {\r\n    const internalMocker = mock[INTERNAL_MOCKER_NAME];\r\n    return internalMocker !== null && internalMocker !== void 0 ? internalMocker : null;\r\n}\r\nfunction printObject(object) {\r\n    if (object === null) {\r\n        return \"null\";\r\n    }\r\n    if (object === undefined) {\r\n        return \"undefined\";\r\n    }\r\n    if (object instanceof RegExp) {\r\n        return object.toString();\r\n    }\r\n    const mockerData = GetMockerDataSafe(object);\r\n    if (mockerData !== null) {\r\n        return mockerData.mockName;\r\n    }\r\n    return JSON.stringify(object);\r\n}\r\nexports.printObject = printObject;\r\n//# sourceMappingURL=Stringify.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst DeepEqual_1 = require(\"./DeepEqual\");\r\nconst Stringify_1 = require(\"./Stringify\");\r\nfunction any() {\r\n    const validator = {\r\n        precedence: -1,\r\n        matches: () => true,\r\n        description: () => \"any()\",\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.any = any;\r\nfunction gt(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue > value),\r\n        description: () => `gt(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.gt = gt;\r\nfunction lt(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue < value),\r\n        description: () => `lt(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.lt = lt;\r\nfunction gte(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue >= value),\r\n        description: () => `gte(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.gte = gte;\r\nfunction lte(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue <= value),\r\n        description: () => `lte(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.lte = lte;\r\nfunction eq(value) {\r\n    const validator = {\r\n        precedence: 1,\r\n        matches: ((realValue) => DeepEqual_1.deepEqual(value, realValue)),\r\n        description: () => Stringify_1.printObject(value),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.eq = eq;\r\nfunction startsWith(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue.startsWith(value)),\r\n        description: () => \"startsWith \" + value,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.startsWith = startsWith;\r\nfunction regexMatches(value) {\r\n    const validator = {\r\n        matches: ((realValue) => value.test(realValue)),\r\n        description: () => value.toString(),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.regexMatches = regexMatches;\r\nfunction matcher(func) {\r\n    const validator = {\r\n        matches: (realValue) => func(realValue),\r\n        description: () => func.toString(),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.matcher = matcher;\r\n//# sourceMappingURL=ArgumentValidator.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst DeepEqual_1 = require(\"./DeepEqual\");\r\nexports.deepEqual = DeepEqual_1.deepEqual;\r\nconst SimpleEventEmitter_1 = require(\"./SimpleEventEmitter\");\r\nexports.SimpleEventEmitter = SimpleEventEmitter_1.SimpleEventEmitter;\r\nconst SortedArray_1 = require(\"./SortedArray\");\r\nexports.SortedArray = SortedArray_1.SortedArray;\r\nconst ArgumentValidator_1 = require(\"./ArgumentValidator\");\r\nexports.any = ArgumentValidator_1.any;\r\nexports.eq = ArgumentValidator_1.eq;\r\nexports.gt = ArgumentValidator_1.gt;\r\nexports.gte = ArgumentValidator_1.gte;\r\nexports.lt = ArgumentValidator_1.lt;\r\nexports.lte = ArgumentValidator_1.lte;\r\nexports.matcher = ArgumentValidator_1.matcher;\r\nexports.regexMatches = ArgumentValidator_1.regexMatches;\r\nexports.startsWith = ArgumentValidator_1.startsWith;\r\nconst Stringify_1 = require(\"./Stringify\");\r\nexports.INTERNAL_MOCKER_NAME = Stringify_1.INTERNAL_MOCKER_NAME;\r\nexports.printObject = Stringify_1.printObject;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nclass AssertionError extends Error {\r\n    constructor(ourMessage, theirMessage) {\r\n        const message = theirMessage ? ourMessage + \"\\n\" + theirMessage : ourMessage;\r\n        super(message);\r\n    }\r\n}\r\nclass assert {\r\n    static that(output) {\r\n    }\r\n    static equal(expected, actual, message) {\r\n        if (umbra_util_1.deepEqual(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to deeply equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static notEqual(expected, actual, message) {\r\n        if (!umbra_util_1.deepEqual(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to not deeply equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static looseEqual(actual, expected, message) {\r\n        if (expected == actual) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} == ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static notLooseEqual(actual, expected, message) {\r\n        if (expected != actual) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} != ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static strictEqual(actual, expected, message) {\r\n        if (Object.is(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to strictly equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static notStrictEqual(actual, expected, message) {\r\n        if (!Object.is(expected, actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to not strictly equal ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static is(actual, expected, message) {\r\n        assert.strictEqual(actual, expected, message);\r\n    }\r\n    static has(target, keyPath, expected, message) {\r\n        assert.exists(target, \"target\");\r\n        assert.exists(keyPath, \"keyPath\");\r\n        assert.exists(target, \"target\");\r\n        const pathArray = keyPath.split(\".\");\r\n        let result = target;\r\n        for (const path of pathArray) {\r\n            const newResult = result[path];\r\n            if (!newResult) {\r\n                assert.fail(`Missing key \"${path}\" in object ${umbra_util_1.printObject(result)}\\nAvailable keys: ${umbra_util_1.printObject(Object.keys(expected))}`);\r\n            }\r\n            result = newResult;\r\n        }\r\n        assert.strictEqual(result, expected, message);\r\n    }\r\n    static regexMatches(actual, expected, message) {\r\n        if (expected.test(actual)) {\r\n            return;\r\n        }\r\n        throw new AssertionError(`Expected ${umbra_util_1.printObject(actual)} to match the regex ${umbra_util_1.printObject(expected)}`, message);\r\n    }\r\n    static resolvesTo(actual, expected, message) {\r\n        return actual\r\n            .then((actualValue) => {\r\n            assert.equal(actualValue, expected);\r\n        }, (e) => {\r\n            throw new AssertionError(`Promise should not have successfully resolved.\\nException: ${e}\\n`, message);\r\n        });\r\n    }\r\n    static rejects(actual, expected, message) {\r\n        const errorMessage = expected instanceof Error ? expected.message : expected;\r\n        return actual\r\n            .then(() => {\r\n            throw new AssertionError(\"Promise should not have successfully resolved\", message);\r\n        }, (e) => {\r\n            if (errorMessage) {\r\n                assert.equal(errorMessage, e.message);\r\n            }\r\n        });\r\n    }\r\n    static fail(message) {\r\n        throw new AssertionError(\"Test failed\", message);\r\n    }\r\n    static isTrue(value, message) {\r\n        assert.equal(true, value, message);\r\n    }\r\n    static isFalse(value, message) {\r\n        assert.equal(false, value, message);\r\n    }\r\n    static isTruthy(value, message) {\r\n        if (!value) {\r\n            throw new AssertionError(`Expected ${value} to be truthy`, message);\r\n        }\r\n    }\r\n    static isFalsy(value, message) {\r\n        if (value) {\r\n            throw new AssertionError(`Expected ${value} to be falsy`, message);\r\n        }\r\n    }\r\n    static exists(expected, message) {\r\n        this.notEqual(expected, null, `Expected ${umbra_util_1.printObject(expected)} to not be null. ${message}`);\r\n        this.notEqual(expected, undefined, `Expected ${umbra_util_1.printObject(expected)} to not be undefined. ${message}`);\r\n        return true;\r\n    }\r\n    static contains(target, value, message) {\r\n        this.exists(target);\r\n        if (typeof target === \"string\") {\r\n            assert.isTrue(target.indexOf(value) !== -1, `String: ${value} was not found in ${target}`);\r\n        }\r\n        else if (Array.isArray(target)) {\r\n            assert.isTrue(target.indexOf(value) !== -1, `${umbra_util_1.printObject(value)} was not found in target array ${umbra_util_1.printObject(target)}. ${message !== null && message !== void 0 ? message : \"\"}`);\r\n        }\r\n        else {\r\n            for (const [entryKey, entryValue] of Object.entries(value)) {\r\n                assert.equal(target[entryKey], entryValue);\r\n            }\r\n        }\r\n    }\r\n    static containsAll(target, values, message) {\r\n        this.exists(target);\r\n        this.exists(values);\r\n        for (const value of values) {\r\n            assert.contains(target, value, message);\r\n        }\r\n    }\r\n}\r\nexports.assert = assert;\r\n//# sourceMappingURL=Assert.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Assert_1 = require(\"./Assert\");\r\nclass Expect {\r\n    constructor(target) {\r\n        this.target = target;\r\n    }\r\n    toBe(value) {\r\n        Assert_1.assert.equal(this.target, value);\r\n    }\r\n    toHaveProperty(keyPath, value) {\r\n        Assert_1.assert.has(this.target, keyPath, value);\r\n    }\r\n    toBeTruthy() {\r\n        Assert_1.assert.isTruthy(this.target);\r\n    }\r\n    toBeFalsy() {\r\n        Assert_1.assert.isFalsy(this.target);\r\n    }\r\n}\r\nexports.Expect = Expect;\r\nfunction expect(target) {\r\n    return new Expect(target);\r\n}\r\nexports.expect = expect;\r\n//# sourceMappingURL=Expect.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Assert_1 = require(\"./Assert\");\r\nexports.assert = Assert_1.assert;\r\nconst Expect_1 = require(\"./Expect\");\r\nexports.Expect = Expect_1.Expect;\r\nexports.expect = Expect_1.expect;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.deepEqual = void 0;\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    else if (a instanceof Date && b instanceof Date) {\r\n        return a.getTime() === b.getTime();\r\n    }\r\n    else if (!exists(a) || !exists(b) || typeof a !== \"object\" && typeof b !== \"object\") {\r\n        return a === b;\r\n    }\r\n    else {\r\n        return deepEqualObject(a, b);\r\n    }\r\n}\r\nexports.deepEqual = deepEqual;\r\nfunction deepEqualObject(a, b) {\r\n    let i;\r\n    let key;\r\n    if (!exists(a) || !exists(b)) {\r\n        return false;\r\n    }\r\n    if (a.prototype !== b.prototype) {\r\n        return false;\r\n    }\r\n    let aKeys;\r\n    let bKeys;\r\n    try {\r\n        aKeys = Object.keys(a);\r\n        bKeys = Object.keys(b);\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n    if (aKeys.length !== bKeys.length) {\r\n        return false;\r\n    }\r\n    aKeys.sort();\r\n    bKeys.sort();\r\n    for (i = aKeys.length - 1; i >= 0; i--) {\r\n        if (aKeys[i] !== bKeys[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    for (i = aKeys.length - 1; i >= 0; i--) {\r\n        key = aKeys[i];\r\n        if (!deepEqual(a[key], b[key])) {\r\n            return false;\r\n        }\r\n    }\r\n    return typeof a === typeof b;\r\n}\r\nfunction exists(value) {\r\n    return value !== null && value !== undefined;\r\n}\r\n//# sourceMappingURL=DeepEqual.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.without = exports.union = void 0;\r\nfunction union(arrayA, arrayB) {\r\n    if (!arrayA) {\r\n        return arrayB ? arrayB : [];\r\n    }\r\n    if (!arrayB) {\r\n        return arrayA;\r\n    }\r\n    for (const item of arrayB) {\r\n        if (arrayA.indexOf(item) === -1) {\r\n            arrayA.push(item);\r\n        }\r\n    }\r\n    return arrayA;\r\n}\r\nexports.union = union;\r\nfunction without(array, item) {\r\n    if (!array) {\r\n        return [];\r\n    }\r\n    const indexOfItem = array.indexOf(item);\r\n    if (indexOfItem !== -1) {\r\n        array.splice(indexOfItem, 1);\r\n    }\r\n    return array;\r\n}\r\nexports.without = without;\r\n//# sourceMappingURL=ArrayUtils.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SimpleEventEmitter = void 0;\r\nconst ArrayUtils_1 = require(\"./ArrayUtils\");\r\nclass SimpleEventEmitter {\r\n    constructor() {\r\n        this.onListeners = {};\r\n        this.onceListeners = {};\r\n    }\r\n    on(event, callback) {\r\n        (this.onListeners[event]) = ArrayUtils_1.union(this.onListeners[event], [callback]);\r\n    }\r\n    once(event, callback) {\r\n        this.onceListeners[event] = ArrayUtils_1.union(this.onceListeners[event], [callback]);\r\n    }\r\n    off(event, callback) {\r\n        this.onListeners[event] = ArrayUtils_1.without(this.onListeners[event], callback);\r\n        this.onceListeners[event] = ArrayUtils_1.without(this.onceListeners[event], callback);\r\n    }\r\n    emit(event, ...args) {\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                callback.call(null, ...args);\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n    }\r\n    emitAndWaitForCompletion(event, ...args) {\r\n        const promises = [];\r\n        if (this.onListeners[event]) {\r\n            for (const callback of this.onListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n        }\r\n        if (this.onceListeners[event] && this.onceListeners[event].length > 0) {\r\n            for (const callback of this.onceListeners[event]) {\r\n                try {\r\n                    promises.push(Promise.resolve(callback.call(null, ...args)));\r\n                }\r\n                catch (e) {\r\n                    promises.push(Promise.reject(e));\r\n                }\r\n            }\r\n            this.onceListeners[event] = [];\r\n        }\r\n        return Promise.all(promises).then((results) => {\r\n            return;\r\n        });\r\n    }\r\n}\r\nexports.SimpleEventEmitter = SimpleEventEmitter;\r\n//# sourceMappingURL=SimpleEventEmitter.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SortedArray = void 0;\r\nclass SortedArray {\r\n    constructor(compare = compareDefault, initialValues = []) {\r\n        this.array = [];\r\n        this.compareFunction = compare || compareDefault;\r\n        const length = initialValues.length;\r\n        for (let i = 0; i < length; i++) {\r\n            this.insert(initialValues[i]);\r\n        }\r\n    }\r\n    getData() {\r\n        return this.array;\r\n    }\r\n    insert(element) {\r\n        let foundIndex = this.searchInternal(element) + 1;\r\n        const highestIndex = this.array.length - 1;\r\n        while ((foundIndex < highestIndex) && (this.compareFunction(element, this.array[foundIndex]) === 0)) {\r\n            foundIndex++;\r\n        }\r\n        let index = this.array.length;\r\n        this.array.push(element);\r\n        while (index > foundIndex) {\r\n            this.array[index] = this.array[--index];\r\n        }\r\n        this.array[foundIndex] = element;\r\n    }\r\n    search(element) {\r\n        const foundIndex = this.searchInternal(element);\r\n        if (this.compareFunction(this.array[foundIndex], element) !== 0) {\r\n            return -1;\r\n        }\r\n        return foundIndex;\r\n    }\r\n    remove(element) {\r\n        const index = this.search(element);\r\n        if (index >= 0) {\r\n            this.array.splice(index, 1);\r\n        }\r\n    }\r\n    searchInternal(element) {\r\n        let high = this.array.length - 1;\r\n        let low = 0;\r\n        let index;\r\n        let ordering;\r\n        while (high >= low) {\r\n            index = Math.floor((high + low) / 2);\r\n            ordering = this.compareFunction(this.array[index], element);\r\n            if (ordering < 0) {\r\n                low = index + 1;\r\n            }\r\n            else if (ordering > 0) {\r\n                high = index - 1;\r\n            }\r\n            else {\r\n                return index;\r\n            }\r\n        }\r\n        return high;\r\n    }\r\n}\r\nexports.SortedArray = SortedArray;\r\nfunction compareDefault(a, b) {\r\n    if (a < b) {\r\n        return -1;\r\n    }\r\n    else if (a > b) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n//# sourceMappingURL=SortedArray.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.INTERNAL_MOCKER_NAME = exports.printObject = void 0;\r\nconst INTERNAL_MOCKER_NAME = \"__internalMocker\";\r\nexports.INTERNAL_MOCKER_NAME = INTERNAL_MOCKER_NAME;\r\nfunction GetMockerDataSafe(mock) {\r\n    const internalMocker = mock[INTERNAL_MOCKER_NAME];\r\n    return internalMocker !== null && internalMocker !== void 0 ? internalMocker : null;\r\n}\r\nfunction printObject(object) {\r\n    if (object === null) {\r\n        return \"null\";\r\n    }\r\n    if (object === undefined) {\r\n        return \"undefined\";\r\n    }\r\n    if (object instanceof RegExp) {\r\n        return object.toString();\r\n    }\r\n    const mockerData = GetMockerDataSafe(object);\r\n    if (mockerData !== null) {\r\n        return mockerData.mockName;\r\n    }\r\n    return JSON.stringify(object);\r\n}\r\nexports.printObject = printObject;\r\n//# sourceMappingURL=Stringify.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.matcher = exports.regexMatches = exports.startsWith = exports.lte = exports.lt = exports.gte = exports.gt = exports.eq = exports.any = void 0;\r\nconst DeepEqual_1 = require(\"./DeepEqual\");\r\nconst Stringify_1 = require(\"./Stringify\");\r\nfunction any() {\r\n    const validator = {\r\n        precedence: -1,\r\n        matches: () => true,\r\n        description: () => \"any()\",\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.any = any;\r\nfunction gt(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue > value),\r\n        description: () => `gt(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.gt = gt;\r\nfunction lt(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue < value),\r\n        description: () => `lt(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.lt = lt;\r\nfunction gte(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue >= value),\r\n        description: () => `gte(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.gte = gte;\r\nfunction lte(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue <= value),\r\n        description: () => `lte(${Stringify_1.printObject(value)})`,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.lte = lte;\r\nfunction eq(value) {\r\n    const validator = {\r\n        precedence: 1,\r\n        matches: ((realValue) => DeepEqual_1.deepEqual(value, realValue)),\r\n        description: () => Stringify_1.printObject(value),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.eq = eq;\r\nfunction startsWith(value) {\r\n    const validator = {\r\n        matches: ((realValue) => realValue.startsWith(value)),\r\n        description: () => \"startsWith \" + value,\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.startsWith = startsWith;\r\nfunction regexMatches(value) {\r\n    const validator = {\r\n        matches: ((realValue) => value.test(realValue)),\r\n        description: () => value.toString(),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.regexMatches = regexMatches;\r\nfunction matcher(func) {\r\n    const validator = {\r\n        matches: (realValue) => func(realValue),\r\n        description: () => func.toString(),\r\n        equals: (other) => other.description() === validator.description()\r\n    };\r\n    return validator;\r\n}\r\nexports.matcher = matcher;\r\n//# sourceMappingURL=ArgumentValidator.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.printObject = exports.INTERNAL_MOCKER_NAME = exports.startsWith = exports.regexMatches = exports.matcher = exports.lte = exports.lt = exports.gte = exports.gt = exports.eq = exports.any = exports.SimpleEventEmitter = exports.SortedArray = exports.deepEqual = void 0;\r\nconst DeepEqual_1 = require(\"./DeepEqual\");\r\nObject.defineProperty(exports, \"deepEqual\", { enumerable: true, get: function () { return DeepEqual_1.deepEqual; } });\r\nconst SimpleEventEmitter_1 = require(\"./SimpleEventEmitter\");\r\nObject.defineProperty(exports, \"SimpleEventEmitter\", { enumerable: true, get: function () { return SimpleEventEmitter_1.SimpleEventEmitter; } });\r\nconst SortedArray_1 = require(\"./SortedArray\");\r\nObject.defineProperty(exports, \"SortedArray\", { enumerable: true, get: function () { return SortedArray_1.SortedArray; } });\r\nconst ArgumentValidator_1 = require(\"./ArgumentValidator\");\r\nObject.defineProperty(exports, \"any\", { enumerable: true, get: function () { return ArgumentValidator_1.any; } });\r\nObject.defineProperty(exports, \"eq\", { enumerable: true, get: function () { return ArgumentValidator_1.eq; } });\r\nObject.defineProperty(exports, \"gt\", { enumerable: true, get: function () { return ArgumentValidator_1.gt; } });\r\nObject.defineProperty(exports, \"gte\", { enumerable: true, get: function () { return ArgumentValidator_1.gte; } });\r\nObject.defineProperty(exports, \"lt\", { enumerable: true, get: function () { return ArgumentValidator_1.lt; } });\r\nObject.defineProperty(exports, \"lte\", { enumerable: true, get: function () { return ArgumentValidator_1.lte; } });\r\nObject.defineProperty(exports, \"matcher\", { enumerable: true, get: function () { return ArgumentValidator_1.matcher; } });\r\nObject.defineProperty(exports, \"regexMatches\", { enumerable: true, get: function () { return ArgumentValidator_1.regexMatches; } });\r\nObject.defineProperty(exports, \"startsWith\", { enumerable: true, get: function () { return ArgumentValidator_1.startsWith; } });\r\nconst Stringify_1 = require(\"./Stringify\");\r\nObject.defineProperty(exports, \"INTERNAL_MOCKER_NAME\", { enumerable: true, get: function () { return Stringify_1.INTERNAL_MOCKER_NAME; } });\r\nObject.defineProperty(exports, \"printObject\", { enumerable: true, get: function () { return Stringify_1.printObject; } });\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.newCapture = void 0;\r\nclass CaptureInternal {\r\n    constructor() {\r\n        this.all = [];\r\n    }\r\n    get first() {\r\n        if (this.all.length === 0) {\r\n            return null;\r\n        }\r\n        return this.all[0];\r\n    }\r\n    get last() {\r\n        if (this.all.length === 0) {\r\n            return null;\r\n        }\r\n        return this.all[this.all.length - 1];\r\n    }\r\n    matches(arg) {\r\n        this.all.push(arg);\r\n        return true;\r\n    }\r\n    description() {\r\n        if (this.all.length === 0) {\r\n            return \"Argument captor. No arguments captured\";\r\n        }\r\n        return \"Argument captor. Currently captured args: \" + this.all;\r\n    }\r\n    equals(other) {\r\n        if (other instanceof CaptureInternal) {\r\n            return other.all === this.all;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nfunction newCapture() {\r\n    return new CaptureInternal();\r\n}\r\nexports.newCapture = newCapture;\r\n//# sourceMappingURL=Capture.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.INTERNAL_MOCKER_NAME = exports.GetInternalMockerSafe = exports.GetInternalMocker = exports.CreateInternalMocker = void 0;\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nObject.defineProperty(exports, \"INTERNAL_MOCKER_NAME\", { enumerable: true, get: function () { return umbra_util_1.INTERNAL_MOCKER_NAME; } });\r\nfunction GetInternalMockerSafe(mock) {\r\n    const internalMocker = mock[umbra_util_1.INTERNAL_MOCKER_NAME];\r\n    return internalMocker !== null && internalMocker !== void 0 ? internalMocker : null;\r\n}\r\nexports.GetInternalMockerSafe = GetInternalMockerSafe;\r\nfunction GetInternalMocker(mock) {\r\n    const internalMocker = GetInternalMockerSafe(mock);\r\n    if (internalMocker === null) {\r\n        throw new Error(`Passed an object that was not a mock. Object: ${mock.toString()}`);\r\n    }\r\n    return internalMocker;\r\n}\r\nexports.GetInternalMocker = GetInternalMocker;\r\nfunction CreateInternalMocker(mockedFunction, realFunction, mockName, options) {\r\n    const internalMocker = {\r\n        expectations: [],\r\n        recordedInvocations: [],\r\n        realFunction: realFunction,\r\n        options: options,\r\n        inProgressInOrder: [],\r\n        isInExpectation: false,\r\n        mockName: mockName !== null && mockName !== void 0 ? mockName : \"mock\"\r\n    };\r\n    mockedFunction[umbra_util_1.INTERNAL_MOCKER_NAME] = internalMocker;\r\n    return internalMocker;\r\n}\r\nexports.CreateInternalMocker = CreateInternalMocker;\r\n//# sourceMappingURL=InternalMocker.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StacktraceUtils = void 0;\r\nclass StacktraceUtils {\r\n    static getCurrentMockLocation(depth) {\r\n        const stackTrace = new Error().stack;\r\n        if (stackTrace === undefined) {\r\n            return null;\r\n        }\r\n        const stackTraceLines = stackTrace.split(\"\\n\");\r\n        if (stackTraceLines.length < depth + 2) {\r\n            return null;\r\n        }\r\n        const callingLocation = stackTraceLines[depth + 1];\r\n        const matches = /.*?\\((.*?)\\)/.exec(callingLocation);\r\n        if (matches === null) {\r\n            return null;\r\n        }\r\n        return matches[1];\r\n    }\r\n}\r\nexports.StacktraceUtils = StacktraceUtils;\r\n//# sourceMappingURL=StackTraceParser.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.verifyArgumentMatcher = exports.findBestArgumentMatcher = exports.createMockedFunction = void 0;\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nconst InternalMocker_1 = require(\"./InternalMocker\");\r\nconst Mock_1 = require(\"./Mock\");\r\nconst StackTraceParser_1 = require(\"./StackTraceParser\");\r\nfunction findBestArgumentMatcher(expectations, args) {\r\n    const argumentMatcherArray = new umbra_util_1.SortedArray((a, b) => {\r\n        if (a === undefined && b === undefined) {\r\n            return 0;\r\n        }\r\n        else if (a === undefined) {\r\n            return 1;\r\n        }\r\n        else if (b === undefined) {\r\n            return -1;\r\n        }\r\n        if (a.inOrderOverride !== null && b.inOrderOverride == null) {\r\n            return -1;\r\n        }\r\n        if (a.inOrderOverride === null && b.inOrderOverride !== null) {\r\n            return 1;\r\n        }\r\n        if (a.expectedArgs === null && b.expectedArgs === null) {\r\n            return 0;\r\n        }\r\n        else if (a.expectedArgs === null) {\r\n            return 1;\r\n        }\r\n        else if (b.expectedArgs === null) {\r\n            return -1;\r\n        }\r\n        const argLengthDifference = b.expectedArgs.length - a.expectedArgs.length;\r\n        if (argLengthDifference !== 0) {\r\n            return argLengthDifference;\r\n        }\r\n        const aMatcherPrecedence = sumMatchers(a.expectedArgs);\r\n        const bMatcherPrecedence = sumMatchers(b.expectedArgs);\r\n        return bMatcherPrecedence - aMatcherPrecedence;\r\n    });\r\n    for (const expectation of expectations) {\r\n        argumentMatcherArray.insert(expectation);\r\n    }\r\n    for (const expectation of argumentMatcherArray.getData()) {\r\n        if (expectation.callCount >= expectation.expectedRange.end) {\r\n            continue;\r\n        }\r\n        const expectedArgs = expectation.expectedArgs;\r\n        const isValid = verifyArgumentMatcher(expectedArgs, args);\r\n        if (isValid) {\r\n            return expectation;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.findBestArgumentMatcher = findBestArgumentMatcher;\r\nfunction sumMatchers(expectedArgs) {\r\n    let sum = 0;\r\n    for (const arg of expectedArgs) {\r\n        sum += arg.precedence !== undefined ? arg.precedence : 0;\r\n    }\r\n    return sum;\r\n}\r\nfunction verifyArgumentMatcher(expectedArgs, args) {\r\n    if (expectedArgs === null) {\r\n        return true;\r\n    }\r\n    if (args.length < expectedArgs.length) {\r\n        return false;\r\n    }\r\n    let isValid = true;\r\n    if (expectedArgs.length === 0) {\r\n        isValid = args.length === 0;\r\n    }\r\n    for (let i = 0; i < expectedArgs.length; i++) {\r\n        const argumentValidator = expectedArgs[i];\r\n        const arg = args[i];\r\n        isValid = isValid && argumentValidator.matches(arg);\r\n    }\r\n    return isValid;\r\n}\r\nexports.verifyArgumentMatcher = verifyArgumentMatcher;\r\nconst defaultExpectationOptions = { includeLocation: true };\r\nfunction buildExpectationString(expectation, options = defaultExpectationOptions) {\r\n    const mockedFuncName = expectation.internalMocker.mockName || \"mock\";\r\n    let argsString = `\\t${mockedFuncName}`;\r\n    if (expectation.expectedArgs === null) {\r\n        argsString += `() with any arguments`;\r\n    }\r\n    else {\r\n        const argData = [];\r\n        for (const argumentValdiatorArg of expectation.expectedArgs) {\r\n            if (argumentValdiatorArg.description) {\r\n                argData.push(argumentValdiatorArg.description());\r\n            }\r\n            else {\r\n                argData.push(argumentValdiatorArg.toString());\r\n            }\r\n        }\r\n        argsString += `(${argData.join(\", \")})`;\r\n    }\r\n    argsString += `. Expected ${expectation.expectedRange.describeRange()}, so far ${expectation.callCount}.`;\r\n    if (options.includeLocation) {\r\n        argsString += `\\n\\tExpectation set at ${expectation.location}`;\r\n    }\r\n    return argsString + \"\\n\";\r\n}\r\nfunction createMockedFunction() {\r\n    const mock = (...args) => {\r\n        const internalMocker = InternalMocker_1.GetInternalMocker(mockedFunc);\r\n        const currentLocation = StackTraceParser_1.StacktraceUtils.getCurrentMockLocation(2);\r\n        internalMocker.recordedInvocations.push({\r\n            params: args,\r\n            location: currentLocation\r\n        });\r\n        const expectationData = findBestArgumentMatcher(internalMocker.expectations, args);\r\n        if (expectationData !== null) {\r\n            if (expectationData.inOrderOverride) {\r\n                const inOrderOverride = expectationData.inOrderOverride;\r\n                const expectedInvocation = inOrderOverride.expectations[inOrderOverride.currentIndex];\r\n                if (expectedInvocation !== expectationData) {\r\n                    const expectedInvocationString = buildExpectationString(expectedInvocation);\r\n                    throw new Error(`Out of order method call.\\nExpected:\\n${expectedInvocationString}\\n` +\r\n                        `Actual:\\n${buildExpectationString(expectationData, { includeLocation: false })}` +\r\n                        `\\tCalled at ${currentLocation}`);\r\n                }\r\n                else {\r\n                    if (inOrderOverride.currentIndex === 0) {\r\n                        internalMocker.inProgressInOrder.push(inOrderOverride);\r\n                    }\r\n                    inOrderOverride.currentIndex++;\r\n                    if (inOrderOverride.currentIndex > inOrderOverride.expectations.length) {\r\n                        const inProgressIndex = internalMocker.inProgressInOrder.indexOf(inOrderOverride);\r\n                        if (inProgressIndex === -1) {\r\n                            throw new Error(\"Could not find in progress index\");\r\n                        }\r\n                        internalMocker.inProgressInOrder.splice(inProgressIndex, 1);\r\n                    }\r\n                }\r\n            }\r\n            else if (internalMocker.inProgressInOrder.length > 0) {\r\n                throw new Error(`Out of order method call.`);\r\n            }\r\n            expectationData.callCount++;\r\n            if (!expectationData.answer) {\r\n                return undefined;\r\n            }\r\n            const result = expectationData.answer(...args);\r\n            return result;\r\n        }\r\n        if (internalMocker.options.strictMode === Mock_1.StrictnessMode.Strict) {\r\n            let expectations = \"\";\r\n            for (const expectation of internalMocker.expectations) {\r\n                expectations += buildExpectationString(expectation) + \"\\n\";\r\n            }\r\n            expectations = expectations ? `\\nExpectations:\\n${expectations}\\u00A0` : \"\";\r\n            const wording = internalMocker.expectations.length > 0 ? \"matched\" : \"was set\";\r\n            const argsStringified = [];\r\n            for (const arg of args) {\r\n                argsStringified.push(umbra_util_1.printObject(arg));\r\n            }\r\n            const argsText = argsStringified.join(\", \");\r\n            throw new Error(`${mockedFunc.name}(${argsText}) was called but no expectation ${wording}.${expectations}`);\r\n        }\r\n        return null;\r\n    };\r\n    const mockedFunc = mock;\r\n    return mockedFunc;\r\n}\r\nexports.createMockedFunction = createMockedFunction;\r\n//# sourceMappingURL=MockedFunction.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Range = void 0;\r\nclass Range {\r\n    constructor(start, end = start) {\r\n        if (start < 0) {\r\n            throw new Error(`Start value must be >= 0. Received ${start}`);\r\n        }\r\n        if (end < 1) {\r\n            throw Error(`End value must be >= 1. Received ${end}`);\r\n        }\r\n        if (start > end) {\r\n            throw new Error(`Start must be <= end. Start: ${start} End: ${end}`);\r\n        }\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    isFixedRange() {\r\n        return this.start === this.end;\r\n    }\r\n    isInRange(count) {\r\n        return count >= this.start && count <= this.end;\r\n    }\r\n    hasNoUpperBound() {\r\n        return this.end === Number.MAX_SAFE_INTEGER;\r\n    }\r\n    describeRange() {\r\n        if (this.isFixedRange()) {\r\n            return `${this.start} invocations`;\r\n        }\r\n        if (this.hasNoUpperBound()) {\r\n            return `at least ${this.start} invocations`;\r\n        }\r\n        return `between ${this.start} and ${this.end} invocations`;\r\n    }\r\n}\r\nexports.Range = Range;\r\n//# sourceMappingURL=Range.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.normalizeMatcherArgs = exports.OnGoingStubs = void 0;\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nconst umbra_assert_1 = require(\"umbra-assert\");\r\nconst InternalMocker_1 = require(\"./InternalMocker\");\r\nconst Range_1 = require(\"./Range\");\r\nconst StackTraceParser_1 = require(\"./StackTraceParser\");\r\nfunction createDirectReturnAnswer(value) {\r\n    return function directReturnAnswer() {\r\n        return value;\r\n    };\r\n}\r\nfunction createDirectThrowAnswer(error) {\r\n    return function directThrowAnswer() {\r\n        throw error;\r\n    };\r\n}\r\nfunction createCallRealMethodAnwser(realFunction) {\r\n    return function realMethodAnswer(...args) {\r\n        return realFunction(args);\r\n    };\r\n}\r\nfunction createPromiseResolveAnswer(value) {\r\n    return function directReturnAnswer() {\r\n        return Promise.resolve(value);\r\n    };\r\n}\r\nfunction createPromiseRejectAnswer(error) {\r\n    return function directReturnAnswer() {\r\n        return Promise.reject(error);\r\n    };\r\n}\r\nfunction normalizeMatcherArgs(args) {\r\n    const normalizedArgs = [];\r\n    for (const arg of args) {\r\n        const argMatcher = InternalMocker_1.GetInternalMockerSafe(arg) === null && typeof arg.matches === \"function\" ? arg : umbra_util_1.eq(arg);\r\n        normalizedArgs.push(argMatcher);\r\n    }\r\n    return normalizedArgs;\r\n}\r\nexports.normalizeMatcherArgs = normalizeMatcherArgs;\r\nconst NOT_SET = -1;\r\nclass OnGoingStubs extends umbra_assert_1.Expect {\r\n    constructor(mockedFunction) {\r\n        super(mockedFunction);\r\n        this.atMostCount = NOT_SET;\r\n        this.atLeastCount = NOT_SET;\r\n        this.timesCount = NOT_SET;\r\n        this.internalMocker = InternalMocker_1.GetInternalMocker(mockedFunction);\r\n        this.currentArgumentExpectations = null;\r\n        this.internalMocker.isInExpectation = true;\r\n        const expectation = {\r\n            internalMocker: this.internalMocker,\r\n            expectedRange: new Range_1.Range(1),\r\n            location: StackTraceParser_1.StacktraceUtils.getCurrentMockLocation(3),\r\n            answer: null,\r\n            expectedArgs: this.currentArgumentExpectations,\r\n            callCount: 0,\r\n            inOrderOverride: null,\r\n        };\r\n        this.internalMocker.expectations.push(expectation);\r\n        this.expectation = expectation;\r\n    }\r\n    getExpectation() {\r\n        return this.expectation;\r\n    }\r\n    withArgs(...args) {\r\n        this.currentArgumentExpectations = normalizeMatcherArgs(args);\r\n        this.expectation.expectedArgs = this.currentArgumentExpectations;\r\n        return this;\r\n    }\r\n    andReturn(value) {\r\n        this.expectation.answer = createDirectReturnAnswer(value);\r\n        return this;\r\n    }\r\n    andStubReturn(value) {\r\n        this.expectation.answer = createDirectReturnAnswer(value);\r\n        this.atLeast(0);\r\n    }\r\n    andThrow(error) {\r\n        this.expectation.answer = createDirectThrowAnswer(error);\r\n        return this;\r\n    }\r\n    andCallRealMethod() {\r\n        const realFunction = this.internalMocker.realFunction;\r\n        if (!realFunction) {\r\n            throw new Error(\"No function was available. Ensure a real object was passed to the spy\");\r\n        }\r\n        this.expectation.answer = createCallRealMethodAnwser(realFunction);\r\n        return this;\r\n    }\r\n    andAnswer(answer) {\r\n        this.expectation.answer = answer;\r\n        return this;\r\n    }\r\n    andResolve(value) {\r\n        this.expectation.answer = createPromiseResolveAnswer(value);\r\n        return this;\r\n    }\r\n    andReject(error) {\r\n        this.expectation.answer = createPromiseRejectAnswer(error);\r\n        return this;\r\n    }\r\n    times(count) {\r\n        if (this.timesCount !== NOT_SET || this.atLeastCount !== NOT_SET || this.atMostCount !== NOT_SET) {\r\n            throw new Error(\"Previously set expectation count, value must only be set once\");\r\n        }\r\n        this.timesCount = count;\r\n        this.setExpectedRange(new Range_1.Range(count));\r\n        return this;\r\n    }\r\n    once() {\r\n        return this.times(1);\r\n    }\r\n    twice() {\r\n        return this.times(2);\r\n    }\r\n    atMost(atMostInvocations) {\r\n        if (this.timesCount !== NOT_SET || (this.atMostCount !== NOT_SET && this.atMostCount !== Number.MAX_SAFE_INTEGER)) {\r\n            throw new Error(\"Previously set expectation count, value must only be set once\");\r\n        }\r\n        this.atMostCount = atMostInvocations;\r\n        this.atLeastCount = this.atLeastCount !== NOT_SET ? this.atLeastCount : 0;\r\n        this.setExpectedRange(new Range_1.Range(this.atLeastCount, this.atMostCount));\r\n        return this;\r\n    }\r\n    atLeast(atLeastInvocations) {\r\n        if (this.timesCount !== NOT_SET || (this.atLeastCount !== NOT_SET && this.atLeastCount !== 0)) {\r\n            throw new Error(\"Previously set expectation count, value must only be set once\");\r\n        }\r\n        this.atLeastCount = atLeastInvocations;\r\n        this.atMostCount = this.atMostCount !== NOT_SET ? this.atMostCount : Number.MAX_SAFE_INTEGER;\r\n        this.setExpectedRange(new Range_1.Range(this.atLeastCount, this.atMostCount));\r\n        return this;\r\n    }\r\n    setExpectedRange(range) {\r\n        const expectations = this.internalMocker.expectations;\r\n        if (expectations.length > 1 && range.isFixedRange()) {\r\n            const newExpectations = expectations[expectations.length - 1];\r\n            const lastExpectations = expectations[expectations.length - 2];\r\n            if (!lastExpectations.expectedRange.isFixedRange()) {\r\n                if (this.doArgumentsMatch(lastExpectations, newExpectations)) {\r\n                    throw new Error(\"Previous expectation had a non fixed range.\");\r\n                }\r\n            }\r\n        }\r\n        this.expectation.expectedRange = range;\r\n    }\r\n    doArgumentsMatch(lastExpectations, newExpectations) {\r\n        if (newExpectations.expectedArgs === null || lastExpectations.expectedArgs === null) {\r\n            return lastExpectations.expectedArgs === null && newExpectations.expectedArgs === null;\r\n        }\r\n        if (newExpectations.expectedArgs.length !== lastExpectations.expectedArgs.length) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < newExpectations.expectedArgs.length; i++) {\r\n            const lastArg = lastExpectations.expectedArgs[i];\r\n            const newArg = newExpectations.expectedArgs[i];\r\n            if (!newArg.equals(lastArg)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexports.OnGoingStubs = OnGoingStubs;\r\n//# sourceMappingURL=OnGoingStubs.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.verify = exports.reset = void 0;\r\nconst InternalMocker_1 = require(\"./InternalMocker\");\r\nfunction verify(...mocks) {\r\n    for (const mock of mocks) {\r\n        verifyMock(mock);\r\n    }\r\n}\r\nexports.verify = verify;\r\nfunction reset(...mocks) {\r\n    for (const mock of mocks) {\r\n        resetMock(mock);\r\n    }\r\n}\r\nexports.reset = reset;\r\nfunction resetMock(mock) {\r\n    const internalMocker = InternalMocker_1.GetInternalMocker(mock);\r\n    const test = Object.keys(mock);\r\n    for (const key of test) {\r\n        if (key === InternalMocker_1.INTERNAL_MOCKER_NAME) {\r\n            continue;\r\n        }\r\n        const value = mock[key];\r\n        if (value) {\r\n            const internalFunctionMocker = InternalMocker_1.GetInternalMocker(value);\r\n            if (internalFunctionMocker) {\r\n                resetMock(value);\r\n            }\r\n        }\r\n    }\r\n    internalMocker.isInExpectation = false;\r\n    clearArray(internalMocker.expectations);\r\n    clearArray(internalMocker.inProgressInOrder);\r\n    clearArray(internalMocker.recordedInvocations);\r\n}\r\nfunction clearArray(array) {\r\n    while (array.length > 0) {\r\n        array.shift();\r\n    }\r\n}\r\nfunction verifyMock(mock) {\r\n    const internalMocker = InternalMocker_1.GetInternalMocker(mock);\r\n    const test = Object.keys(mock);\r\n    for (const key of test) {\r\n        if (key === InternalMocker_1.INTERNAL_MOCKER_NAME) {\r\n            continue;\r\n        }\r\n        const value = mock[key];\r\n        if (value) {\r\n            const internalFunctionMocker = InternalMocker_1.GetInternalMocker(value);\r\n            if (internalFunctionMocker) {\r\n                verifyMock(value);\r\n            }\r\n        }\r\n    }\r\n    for (const expectation of internalMocker.expectations) {\r\n        if (!expectation.expectedRange.isInRange(expectation.callCount)) {\r\n            throw new Error(buildErrorMessage(internalMocker.recordedInvocations, expectation));\r\n        }\r\n    }\r\n}\r\nfunction buildErrorMessage(args, expectationData) {\r\n    const calledLocations = buildCallLocations(expectationData.expectedArgs, args);\r\n    const specificMessage = buildRangeMessage(expectationData.expectedRange, expectationData.callCount);\r\n    const callLocation = calledLocations.length > 0 ? \"Called at:\\n\" + calledLocations.join(\"\\n\") : \"\";\r\n    return `${specificMessage}\\nExpected at: ${expectationData.location}\\n${callLocation}\\n\\u00A0`;\r\n}\r\nfunction buildRangeMessage(range, callCount) {\r\n    return `Expected ${range.describeRange()}, got ${callCount}.`;\r\n}\r\nfunction buildCallLocations(expectedArgs, args) {\r\n    const callLocations = [];\r\n    for (const invocation of args) {\r\n        if (expectedArgs === null) {\r\n            if (invocation.location !== null) {\r\n                callLocations.push(invocation.location);\r\n            }\r\n        }\r\n    }\r\n    return callLocations;\r\n}\r\n//# sourceMappingURL=Verify.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createdMocks = void 0;\r\nconst Verify_1 = require(\"./Verify\");\r\nlet createdMocks = null;\r\nexports.createdMocks = createdMocks;\r\nconst umbraTestRunner = global[\"__testRunner\"];\r\nif (umbraTestRunner) {\r\n    exports.createdMocks = createdMocks = [];\r\n    umbraTestRunner.on(\"testSuccess\", () => {\r\n        for (const mock of createdMocks) {\r\n            Verify_1.verify(mock);\r\n        }\r\n        exports.createdMocks = createdMocks = [];\r\n    });\r\n    umbraTestRunner.on(\"testFail\", () => {\r\n        exports.createdMocks = createdMocks = [];\r\n    });\r\n    umbraTestRunner.on(\"testTimeout\", () => {\r\n        exports.createdMocks = createdMocks = [];\r\n    });\r\n}\r\n//# sourceMappingURL=UmbraTestRunnerIntegration.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StrictnessMode = exports.setDefaultOptions = exports.expect = exports.spy = exports.mock = exports.inOrder = void 0;\r\nconst InternalMocker_1 = require(\"./InternalMocker\");\r\nconst MockedFunction_1 = require(\"./MockedFunction\");\r\nconst OnGoingStubs_1 = require(\"./OnGoingStubs\");\r\nconst UmbraTestRunnerIntegration_1 = require(\"./UmbraTestRunnerIntegration\");\r\nvar StrictnessMode;\r\n(function (StrictnessMode) {\r\n    StrictnessMode[StrictnessMode[\"Strict\"] = 0] = \"Strict\";\r\n    StrictnessMode[StrictnessMode[\"Loose\"] = 1] = \"Loose\";\r\n})(StrictnessMode || (StrictnessMode = {}));\r\nexports.StrictnessMode = StrictnessMode;\r\nclass InvocationHandler {\r\n    constructor(clazz, realObject, mockName, options) {\r\n        this.cachedStubs = {};\r\n        this.cachedFunctionStub = null;\r\n        this.clazz = clazz;\r\n        this.realObject = realObject;\r\n        this.mockName = mockName;\r\n        this.options = options;\r\n    }\r\n    apply(target, thisArg, argArray) {\r\n        if (target === this.realObject) {\r\n            this.mockSingleFunctionIfNecessary(this.realObject);\r\n            return this.cachedFunctionStub(...argArray);\r\n        }\r\n        target(argArray);\r\n    }\r\n    get(target, p, receiver) {\r\n        if (p === InternalMocker_1.INTERNAL_MOCKER_NAME || Object.getPrototypeOf(Function)[p] !== undefined) {\r\n            this.mockSingleFunctionIfNecessary(target[p]);\r\n            return this.cachedFunctionStub[p];\r\n        }\r\n        if (this.clazz) {\r\n            const realMethod = this.clazz[p];\r\n            if (realMethod === null || realMethod === undefined) {\r\n                const validMethods = Object.getOwnPropertyNames(this.clazz).join(\", \");\r\n                throw new Error(`Method \"${p.toString()}\" was called on class \"${this.clazz.constructor.name}\". ` +\r\n                    `Ensure method exists on prototype. Valid methods: [${validMethods}]`);\r\n            }\r\n        }\r\n        if (!this.cachedStubs[p]) {\r\n            const mockedFunction = MockedFunction_1.createMockedFunction();\r\n            const mockName = this.mockName !== null ? `${this.mockName}.${p.toString()}` : p.toString();\r\n            Object.defineProperty(mockedFunction, \"name\", { value: mockName });\r\n            const internalMocker = InternalMocker_1.CreateInternalMocker(mockedFunction, target[p], mockName, this.options);\r\n            if (internalMocker.isInExpectation) {\r\n                internalMocker.isInExpectation = false;\r\n            }\r\n            this.cachedStubs[p] = mockedFunction;\r\n        }\r\n        return this.cachedStubs[p];\r\n    }\r\n    enumerate(target) {\r\n        return this.ownKeys(target);\r\n    }\r\n    ownKeys(target) {\r\n        const test2 = Object.keys(this.cachedStubs);\r\n        return test2;\r\n    }\r\n    getOwnPropertyDescriptor(target, p) {\r\n        return Object.getOwnPropertyDescriptor(this.cachedStubs, p);\r\n    }\r\n    isExtensible(target) {\r\n        return false;\r\n    }\r\n    mockSingleFunctionIfNecessary(realFunction) {\r\n        if (!this.cachedFunctionStub) {\r\n            const mockedFunction = MockedFunction_1.createMockedFunction();\r\n            if (this.mockName !== null) {\r\n                Object.defineProperty(mockedFunction, \"name\", { value: this.mockName });\r\n            }\r\n            const internalMocker = InternalMocker_1.CreateInternalMocker(mockedFunction, realFunction, this.mockName, this.options);\r\n            if (internalMocker.isInExpectation) {\r\n                internalMocker.isInExpectation = false;\r\n            }\r\n            this.cachedFunctionStub = mockedFunction;\r\n        }\r\n    }\r\n}\r\nlet defaultOptions = {\r\n    strictMode: StrictnessMode.Strict,\r\n    inOrder: false\r\n};\r\nfunction setDefaultOptions(options) {\r\n    defaultOptions = Object.assign(defaultOptions, options);\r\n}\r\nexports.setDefaultOptions = setDefaultOptions;\r\nfunction mock(clazz, mockName, options = defaultOptions) {\r\n    const stubFunction = (() => { });\r\n    if (typeof clazz === \"string\") {\r\n        mockName = clazz;\r\n        clazz = undefined;\r\n    }\r\n    if (!mockName) {\r\n        mockName = null;\r\n    }\r\n    const proxy = new Proxy(stubFunction, new InvocationHandler(clazz ? clazz.prototype : null, stubFunction, mockName, options));\r\n    if (UmbraTestRunnerIntegration_1.createdMocks) {\r\n        UmbraTestRunnerIntegration_1.createdMocks.push(proxy);\r\n    }\r\n    return proxy;\r\n}\r\nexports.mock = mock;\r\nfunction spy(realObject, options = defaultOptions) {\r\n    return new Proxy(realObject, new InvocationHandler(Object.getPrototypeOf(realObject), realObject, null, options));\r\n}\r\nexports.spy = spy;\r\nfunction expect(mockedFunction) {\r\n    return new OnGoingStubs_1.OnGoingStubs(mockedFunction);\r\n}\r\nexports.expect = expect;\r\nfunction inOrder(...stubs) {\r\n    const inOrderExpectation = {\r\n        expectations: [],\r\n        currentIndex: 0\r\n    };\r\n    const castStubs = stubs;\r\n    for (const stub of castStubs) {\r\n        const expectation = stub.getExpectation();\r\n        inOrderExpectation.expectations.push(expectation);\r\n        expectation.inOrderOverride = inOrderExpectation;\r\n    }\r\n}\r\nexports.inOrder = inOrder;\r\n//# sourceMappingURL=Mock.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.newCapture = exports.matcher = exports.regexMatches = exports.startsWith = exports.lte = exports.lt = exports.gte = exports.gt = exports.eq = exports.any = exports.setDefaultOptions = exports.inOrder = exports.verify = exports.reset = exports.expect = exports.spy = exports.mock = void 0;\r\nconst umbra_util_1 = require(\"@umbra-test/umbra-util\");\r\nObject.defineProperty(exports, \"any\", { enumerable: true, get: function () { return umbra_util_1.any; } });\r\nObject.defineProperty(exports, \"eq\", { enumerable: true, get: function () { return umbra_util_1.eq; } });\r\nObject.defineProperty(exports, \"gt\", { enumerable: true, get: function () { return umbra_util_1.gt; } });\r\nObject.defineProperty(exports, \"gte\", { enumerable: true, get: function () { return umbra_util_1.gte; } });\r\nObject.defineProperty(exports, \"lt\", { enumerable: true, get: function () { return umbra_util_1.lt; } });\r\nObject.defineProperty(exports, \"lte\", { enumerable: true, get: function () { return umbra_util_1.lte; } });\r\nObject.defineProperty(exports, \"matcher\", { enumerable: true, get: function () { return umbra_util_1.matcher; } });\r\nObject.defineProperty(exports, \"regexMatches\", { enumerable: true, get: function () { return umbra_util_1.regexMatches; } });\r\nObject.defineProperty(exports, \"startsWith\", { enumerable: true, get: function () { return umbra_util_1.startsWith; } });\r\nconst Capture_1 = require(\"./Capture\");\r\nObject.defineProperty(exports, \"newCapture\", { enumerable: true, get: function () { return Capture_1.newCapture; } });\r\nconst Mock_1 = require(\"./Mock\");\r\nObject.defineProperty(exports, \"expect\", { enumerable: true, get: function () { return Mock_1.expect; } });\r\nObject.defineProperty(exports, \"inOrder\", { enumerable: true, get: function () { return Mock_1.inOrder; } });\r\nObject.defineProperty(exports, \"mock\", { enumerable: true, get: function () { return Mock_1.mock; } });\r\nObject.defineProperty(exports, \"setDefaultOptions\", { enumerable: true, get: function () { return Mock_1.setDefaultOptions; } });\r\nObject.defineProperty(exports, \"spy\", { enumerable: true, get: function () { return Mock_1.spy; } });\r\nconst Verify_1 = require(\"./Verify\");\r\nObject.defineProperty(exports, \"reset\", { enumerable: true, get: function () { return Verify_1.reset; } });\r\nObject.defineProperty(exports, \"verify\", { enumerable: true, get: function () { return Verify_1.verify; } });\r\nrequire(\"./UmbraTestRunnerIntegration\");\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TestRunner = exports.startsWith = exports.spy = exports.setMockOptions = exports.regexMatches = exports.newCapture = exports.matcher = exports.lte = exports.lt = exports.inOrder = exports.gte = exports.gt = exports.eq = exports.any = exports.verify = exports.mock = exports.assert = exports.expect = void 0;\r\nrequire(\"umbra-cli/lib/StartupStages/ExportGlobals\");\r\nconst umbra_test_runner_1 = require(\"@umbra-test/umbra-test-runner\");\r\nObject.defineProperty(exports, \"TestRunner\", { enumerable: true, get: function () { return umbra_test_runner_1.TestRunner; } });\r\nconst umbra_assert_1 = require(\"umbra-assert\");\r\nObject.defineProperty(exports, \"assert\", { enumerable: true, get: function () { return umbra_assert_1.assert; } });\r\nconst umbra_test_mock_1 = require(\"umbra-test-mock\");\r\nObject.defineProperty(exports, \"any\", { enumerable: true, get: function () { return umbra_test_mock_1.any; } });\r\nObject.defineProperty(exports, \"eq\", { enumerable: true, get: function () { return umbra_test_mock_1.eq; } });\r\nObject.defineProperty(exports, \"expect\", { enumerable: true, get: function () { return umbra_test_mock_1.expect; } });\r\nObject.defineProperty(exports, \"gt\", { enumerable: true, get: function () { return umbra_test_mock_1.gt; } });\r\nObject.defineProperty(exports, \"gte\", { enumerable: true, get: function () { return umbra_test_mock_1.gte; } });\r\nObject.defineProperty(exports, \"inOrder\", { enumerable: true, get: function () { return umbra_test_mock_1.inOrder; } });\r\nObject.defineProperty(exports, \"lt\", { enumerable: true, get: function () { return umbra_test_mock_1.lt; } });\r\nObject.defineProperty(exports, \"lte\", { enumerable: true, get: function () { return umbra_test_mock_1.lte; } });\r\nObject.defineProperty(exports, \"matcher\", { enumerable: true, get: function () { return umbra_test_mock_1.matcher; } });\r\nObject.defineProperty(exports, \"mock\", { enumerable: true, get: function () { return umbra_test_mock_1.mock; } });\r\nObject.defineProperty(exports, \"newCapture\", { enumerable: true, get: function () { return umbra_test_mock_1.newCapture; } });\r\nObject.defineProperty(exports, \"regexMatches\", { enumerable: true, get: function () { return umbra_test_mock_1.regexMatches; } });\r\nObject.defineProperty(exports, \"setMockOptions\", { enumerable: true, get: function () { return umbra_test_mock_1.setDefaultOptions; } });\r\nObject.defineProperty(exports, \"spy\", { enumerable: true, get: function () { return umbra_test_mock_1.spy; } });\r\nObject.defineProperty(exports, \"startsWith\", { enumerable: true, get: function () { return umbra_test_mock_1.startsWith; } });\r\nObject.defineProperty(exports, \"verify\", { enumerable: true, get: function () { return umbra_test_mock_1.verify; } });\r\n//# sourceMappingURL=index.js.map"],"names":["Object","defineProperty","exports","value","[object Object]","fn","name","writable","length","Promise","resolve","reject","result","Error","e","TimeoutError","message","elapsedMs","timeoutMs","super","this","promise","startTime","Date","now","timerId","timeoutPromise","setTimeout","catch","clearTimeout","race","then","to","from","entryType","stopOnFirstFail","union","arrayA","arrayB","item","indexOf","push","without","array","indexOfItem","splice","onListeners","onceListeners","event","callback","args","call","promises","all","results","queue","element","stack","pop","shift","i","j","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","done","apply","QueueStackTypes","config","eventEmitter","SimpleEventEmitter_1","SimpleEventEmitter","asyncPromisifier","AsyncPromisifier_1","AsyncPromisifier","timeoutPromisifier","TimeoutPromisifier_1","TimeoutPromisifier","testQueueStack","queueStacks","before","QueueStack_1","QueueStack","beforeEach","after","afterEach","currentTest","testRunCancelled","describe","title","execBlock","throwIfTestInProgress","pushToCurrentTestQueue","describeOnly","describeSkip","options","undefined","it","itOnly","itSkip","runNextTestQueue","evaluatedTest","firstOnlyIndex","executeTest","tests","evaluateQueueWithTimeout","resetRunResults","runResults","elapsedTimeMs","totalTests","totalSuccesses","totalFailures","totalTimeouts","failureInfo","timeoutInfo","TestRunnerConfig_1","mergeConfig","DefaultTestRunnerConfig_1","DefaultTestRunnerConfig","only","skip","absolutePath","lastFilePathSet","on","once","off","pushOnTop","currentRun","type","reset","testQueue","titleChain","evaluatedBefores","skipAllTests","currentEntry","testEntry","absoluteFilePath","entry","currentlyExecutingFilePath","emit","evaluateDescribe","evaluateTest","concat","pushStack","exec","popStack","shiftStack","describeDurationMs","executeTestCallback","timeoutValue","getTimeoutValue","wrap","emitAndWaitForCompletion","testDurationMs","error","describeChain","evaluateQueue","queueStack","traverseLevelOrder","traverseInverseLevelOrder","timeout","enumerable","get","TestRunner_1","TestRunner","deepEqual","a","b","getTime","exists","key","aKeys","bKeys","prototype","keys","sort","deepEqualObject","ArrayUtils_1","compareDefault","compare","initialValues","compareFunction","insert","foundIndex","searchInternal","highestIndex","index","search","ordering","high","low","Math","floor","object","RegExp","toString","mockerData","mock","internalMocker","GetMockerDataSafe","mockName","JSON","stringify","validator","precedence","matches","description","equals","other","realValue","Stringify_1","printObject","DeepEqual_1","startsWith","test","func","SortedArray_1","SortedArray","ArgumentValidator_1","any","eq","gt","gte","lt","lte","matcher","regexMatches","INTERNAL_MOCKER_NAME","AssertionError","ourMessage","theirMessage","assert","output","expected","actual","umbra_util_1","is","strictEqual","target","keyPath","pathArray","split","path","newResult","fail","actualValue","equal","errorMessage","notEqual","isTrue","Array","isArray","entryKey","entryValue","entries","values","contains","Expect","Assert_1","has","isTruthy","isFalsy","Expect_1","expect","CaptureInternal","first","last","arg","GetInternalMockerSafe","mockedFunction","realFunction","expectations","recordedInvocations","inProgressInOrder","isInExpectation","depth","stackTrace","stackTraceLines","callingLocation","findBestArgumentMatcher","argumentMatcherArray","inOrderOverride","expectedArgs","argLengthDifference","aMatcherPrecedence","sumMatchers","expectation","getData","callCount","expectedRange","end","verifyArgumentMatcher","sum","isValid","argumentValidator","defaultExpectationOptions","includeLocation","buildExpectationString","argsString","argData","argumentValdiatorArg","join","describeRange","location","mockedFunc","InternalMocker_1","GetInternalMocker","currentLocation","StackTraceParser_1","StacktraceUtils","getCurrentMockLocation","params","expectationData","expectedInvocation","currentIndex","expectedInvocationString","inProgressIndex","answer","strictMode","Mock_1","StrictnessMode","Strict","wording","argsStringified","argsText","start","count","Number","MAX_SAFE_INTEGER","isFixedRange","hasNoUpperBound","createDirectReturnAnswer","normalizeMatcherArgs","normalizedArgs","argMatcher","OnGoingStubs","umbra_assert_1","atMostCount","atLeastCount","timesCount","currentArgumentExpectations","Range_1","Range","atLeast","createDirectThrowAnswer","createCallRealMethodAnwser","createPromiseResolveAnswer","createPromiseRejectAnswer","setExpectedRange","times","atMostInvocations","atLeastInvocations","range","newExpectations","lastExpectations","doArgumentsMatch","lastArg","resetMock","clearArray","verifyMock","isInRange","buildErrorMessage","calledLocations","callLocations","invocation","buildCallLocations","specificMessage","callLocation","mocks","createdMocks","umbraTestRunner","global","Verify_1","verify","InvocationHandler","clazz","realObject","cachedStubs","cachedFunctionStub","argArray","mockSingleFunctionIfNecessary","p","receiver","getPrototypeOf","Function","realMethod","validMethods","getOwnPropertyNames","constructor","MockedFunction_1","createMockedFunction","CreateInternalMocker","ownKeys","getOwnPropertyDescriptor","defaultOptions","inOrder","assign","stubFunction","proxy","Proxy","UmbraTestRunnerIntegration_1","OnGoingStubs_1","stubs","inOrderExpectation","castStubs","stub","getExpectation","Capture_1","newCapture","setDefaultOptions","spy","umbra_test_runner_1","umbra_test_mock_1"],"mappings":"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"}